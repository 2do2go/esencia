{"version":3,"sources":["lib/collection.js","lib/componentsManager.js","lib/esencia.js","lib/model.js","lib/router.js","lib/utils/exec.js","lib/view.js"],"names":["_","_require","backbone","execUtils","Collection","sync","method","collection","options","prepareOptions","getFakeBaseMethod","prototype","call","exec","extend","parse","success","resp","fetch","reset","context","trigger","wrapError","module","exports","View","ComponentsManager","pick","componentManagerOptions","components","tree","initialize","apply","arguments","componentOptions","Events","rootComponentEl","addRootComponent","RootView","el","add","name","parent","defaults","process","component","isUndefined","uniqueId","isString","Error","isNull","get","remove","names","callback","isArray","noop","_calculateTree","oldTree","_applyTree","children","self","calculateHashedTree","length","parentNames","nodes","chain","uniq","map","has","node","push","compact","value","each","isEmpty","filter","some","container","_isTreeNodeChanged","oldNode","Boolean","view","isWaiting","attached","isUnchanged","params","iterate","oldChildren","onViewResolve","setData","setView","renderViews","attachViews","render","index","detach","extendOwn","result","viewOptions","listenToOnce","Router","Model","model","serverAttrs","set","root","pushState","namedParameters","nowhereUrl","config","autoloadModules","modulesPath","defaultModuleName","onModuleError","routerOptions","constructor","componentsManager","router","urlParams","modules","history","route","setModule","_populateUrlParams","key","isObject","isFunction","url","defaultUrlParams","args","_defaultMiddleware","navigate","fragment","indexOf","substring","force","replace","omit","qs","toFragment","val","undefined","next","middleware","defaultMiddleware","moduleName","split","find","identity","require","moduleInit","start","DEFAULT_EXEC_TYPE","urlError","error","type","dataType","contentType","processData","data","JSON","stringify","baseMethodsMap","toUpperCase","$","splice","Array","delegateEventSplitter","nestedEventTypes","templateHelpers","waitsCounter","waitAvailable","views","collections","models","template","_prepareEvents","_prepareViews","wait","delegateNestedEvents","once","defer","_render","html","renderTemplate","getTemplateData","$el","setElement","_ensureElement","$container","attach","viewsGroup","first","containerEl","domChanged","$els","append","_updateViews","setViews","appendView","_insertViews","appendViews","prependView","prependViews","insertView","insertViews","removeView","getView","_removeViews","removeViews","getViews","clone","concat","removedViews","viewObjs","viewObj","sortBy","undelegateNestedEvents","element","$previousEl","_setElement","replaceWith","delegateEvents","events","entities","listeners","_nestedEventsHash","listener","entity","listenTo","eventName","handler","stopListening","typeEventsHash","match","entityKeys","bind","entityKey","afterAttach","previousView","attr","cid","detachViews","beforeDetach","removeData","removeAttr","undelegateEvents","getClosestView","selector","$selector","is","closest"],"mappings":"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","file":"esencia.js","sourceRoot":".","sourcesContent":["'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar execUtils = require('./utils/exec');\n\nvar Collection = {};\n\n/*\n * Override `sync` to add exec custom method functionality\n */\n\nCollection.sync = function(method, collection, options) {\n\toptions = execUtils.prepareOptions(method, collection, options);\n\tmethod = execUtils.getFakeBaseMethod(options);\n\treturn backbone.Collection.prototype.sync.call(\n\t\tthis, method, collection, options\n\t);\n};\n\n/*\n * Exec custom non-REST method on collection\n * It trigger `exec:[method]` event after success method exec\n *\n * @param {String} method\n * @param {Object} options\n */\n\nCollection.exec = function(method, options) {\n\toptions = _.extend({parse: true}, options);\n\tvar collection = this;\n\tvar success = options.success;\n\toptions.success = function(resp) {\n\t\tif (options.fetch) collection[options.reset ? 'reset' : 'set'](resp, options);\n\t\tif (success) success.call(options.context, collection, resp, options);\n\t\tcollection.trigger('exec:' + method, collection, resp, options);\n\t};\n\texecUtils.wrapError(this, options);\n\treturn this.sync(method, this, options);\n};\n\nmodule.exports = backbone.Collection.extend(Collection);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar View = require('./view');\n\nvar ComponentsManager = function(options) {\n\t// populate ComponentsManager instance with fields from options\n\t_.extend(this, _.pick(options, componentManagerOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\t// all components hash\n\tthis.components = {};\n\n\t// current components tree that rendered at this moment\n\tthis.tree = null;\n\n\tthis.initialize.apply(this, arguments);\n};\n\nvar componentManagerOptions = ['rootComponentEl', 'viewOptions'];\n\n var componentOptions = [\n\t'name', 'parent', 'container', 'View', 'models', 'collections', 'viewOptions'\n];\n\n_.extend(ComponentsManager.prototype, backbone.Events, {\n\trootComponentEl: 'html',\n\n\t/*\n\t * Initialize is an empty function by default. Override it with your own\n\t * initialization logic.\n\t */\n\n\tinitialize: function() {},\n\n\t/*\n\t * Add root component to components list\n\t */\n\n\taddRootComponent: function() {\n\t\tvar RootView = View.extend({\n\t\t\tel: this.rootComponentEl\n\t\t});\n\n\t\tthis.add({\n\t\t\tname: '',\n\t\t\tparent: null,\n\t\t\tView: RootView\n\t\t});\n\t},\n\n\t/*\n\t * Add component to components list\n\t *\n\t * @param {Object} options - component options\n\t */\n\n\tadd: function(options) {\n\t\toptions = _({}).defaults(options, {\n\t\t\tparent: '',\n\t\t\tprocess: false\n\t\t});\n\n\t\tvar component = _(options).pick(componentOptions);\n\n\t\t// generate uniq component name if name is omitted\n\t\tif (_.isUndefined(component.name)) {\n\t\t\tcomponent.name = _.uniqueId('auto-named-component');\n\t\t}\n\n\t\tif (!_.isString(component.name)) {\n\t\t\tthrow new Error('Component `name` option should be a string');\n\t\t}\n\n\t\tif (component.name in this.components) {\n\t\t\tthrow new Error('Duplicate component with name \"' + component.name + '\"');\n\t\t}\n\n\t\tif (!component.View) {\n\t\t\tthrow new Error('Component `View` option is required');\n\t\t}\n\n\t\tif (!_.isString(component.parent) && !_.isNull(component.parent)) {\n\t\t\tthrow new Error('Component `parent` option should be a string or null');\n\t\t}\n\n\t\tthis.components[component.name] = component;\n\n\t\t// process components tree in force mode\n\t\tif (options.process) {\n\t\t\tthis.process(component.name);\n\t\t}\n\n\t\treturn component;\n\t},\n\n\t/*\n\t * Get component by name\n\t *\n\t * @param {String} name - component name\n\t */\n\n\tget: function(name) {\n\t\treturn this.components[name] || null;\n\t},\n\n\t/*\n\t * Remove component by name\n\t *\n\t * @param {String} name - component name\n\t */\n\n\tremove: function(name) {\n\t\tdelete this.components[name];\n\t},\n\n\t/*\n\t * Process components tree by name(s) and call a callback on done\n\t *\n\t * @param {String|String[]} names - component name or names list\n\t * @params {Function} callback\n\t */\n\n\tprocess: function(names, callback) {\n\t\tif (!_.isArray(names)) names = [names];\n\t\tcallback = callback || _.noop;\n\n\t\tvar tree = this._calculateTree(names);\n\t\tvar oldTree = this.tree;\n\t\tthis.tree = [];\n\n\t\tthis._applyTree({\n\t\t\tparent: {children: this.tree},\n\t\t\toldTree: oldTree,\n\t\t\ttree: tree\n\t\t}, callback);\n\t},\n\n\t_calculateTree: function(names) {\n\t\tvar self = this;\n\n\t\t// internal function for recursion\n\t\tvar calculateHashedTree = function(names, tree) {\n\t\t\t// exit with empty tree if names list is empty\n\t\t\tif (!names.length) return tree;\n\n\t\t\tvar parentNames = [];\n\n\t\t\t// create component nodes\n\t\t\tvar nodes = _(names)\n\t\t\t\t.chain()\n\t\t\t\t.uniq()\n\t\t\t\t.map(function(name) {\n\t\t\t\t\tvar component = self.components[name];\n\n\t\t\t\t\tif (!component) {\n\t\t\t\t\t\tthrow new Error('Unknown component with name \"' + name + '\"');\n\t\t\t\t\t}\n\n\t\t\t\t\t// skip component if it is already in the tree\n\t\t\t\t\tif (_(tree).has(component.name)) return null;\n\n\t\t\t\t\t// create node\n\t\t\t\t\tvar node = {\n\t\t\t\t\t\tcomponent: component,\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t};\n\n\t\t\t\t\t// add parent name to the list\n\t\t\t\t\tif (_.isString(component.parent)) {\n\t\t\t\t\t\tparentNames.push(component.parent);\n\t\t\t\t\t}\n\n\t\t\t\t\t// add nodes to the hashed tree first to prevent cycles\n\t\t\t\t\ttree[component.name] = node;\n\n\t\t\t\t\treturn node;\n\t\t\t\t})\n\t\t\t\t.compact()\n\t\t\t\t.value();\n\n\t\t\t// calculate new tree for parent components\n\t\t\ttree = calculateHashedTree(parentNames, tree);\n\n\t\t\t// add each node to the parent children list if component has a parent\n\t\t\t_(nodes).each(function(node) {\n\t\t\t\tif (_.isString(node.component.parent)) {\n\t\t\t\t\ttree[node.component.parent].children.push(node);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn tree;\n\t\t};\n\n\t\tvar tree = calculateHashedTree(names, {});\n\n\t\tif (_.isEmpty(tree)) {\n\t\t\tthrow new Error('Calculated components tree is empty');\n\t\t}\n\n\t\t// filter root components\n\t\ttree = _(tree).filter(function(node) {\n\t\t\treturn _.isNull(node.component.parent);\n\t\t});\n\n\t\tif (!tree.length) {\n\t\t\tthrow new Error(\n\t\t\t\t'Calculated components tree should have at least one root node'\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t_(tree).some(function(node) {\n\t\t\t\treturn node.component.container;\n\t\t\t})\n\t\t) {\n\t\t\tthrow new Error('Root component could not have a container');\n\t\t}\n\n\t\treturn tree;\n\t},\n\n\t_isTreeNodeChanged: function(oldNode, node) {\n\t\treturn Boolean(\n\t\t\t!oldNode ||\n\t\t\toldNode.component.name !== node.component.name ||\n\t\t\t!oldNode.view ||\n\t\t\toldNode.view instanceof node.component.View === false ||\n\t\t\toldNode.view.isWaiting() ||\n\t\t\t!oldNode.view.attached ||\n\t\t\t!oldNode.view.isUnchanged()\n\t\t);\n\t},\n\n\t_applyTree: function(params, callback) {\n\t\tvar self = this;\n\n\t\tvar parent = params.parent;\n\n\t\tvar iterate = function(oldNode, node) {\n\t\t\t// clear children field in new node because it will set recursive\n\t\t\t// and should be empty in error case\n\t\t\tvar children = node.children;\n\t\t\tnode.children = [];\n\n\t\t\tparent.children.push(node);\n\n\t\t\tvar oldChildren = oldNode ? oldNode.children : [];\n\n\t\t\tself._applyTree({\n\t\t\t\tparent: node,\n\t\t\t\toldTree: oldChildren,\n\t\t\t\ttree: children\n\t\t\t}, callback);\n\t\t};\n\n\t\tvar onViewResolve = function(node) {\n\t\t\tnode.view.setData();\n\n\t\t\tif (node.component.container) {\n\t\t\t\tparent.view\n\t\t\t\t\t.setView(node.view, node.component.container)\n\t\t\t\t\t.renderViews(/* TODO {include: [node.component.container]} */)\n\t\t\t\t\t.attachViews(/* TODO {include: [node.component.container]} */);\n\t\t\t} else {\n\t\t\t\tnode.view.render();\n\t\t\t}\n\n\t\t\t// stop processing old components tree\n\t\t\titerate(null, node);\n\t\t};\n\n\t\t_(params.tree).each(function(node, index) {\n\t\t\t// TODO get oldNode in better way\n\t\t\tvar oldNode = params.oldTree[index] || null;\n\n\t\t\tif (this._isTreeNodeChanged(oldNode, node)) {\n\t\t\t\tif (oldNode && oldNode.view) {\n\t\t\t\t\tif (oldNode.component.container) {\n\t\t\t\t\t\t// remove old view if container for new view dirrent\n\t\t\t\t\t\tif (oldNode.component.container !== node.component.container) {\n\t\t\t\t\t\t\toldNode.view.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// detach old view if it has not a container\n\t\t\t\t\t\toldNode.view.detach();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// create new view\n\t\t\t\tnode.view = new (node.component.View)(\n\t\t\t\t\t_(node.component)\n\t\t\t\t\t\t.chain()\n\t\t\t\t\t\t.pick('models', 'collections')\n\t\t\t\t\t\t.extendOwn(_(node.component).result('viewOptions'), this.viewOptions)\n\t\t\t\t\t\t.value()\n\t\t\t\t);\n\n\t\t\t\tif (node.view.isWaiting()) {\n\t\t\t\t\t// wait when view will be resolved\n\t\t\t\t\tself.listenToOnce(node.view, 'resolve', function() {\n\t\t\t\t\t\tonViewResolve(node);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tonViewResolve(node);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// save old view to new node\n\t\t\t\tnode.view = oldNode.view;\n\n\t\t\t\t// set data and re-render old view\n\t\t\t\tnode.view.setData();\n\t\t\t\tnode.view.render(/* TODO {exclude: [children containers]} */);\n\n\t\t\t\t// proprocessing old components tree\n\t\t\t\titerate(oldNode, node);\n\t\t\t}\n\t\t});\n\t}\n});\n\n/*\n * There is no good exports of extend method from backbone.\n * Take it from View and add to ComponentsManager\n *  because no other ways, ughh :-S.\n */\n\nComponentsManager.extend = View.extend;\n\nmodule.exports = ComponentsManager;\n","'use strict';\n\nvar Router = require('./router');\nvar Collection = require('./collection');\nvar Model = require('./model');\nvar View = require('./view');\nvar ComponentsManager = require('./componentsManager');\n\nmodule.exports.Router = Router;\nmodule.exports.Collection = Collection;\nmodule.exports.Model = Model;\nmodule.exports.View = View;\nmodule.exports.ComponentsManager = ComponentsManager;\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar execUtils = require('./utils/exec');\n\nvar Model = {};\n\n/*\n * Override `sync` to add exec custom method functionality\n */\n\nModel.sync = function(method, model, options) {\n\toptions = execUtils.prepareOptions(method, model, options);\n\tmethod = execUtils.getFakeBaseMethod(options);\n\treturn backbone.Model.prototype.sync.call(this, method, model, options);\n};\n\n/*\n * Exec custom non-REST method on model\n * It trigger `exec:[method]` event after success method exec\n *\n * @param {String} method\n * @param {Object} options\n */\n\nModel.exec = function(method, options) {\n\toptions = _.extend({parse: true}, options);\n\tvar model = this;\n\tvar success = options.success;\n\toptions.success = function(resp) {\n\t\tif (options.fetch) {\n\t\t\tvar serverAttrs = options.parse ? model.parse(resp, options) : resp;\n\t\t\tif (!model.set(serverAttrs, options)) return false;\n\t\t}\n\t\tif (success) success.call(options.context, model, resp, options);\n\t\tmodel.trigger('exec:' + method, model, resp, options);\n\t};\n\texecUtils.wrapError(this, options);\n\treturn this.sync(method, this, options);\n};\n\nmodule.exports = backbone.Model.extend(Model);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar ComponentsManager = require('./componentsManager');\n\n/**\n * Router extends default backbone Router\n */\n\nvar Router = {\n\troot: '/',\n\tpushState: false,\n\tnamedParameters: false,\n\tnowhereUrl: '___',\n\tconfig: {},\n\tautoloadModules: true,\n\tmodulesPath: 'modules/',\n\tdefaultModuleName: 'main',\n\tonModuleError: function() {}\n};\n\nvar routerOptions = [\n\t'root', 'pushState', 'namedParameters', 'nowhereUrl', 'config',\n\t'autoloadModules', 'modulesPath', 'defaultModuleName', 'onModuleError'\n];\n\n/*\n * @constructor\n * @param {Object} [options]\n */\n\nRouter.constructor = function(options) {\n\toptions = options || {};\n\n\t// populate Router instance with fields from options\n\t_.extend(this, _.pick(options, routerOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\tthis.componentsManager = new ComponentsManager(\n\t\t_.extend({}, options, {viewOptions: {router: this}})\n\t);\n\n\tthis.urlParams = {};\n\tthis.modules = {};\n\n\tthis.history = backbone.history;\n\n\t/*\n\t * All query parameters can be passed in a single hash using the key\n\t * referenced from the route definition (backbone queryparams will\n\t * do it for us)\n\t */\n\n\tbackbone.Router.namedParameters = this.namedParameters;\n\n\tbackbone.Router.apply(this, arguments);\n\n\tif (options.autoloadModules) {\n\t\tthis.route('*url', function(params) {\n\t\t\tthis.setModule(params);\n\t\t});\n\t}\n};\n\n/*\n * Extend all arguments to single object and replace urlParams with it\n *\n * @param {Object | Function} params1\n * @param {Object | Function} params2\n * etc. ...\n */\n\nRouter._populateUrlParams = function(/* params1, params2, ... */) {\n\tvar self = this;\n\n\t// clean old values from urlParams object\n\tvar key;\n\tfor (key in this.urlParams) {\n\t\tif (_(this.urlParams).has(key)) {\n\t\t\tdelete this.urlParams[key];\n\t\t}\n\t}\n\n\t// populate urlParams with new params\n\t_(arguments)\n\t\t.chain()\n\t\t.filter(_.isObject)\n\t\t.each(function(params) {\n\t\t\tparams = _.isFunction(params) ? params.call(self) : params;\n\t\t\t_.extendOwn(self.urlParams, params);\n\t\t});\n\n\treturn this.urlParams;\n};\n\n/*\n * Add new component to components manager\n *\n * @param {Object} options - component options\n */\n\nRouter.component = function(options) {\n\tvar self = this;\n\n\tvar component = this.componentsManager.add(options);\n\n\t// bind component to route\n\tif (!_.isUndefined(options.url)) {\n\t\tthis.route(options.url, component.name, function(params) {\n\t\t\tself._populateUrlParams(options.defaultUrlParams, params);\n\n\t\t\t// process components tree\n\t\t\tself.componentsManager.process(component.name);\n\t\t});\n\t}\n};\n\n/*\n * Override `route` to add middleware processing functionality\n */\n\nRouter.route = function(url, name, callback) {\n\tvar router = this;\n\n\tif (_.isFunction(name)) {\n\t\tcallback = name;\n\t\tname = '';\n\t}\n\n\tbackbone.Router.prototype.route.call(this, url, name, function() {\n\t\tvar args = arguments;\n\n\t\trouter._defaultMiddleware({\n\t\t\turl: url,\n\t\t\tname: name,\n\t\t\tcallback: callback\n\t\t}, function() {\n\t\t\tcallback.apply(router, args);\n\t\t});\n\t});\n};\n\n/*\n * Override `navigate`\n *\n * @param {String} fragment\n * @param {Object} [options] - hash of params\n * @param {Object} [options.qs] - query string hash\n */\n\nRouter.navigate = function(fragment, options) {\n\toptions = options || {};\n\n\tif (fragment.indexOf(this.root) === 0) {\n\t\tfragment = fragment.substring(this.root.length);\n\t}\n\n\t// force to go to the selected fragment even if we currently on it\n\tif (options.force) {\n\t\tthis.navigate(this.nowhereUrl, {\n\t\t\treplace: options.replace,\n\t\t\ttrigger: false\n\t\t});\n\n\t\toptions = _(options).chain().omit('force').extend({replace: true}).value();\n\n\t\treturn this.navigate(fragment, options);\n\t}\n\n\t// set `trigger` to true by default\n\toptions = _(options || {}).defaults({\n\t\ttrigger: true,\n\t\tparams: {}\n\t});\n\n\t// add support of query string using `toFragment` from backbone.queryparams\n\tvar qs = options.qs;\n\n\tif (this.toFragment && qs) {\n\t\t// reject undefined and null qs parameters\n\t\t_(qs).each(function(val, key, qs) {\n\t\t\tif (val === undefined || val === null) delete qs[key];\n\t\t});\n\n\t\tfragment = this.toFragment(fragment, qs);\n\n\t\tdelete options.qs;\n\t}\n\n\tbackbone.Router.prototype.navigate.call(this, fragment, options);\n};\n\n\n/*\n * Default middleware function\n */\n\nRouter._defaultMiddleware = function(route, next) {\n\tnext();\n};\n\n/**\n * Use passed function as `middleware`\n *\n * @param {Function} middleware - middleware function,\n * `route` and `next` will be passed as arguments.\n * context (`this`) is link to the router object.\n */\n\nRouter.middleware = function(middleware) {\n\tvar router = this;\n\n\tvar defaultMiddleware = this._defaultMiddleware;\n\n\tthis._defaultMiddleware = function(route, next) {\n\t\tdefaultMiddleware.call(router, route, function() {\n\t\t\tmiddleware.call(router, route, next);\n\t\t});\n\t};\n\n\treturn this;\n};\n\n/*\n * Require module file and init it\n *\n * @param {String} params.url Url without query string\n */\n\nRouter.setModule = function(params) {\n\tvar router = this;\n\n\tvar url = params.url;\n\tdelete params.url;\n\n\tvar moduleName = _(url.split('/')).find(_.identity) || this.defaultModuleName;\n\n\t// require module file\n\trequire([this.modulesPath + moduleName], function(moduleInit) {\n\t\t// if module is loaded first time\n\t\tif (!router.modules[moduleName]) {\n\t\t\t// init it\n\t\t\tmoduleInit(router);\n\n\t\t\t// set module init flag to true\n\t\t\trouter.modules[moduleName] = true;\n\n\t\t\t// and navigate again with force flag\n\t\t\trouter.navigate(url, {\n\t\t\t\treplace: true,\n\t\t\t\tforce: true,\n\t\t\t\tqs: params\n\t\t\t});\n\t\t}\n\t}, this.onModuleError);\n};\n\n/*\n * Start routes handling\n */\n\nRouter.start = function() {\n\tthis.componentsManager.addRootComponent();\n\n\tbackbone.history.start({\n\t\tpushState: this.pushState,\n\t\troot: this.root\n\t});\n};\n\nmodule.exports = backbone.Router.extend(Router);\n","'use strict';\n\nvar _ = require('underscore');\n\n// Default http method type for exec methods\nvar DEFAULT_EXEC_TYPE = 'PUT';\n\n// Throw an error when a URL is needed, and none is supplied.\nvar urlError = function() {\n\tthrow new Error('A \"url\" property or function must be specified');\n};\n\n// Wrap an optional error callback with a fallback error event.\nmodule.exports.wrapError = function(model, options) {\n\tvar error = options.error;\n\toptions.error = function(resp) {\n\t\tif (error) error.call(options.context, model, resp, options);\n\t\tmodel.trigger('error', model, resp, options);\n\t};\n};\n\nmodule.exports.prepareOptions = function(method, model, options) {\n\toptions = _({\n\t\ttype: DEFAULT_EXEC_TYPE,\n\t\tdataType: 'json',\n\t\tcontentType: 'application/json',\n\t\tprocessData: false\n\t}).extend(options);\n\n\t// Ensure that we have a URL and add method name to it\n\tif (!options.url) {\n\t\tvar url = _.result(model, 'url') || urlError();\n\t\toptions.url = url.replace(/[^\\/]$/, '$&/') + method;\n\t}\n\n\t// stringify data to json\n\tif (options.data && _.isObject(options.data) && !options.processData) {\n\t\toptions.data = JSON.stringify(options.data);\n\t}\n\n\treturn options;\n};\n\n// HTTP type to backbone sync methods map\nvar baseMethodsMap = {\n\t'POST': 'create',\n\t'PUT': 'update',\n\t'PATCH': 'patch',\n\t'DELETE': 'delete',\n\t'GET': 'read'\n};\n\nmodule.exports.getFakeBaseMethod = function(options) {\n\treturn baseMethodsMap[options.type.toUpperCase()];\n};\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\n\n// Take jquery or other selectors lib from backbone\nvar $ = backbone.$;\n\nvar splice = Array.prototype.splice;\n\n// Cached regex to split keys for `delegate`.\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n// List of events type for nested entities processed by current view\nvar nestedEventTypes = ['views', 'collections', 'models'];\n\n/**\n * @class Esencia.View\n * @extend Backbone.View\n */\n\nvar View = {\n\t// Helpers (Object|Fuction) which will be passed to the template\n\ttemplateHelpers: {},\n\n\t// views are in the resolved state by default\n\twaitsCounter: 0,\n\n\t// this flag is used to check that .wait() is called\n\t// in the constructor/initialize\n\twaitAvailable: true,\n\n\t// views are not attached by default\n\tattached: false\n};\n\nvar viewOptions = [\n\t'views', 'collections', 'models', 'data', 'events', 'router', 'templateHelpers'\n];\n\n/**\n * @constructor\n * @param {Object} [options]\n */\n\nView.constructor = function(options) {\n\tvar self = this;\n\n\toptions = options || {};\n\n\t// nested views, collections, models and data are empty by default\n\tthis.views = {};\n\tthis.collections = {};\n\tthis.models = {};\n\tthis.data = {};\n\n\t// populate View instance with fields from options\n\t_.extend(this, _.pick(options, viewOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\tif (this.template && !_.isFunction(this.template)) {\n\t\tthrow new Error('View `template` option should be a function');\n\t}\n\n\t// create special hash object for all events for fast search\n\tthis._prepareEvents();\n\n\t// normalize nested views hash\n\tthis._prepareViews();\n\n\t// apply default backbone.View constructor\n\tbackbone.View.apply(this, arguments);\n\n\t// set waiting state for current view if some nested view is in waiting state\n\t_(this.views).each(function(views) {\n\t\t_(views).each(function(view) {\n\t\t\tif (view.isWaiting()) {\n\t\t\t\tself.listenToOnce(view, 'resolve', self.wait());\n\t\t\t}\n\t\t});\n\t});\n\n\t// disable .wait(), it available only in the constructor/initialize\n\tthis.waitAvailable = false;\n\n\t// we should delegate events after parent constructor call because\n\t// collections and models could be created in the initialize method\n\n\t// delegate events for each collection\n\t_(this.collections).each(function(collection, key) {\n\t\tself.delegateNestedEvents('collections', key, collection);\n\t});\n\n\t// delegate events for each model\n\t_(this.models).each(function(model, key) {\n\t\tself.delegateNestedEvents('models', key, model);\n\t});\n};\n\n/**\n * Update view data\n * Method is used to update view state, could be overriden to modify nested\n * views state\n *\n * @param {Object} [data] - new data object\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setData = function(data) {\n\tif (data) this.data = data;\n\treturn this;\n};\n\n/**\n * Check that view is changed and should be re-rendered\n * Method returns true by default (always unchanged), could be overriden\n * for specific logic\n *\n * @return {Boolean}\n */\n\nView.isUnchanged = function() {\n\treturn true;\n};\n\n/**\n * Switch view to the waiting state\n *\n * @return {Function} - callback function, should be called to resolve view\n */\n\nView.wait = function() {\n\tif (!this.waitAvailable) {\n\t\tthrow new Error('Method .wait() is available only in the constructor');\n\t}\n\n\tvar self = this;\n\n\tthis.waitsCounter++;\n\n\t// TODO: think about promises\n\treturn _.once(function() {\n\t\t_.defer(function() {\n\t\t\tself.waitsCounter--;\n\t\t\tif (!self.isWaiting()) {\n\t\t\t\tself.trigger('resolve');\n\t\t\t}\n\t\t});\n\t});\n};\n\n/**\n * @return {Boolean}\n */\n\nView.isWaiting = function() {\n\treturn this.waitsCounter > 0;\n};\n\n/**\n * Render view\n *\n * @override render\n * @param {Object} options\n * @param {Boolean} options.force\n * @return {Esencia.View} - view instance for chaining\n */\n\nView._render = function(options) {\n\t// stop rendering if view in `waiting` state, resolve it first\n\tif (this.isWaiting()) return this;\n\n\toptions = options || {};\n\n\tif (this.template) {\n\t\t// re-render template only if it exists and if it is necessary\n\t\tif (options.force || !this.attached || !this.isUnchanged()) {\n\t\t\t// detach view from DOM element\n\t\t\tthis.detach();\n\n\t\t\t// render template with data\n\t\t\tvar html = this.renderTemplate(this.template, this.getTemplateData());\n\n\t\t\t// render html with jqeury (or other lib) call\n\t\t\tvar $el = $(html);\n\n\t\t\tif (!$el.length) {\n\t\t\t\tthrow new Error('View template produces empty html');\n\t\t\t}\n\n\t\t\tif ($el.length > 1) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'View template produces html with more than one root elements'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.setElement($el);\n\t\t}\n\t} else {\n\t\t// re-ensure element if it is not ensured\n\t\tif (!this.$el.length) this._ensureElement();\n\t}\n\n\t// render nested views\n\tthis.renderViews(options);\n\n\tif (!this.parent || this.$container) {\n\t\t// attach all nested views first\n\t\tthis.attachViews();\n\n\t\t// attach current view\n\t\tthis.attach();\n\t}\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Render view by calling private _render method\n *\n * @override render\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.render = function(options) {\n\treturn this._render(options);\n};\n\n/*\n * Get data for template rendering\n * Returns data by default, could be overriden\n *\n * @return {Object}\n */\n\nView.getTemplateData = function() {\n\treturn this.data;\n};\n\n/*\n * Render template with data. Returns html.\n *\n * @param {Function} template - template function for rendering\n * @param {Object} data - data for rendering\n * @return {String} - rendered html\n */\n\nView.renderTemplate = function(template, data) {\n\tdata = _(this).chain().result('templateHelpers').extend(data).value();\n\n\t// get html\n\treturn template(data);\n};\n\n/*\n * Render all nested view\n *\n * @param {Object} options\n * @param {Boolean} options.force\n * @return {Esencia.View} - view instance for chaining\n*/\n\nView.renderViews = function(options) {\n\tvar self = this;\n\n\t// iterate by each views group\n\t_(this.views).each(function(viewsGroup, container) {\n\t\t// return if view group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call render for each views from view group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview.render(options);\n\t\t});\n\n\t\t// get first container or $el\n\t\tvar $container = container ? self.$(container).first() : self.$el;\n\n\t\tif (!$container.length) {\n\t\t\tthrow new Error('Container \"' + container + '\" is not found');\n\t\t}\n\n\t\tvar containerEl = $container.get(0);\n\n\t\t// dom is changed if some view from group is not in current container\n\t\tvar domChanged = _(viewsGroup).some(function(view) {\n\t\t\treturn (\n\t\t\t\t!view.attached ||\n\t\t\t\t!view.$container ||\n\t\t\t\tview.$container.get(0) !== containerEl\n\t\t\t);\n\t\t});\n\n\t\tif (domChanged) {\n\t\t\t// re-append views group to container\n\t\t\tvar $els = [];\n\n\t\t\t_(viewsGroup).each(function(view) {\n\t\t\t\tview.$container = $container;\n\t\t\t\t$els.push(view.$el);\n\t\t\t});\n\n\t\t\t// TODO: add some rendering optimizations here\n\n\t\t\t// put all views to $container\n\t\t\t$container.append($els);\n\t\t}\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/*\n * Set view to views group or replace some view in specified position\n * If index is passed it replace only one view with index in views group\n *\n * @param {Esencia.View} view - view to set\n * @param {String} container - container to set\n * @param {Number} [index] - index of view to replace\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setView = function(view, container, index) {\n\treturn this._updateViews([view], container, index);\n};\n\n/*\n * Set views to views group or replace some view in specified position\n * If index is passed it replace only one view with index in views group\n *\n * @param {Esencia.View[]} views - views to set\n * @param {String} container - container to set\n * @param {Number} [index] - index of view to replace\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setViews = function(views, container, index) {\n\treturn this._updateViews(views, container, index);\n};\n\n/*\n * Append view to end of views group\n * This method is alias for insertView without index argument\n *\n * @param {Esencia.View} view - view to append\n * @param {String} container - container of views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.appendView = function(view, container) {\n\treturn this._insertViews([view], container);\n};\n\n/*\n * Append views to end of views group\n * This method is alias for insertViews without index argument\n *\n * @param {Esencia.View[]} views - views to append\n * @param {String} container - container of views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.appendViews = function(views, container) {\n\treturn this._insertViews(views, container);\n};\n\n/*\n * Prepend view to start of views group\n * This method is alias for insertView with `0` as index argument value\n *\n * @param {Esencia.View} view - view to prepend\n * @param {String} container - container of views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.prependView = function(view, container) {\n\treturn this._insertViews([view], container, 0);\n};\n\n/*\n * Prepend views to start of views group\n * This method is alias for insertViews with `0` as index argument value\n *\n * @param {Esencia.View[]} views - view to prepend\n * @param {String} container - container of views group\n  * @return {Esencia.View} - view instance for chaining\n */\n\nView.prependViews = function(views, container) {\n\treturn this._insertViews(views, container, 0);\n};\n\n/*\n * Insert view to specified position of views group in the container\n * If index is not passed method inserts view to the end of views group (append)\n *\n * @param {Esencia.View} view - view to insert\n * @param {String} container - container of views group\n * @param {Number} [index] - position in views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.insertView = function(view, container, index) {\n\treturn this._insertViews([view], container, index);\n};\n\n/*\n * Insert views to specified position of views group container\n * If index is not passed method inserts views to the end of views group\n *\n * @param {Esencia.View[]} views - views to insert\n * @param {String} container - container of views group\n * @param {Number} [index] - position in views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.insertViews = function(views, container, index) {\n\treturn this._insertViews(views, container, index);\n};\n\n/*\n * Remove view from views group container by index or view instance\n * If index is passed it remove view in the index position\n *\n * @param {Esencia.View} [view] - view to remove\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.removeView = function(view, container, index) {\n\tif (arguments.length < 2) {\n\t\tthrow new Error('\"view\" or \"index\" arguments must be specified');\n\t}\n\n\tif (_.isString(view)) {\n\t\tindex = container;\n\t\tcontainer = view;\n\t\tview = this.getView(container, index);\n\t\tif (!view) return this;\n\t}\n\n\treturn this._removeViews([view], container);\n};\n\n/*\n * Remove views from views group container\n * If views are passed remove only these views\n * Othervise remove all views from container\n *\n * @param {Esencia.View[]} [views] - views to remove\n * @param {String} container - container of views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.removeViews = function(views, container) {\n\tif (_.isString(views)) {\n\t\tcontainer = views;\n\t\tviews = this.getViews(container);\n\t}\n\n\treturn this._removeViews(views, container);\n};\n\n/*\n * Get single view from container by index\n *\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in views group\n * @return {Esencia.View}\n */\n\nView.getView = function(container, index) {\n\treturn this.getViews(container)[index || 0] || null;\n};\n\n/*\n * Get views group from container\n *\n * @param {String} container - container of views group\n * @return {Esencia.View[]}\n */\n\nView.getViews = function(container) {\n\treturn _.clone(this.views[container]) || [];\n};\n\nView._insertViews = function(views, container, index) {\n\tvar self = this;\n\n\tvar viewsGroup = this.getViews(container);\n\n\t_(views).each(function(view) {\n\t\tif (view.parent) {\n\t\t\tview.parent.removeView(view, view.container);\n\t\t}\n\t});\n\n\tif (viewsGroup.length) {\n\t\t// if index is not specified set it value as last index of views group\n\t\tif (typeof index === 'undefined') {\n\t\t\tindex = viewsGroup.length;\n\t\t}\n\n\t\t// insert views\n\t\tsplice.apply(this.views[container], [index, 0].concat(views));\n\t} else {\n\t\t// if group is empty - set views as whole views group value\n\t\tthis.views[container] = views;\n\t}\n\n\t// set each view parent to current\n\t_(views).each(function(view) {\n\t\tview.parent = self;\n\t\tview.container = container;\n\t});\n\n\tthis.delegateNestedEvents('views', container, views);\n\n\treturn this;\n};\n\nView._updateViews = function(views, container, index) {\n\tvar viewsGroup = this.getViews(container);\n\n\tif (viewsGroup.length) {\n\t\tvar removedViews = [];\n\n\t\t// if views group is not empty\n\t\tif (typeof index !== 'undefined') {\n\t\t\t// if index is specified\n\t\t\t// remove view from specific position\n\t\t\tremovedViews = this.getView(container, index);\n\t\t\tremovedViews = removedViews ? [removedViews] : [];\n\t\t} else {\n\t\t\t// if no index - remove all views from views group\n\t\t\tremovedViews = viewsGroup;\n\t\t}\n\n\t\tif (removedViews.length) {\n\t\t\t// if remove views array is not empty\n\t\t\t// remove from parent\n\t\t\tthis._removeViews(removedViews, container);\n\n\t\t\t// and remove views\n\t\t\t_(removedViews).each(function(view) {\n\t\t\t\tview.remove();\n\t\t\t});\n\t\t}\n\t}\n\n\t// insert new views\n\treturn this._insertViews(views, container, index);\n};\n\nView._removeViews = function(views, container) {\n\tvar self = this;\n\n\tvar viewsGroup = this.getViews(container);\n\n\tif (!viewsGroup.length) return this;\n\n\tvar viewObjs = _.chain(views).uniq().map(function(view) {\n\t\t\treturn {\n\t\t\t\tview: view,\n\t\t\t\tindex: _.indexOf(viewsGroup, view)\n\t\t\t};\n\t\t}).filter(function(viewObj) {\n\t\t\treturn viewObj.index >= 0;\n\t\t}).sortBy(function(viewObj) {\n\t\t\treturn -viewObj.index;\n\t\t}).value();\n\n\tif (!viewObjs.length) return this;\n\n\t_(viewObjs).each(function(viewObj) {\n\t\tvar view = viewObj.view;\n\n\t\t// remove item from group\n\t\tsplice.call(self.views[container], viewObj.index, 1);\n\n\t\t// undelegate all nested entity events\n\t\tself.undelegateNestedEvents(view);\n\n\t\t// unset view parent\n\t\tdelete view.parent;\n\t});\n\n\treturn this;\n};\n\n/*\n * Original setElement do undelegateEvents/delegateEvents, we remove it\n * because we have special detach/attach methods for this purpose\n *\n * @override setElement\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setElement = function(element) {\n\tvar $previousEl = this.$el;\n\n\tthis._setElement(element);\n\n\t// insert html to $el\n\tif ($previousEl && this.$container) {\n\t\t$previousEl.replaceWith(this.$el);\n\t}\n\n\treturn this;\n};\n\n/*\n * @override delegateEvents\n */\n\nView.delegateEvents = function(events) {\n\tevents = events || _.result(this, 'events');\n\tif (!events) return this;\n\tevents = _(events).omit(nestedEventTypes);\n\treturn backbone.View.prototype.delegateEvents.call(this, events);\n};\n\nView.delegateNestedEvents = function(type, key, entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\tvar listeners = this._nestedEventsHash[type][key];\n\tif (listeners) {\n\t\t_(listeners).each(function(listener) {\n\t\t\t_(entities).each(function(entity) {\n\t\t\t\tself.listenTo(entity, listener.eventName, listener.handler);\n\t\t\t});\n\t\t});\n\t}\n\treturn this;\n};\n\nView.undelegateNestedEvents = function(entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\t_(entities).each(function(entity) {\n\t\tself.stopListening(entity);\n\t});\n\treturn this;\n};\n\nView._prepareEvents = function(events) {\n\tvar self = this;\n\n\t// Hash for nested views events fast search\n\tthis._nestedEventsHash = {};\n\t_(nestedEventTypes).each(function(type) {\n\t\tself._nestedEventsHash[type] = {};\n\t});\n\n\tevents = events || _.result(this, 'events');\n\tif (!events) return;\n\n\t// bind all prefixed events to view then call native delegate events\n\t_(nestedEventTypes).each(function(type) {\n\t\tvar typeEventsHash = self._nestedEventsHash[type];\n\n\t\tif (!_(events).has(type) || !_.isObject(events[type])) return;\n\n\t\t_(events[type]).each(function(method, key) {\n\t\t\tif (!_.isFunction(method)) method = self[method];\n\t\t\tif (!method) return;\n\t\t\tvar match = key.match(delegateEventSplitter);\n\t\t\tvar eventName = match[1];\n\t\t\tvar entityKeys = match[2].replace(/ *, */g, ',').split(',');\n\t\t\tmethod = _.bind(method, self);\n\n\t\t\t// fill _nestedEventsHash\n\t\t\t_(entityKeys).each(function(entityKey) {\n\t\t\t\ttypeEventsHash[entityKey] = typeEventsHash[entityKey] || [];\n\t\t\t\ttypeEventsHash[entityKey].push({\n\t\t\t\t\teventName: eventName,\n\t\t\t\t\thandler: method\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n};\n\n/*\n * Wrap all non-array view groups to arrays with one element and delegate events\n */\n\nView._prepareViews = function() {\n\tvar self = this;\n\n\t_(this.views).each(function(views, container) {\n\t\tif (!_.isArray(views)) views = [views];\n\t\tself.views[container] = views;\n\t\tself.delegateNestedEvents('views', container, views);\n\t});\n};\n\n/**\n * Attach all nested views\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.attachViews = function() {\n\t// iterate by each nested views groups\n\t_(this.views).each(function(viewsGroup) {\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call attach method for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\t// recursive attach all nested views\n\t\t\tview.attachViews();\n\n\t\t\t// attach current view\n\t\t\tview.attach();\n\t\t});\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/*\n * afterAttach is empty by default\n * It called after attach call, could be verriden to add some specific logic\n * for DOM manipulations\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.afterAttach = function() {\n\treturn this;\n};\n\n/*\n * Attach new view to current view $el\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.attach = function() {\n\t// return if current view is already attached\n\tif (this.attached) return this;\n\n\t// detach previous view\n\tvar previousView = this.$el.data('esencia-view');\n\tif (previousView) previousView.detach();\n\n\t// attach current view and set attr\n\tthis.$el.data('esencia-view', this).attr('esencia-view', this.cid);\n\n\t// enable all DOM events\n\tthis.delegateEvents();\n\n\tthis.attached = true;\n\n\t// do some user afterAttach actions\n\tthis.afterAttach();\n\n\t// trigger attach event\n\tthis.trigger('attach');\n\n\treturn this;\n};\n\n/**\n * Detach all nested views\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.detachViews = function() {\n\t// iterate by each views groups\n\t_(this.views).each(function(viewsGroup) {\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call detach method for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\t// recursive detach all nested views\n\t\t\tview.detachViews();\n\n\t\t\t// detach current view\n\t\t\tview.detach();\n\t\t});\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/*\n * beforeDetach is empty by default\n * It called before detach method call, could be overriden to add some specific\n * logic before view detach from dom\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.beforeDetach = function() {\n\treturn this;\n};\n\n/*\n * Detach view from current view $el\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.detach = function() {\n\t// return if current view is not already attached\n\tif (!this.attached) return this;\n\n\t// trigger detach event\n\tthis.trigger('detach');\n\n\t// do some user beforeDetach actions\n\tthis.beforeDetach();\n\n\t// remove attr and data from $el\n\tthis.$el.removeData('esencia-view').removeAttr('esencia-view');\n\n\t// disable all DOM events\n\tthis.undelegateEvents();\n\n\tthis.attached = false;\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Remove view from parent container and remove element from DOM\n */\n\nView.remove = function() {\n\t// remove current view from parent view container\n\tif (this.parent) {\n\t\tthis.parent.removeView(this, this.container);\n\t}\n\n\t// detach all nested views first\n\tthis.detachViews();\n\n\t// detach current view\n\tthis.detach();\n\n\t// remove DOM element\n\treturn backbone.View.prototype.remove.call(this);\n};\n\n/*\n * Get view, that attached to closest element with attr `esencia-view`\n *\n * @param {String | $} selector\n * @return {Esencia.View | Null}\n */\n\nView.getClosestView = function(selector) {\n\tvar $selector = $(selector);\n\n\tif (!$selector.is('[esencia-view]')) {\n\t\t$selector = $selector.closest('[esencia-view]');\n\t}\n\n\treturn $selector.length ? $selector.data('esencia-view') : null;\n};\n\nmodule.exports = backbone.View.extend(View);\n"]}