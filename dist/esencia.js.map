{"version":3,"sources":["lib/collection.js","lib/esencia.js","lib/router.js","lib/view.js"],"names":["_","_require","backbone","Collection","baseMethods","execMethodType","sync","method","model","options","contains","params","type","dataType","contentType","processData","url","result","urlError","charAt","length","data","isObject","JSON","stringify","xhr","ajax","extend","trigger","prototype","call","exec","clone","collection","success","resp","error","Error","module","exports","Router","View","root","rootViewEl","modulesPath","defaultModuleName","pushState","namedParameters","autoloadModules","debug","config","onModuleError","nowhereUrl","routerOptions","constructor","pick","components","componentsTree","urlParams","modules","history","apply","arguments","route","setModule","_initRootComponent","RootView","el","component","name","parent","_populateUrlParams","componentName","key","has","componentOptions","router","defaults","defaultUrlParams","viewOptions","process","isUndefined","uniqueId","isString","isNull","_processComponent","_calculateComponentsTree","child","node","_isComponentTreeNodeChanged","oldNode","view","attached","isUnchanged","_applyComponentsTree","callback","self","parentNode","iterateNode","childNode","onViewResolve","setData","container","setView","renderViews","attachViews","render","oldView","remove","detach","chain","value","waiting","once","oldChildView","oldChildViewContainer","removeView","noop","newComponentsTree","isFunction","args","_defaultMiddleware","navigate","fragment","indexOf","substring","force","replace","omit","qs","toFragment","each","val","undefined","next","middleware","defaultMiddleware","moduleName","split","find","identity","require","moduleInit","start","$","splice","Array","delegateEventSplitter","nestedEventTypes","templateHelpers","views","template","_normalizeViews","_prepareNestedEvents","collections","delegateNestedEvents","models","wait","console","log","$el","html","renderTemplate","getTemplateData","setElement","_ensureElement","$container","attach","viewsGroup","first","containerEl","get","domChanged","some","$els","push","append","index","_updateViews","setViews","replaceView","replaceViews","appendView","_insertViews","appendViews","prependView","prependViews","insertView","insertViews","getView","_removeViews","removeViews","getViews","concat","removedViews","viewObjs","uniq","map","filter","viewObj","sortBy","undelegateNestedEvents","element","$previousEl","_setElement","replaceWith","delegateEvents","events","entities","isArray","listeners","_nestedEventsHash","listener","entity","listenTo","eventName","handler","stopListening","typeEventsHash","match","entityKeys","bind","entityKey","afterAttach","previousView","attr","cid","detachViews","beforeDetach","removeData","removeAttr","undelegateEvents","getClosestView","selector","$selector","is","closest"],"mappings":"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","file":"esencia.js","sourceRoot":".","sourcesContent":["'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\n\nvar Collection = {};\n\n// base methods map\nvar baseMethods = ['create', 'update', 'patch', 'delete', 'read'];\n\nvar execMethodType = 'PUT';\n\n/*\n * Override `sync` to add exec custom method functionality\n */\n\nCollection.sync = function(method, model, options) {\n\t// if sync is called for custom exec method\n\tif (!_.contains(baseMethods, method)) {\n\t\toptions = options || {};\n\n\t\tvar params = {\n\t\t\ttype: execMethodType,\n\t\t\tdataType: 'json',\n\t\t\tcontentType: 'application/json',\n\t\t\tprocessData: false\n\t\t};\n\n\t\t// Ensure that we have a URL and add method name to it\n\t\tif (!options.url) {\n\t\t\tvar url = _.result(model, 'url') || urlError();\n\t\t\tparams.url = url + (url.charAt(url.length - 1) === '/' ? '' : '/') + method;\n\t\t}\n\n\t\t// stringify data to json\n\t\tif (options.data && _.isObject(options.data)) {\n\t\t\toptions.data = JSON.stringify(options.data);\n\t\t}\n\n\t\t// Make the request, allowing the user to override any Ajax options.\n\t\tvar xhr = options.xhr = backbone.ajax(_.extend(params, options));\n\t\tmodel.trigger('request', model, xhr, options);\n\t\treturn xhr;\n\t} else {\n\t\t// call default backbone.Collection sync for base REST methods\n\t\treturn backbone.Collection.prototype.sync.call(this, method, model, options);\n\t}\n};\n\n/*\n * Exec custom non-REST method on collection\n * It trigger `exec:[method]` event after success collection sync\n *\n * @param {String} method\n * @param {Object} options\n */\n\nCollection.exec = function(method, options) {\n\toptions = options ? _.clone(options) : {};\n\n\tvar collection = this;\n\tvar success = options.success;\n\toptions.success = function(resp) {\n\t\tif (success) success(collection, resp, options);\n\t\tcollection.trigger('exec:' + method, collection, resp, options);\n\t};\n\n\tvar error = options.error;\n\toptions.error = function(resp) {\n\t\tif (error) error(collection, resp, options);\n\t\tcollection.trigger('error', collection, resp, options);\n\t};\n\n\treturn this.sync(method, this, options);\n};\n\n// Throw an error when a URL is needed, and none is supplied.\nvar urlError = function() {\n\tthrow new Error('A \"url\" property or function must be specified');\n};\n\nmodule.exports = backbone.Collection.extend(Collection);\n","'use strict';\n\nvar Router = require('./router');\nvar Collection = require('./collection');\nvar View = require('./view');\n\nmodule.exports.Router = Router;\nmodule.exports.Collection = Collection;\nmodule.exports.View = View;\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar View = require('./view');\n\n/**\n * Router extends default backbone Router\n */\n\nvar Router = {\n\troot: '/',\n\trootViewEl: 'html',\n\tmodulesPath: 'modules/',\n\tdefaultModuleName: 'main',\n\tpushState: false,\n\tnamedParameters: false,\n\tautoloadModules: true,\n\tdebug: false,\n\tconfig: {},\n\tonModuleError: function() {},\n\tnowhereUrl: '___'\n};\n\nvar routerOptions = [\n\t'root', 'rootViewEl', 'modulesPath', 'defaultModuleName', 'pushState',\n\t'namedParameters', 'autoloadModules', 'debug', 'config', 'onModuleError',\n\t'nowhereUrl'\n];\n\n/*\n * Override `constructor`\n * @param {Object} [options]\n */\n\nRouter.constructor = function(options) {\n\toptions = options || {};\n\n\t// populate Router instance with fields from options\n\t_.extend(this, _.pick(options, routerOptions));\n\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\tthis.components = {};\n\tthis.componentsTree = null;\n\tthis.urlParams = {};\n\tthis.modules = {};\n\n\tthis.history = backbone.history;\n\n\t/*\n\t * All query parameters can be passed in a single hash using the key\n\t * referenced from the route definition (backbone queryparams will\n\t * do it for us)\n\t */\n\n\tbackbone.Router.namedParameters = this.namedParameters;\n\n\tbackbone.Router.apply(this, arguments);\n\n\tif (options.autoloadModules) {\n\t\tthis.route('*url', function(params) {\n\t\t\tthis.setModule(params);\n\t\t});\n\t}\n};\n\nRouter._initRootComponent = function() {\n\tvar RootView = View.extend({\n\t\tel: this.rootViewEl\n\t});\n\n\tthis.component({\n\t\tname: '',\n\t\tparent: null,\n\t\tView: RootView\n\t});\n};\n\nRouter._populateUrlParams = function(componentName, params) {\n\tvar urlParams = this.urlParams;\n\n\t// clean old values from urlParams object\n\tvar key;\n\tfor (key in urlParams) {\n\t\tif (_(urlParams).has(key)) {\n\t\t\tdelete urlParams[key];\n\t\t}\n\t}\n\n\tvar component = this.components[componentName];\n\n\t// populate urlParams with new params\n\treturn _(urlParams).extend(\n\t\t_(component).result('defaultUrlParams'),\n\t\tparams\n\t);\n};\n\n/*\n * Add component to router and bind it to url\n *\n * @param {Object} component\n */\n\n var componentOptions = [\n\t'url', 'name', 'parent', 'container', 'View', 'models', 'collections',\n\t'viewOptions', 'defaultUrlParams'\n];\n\nRouter.component = function(options) {\n\tvar router = this;\n\n\toptions = _({}).defaults(options, {\n\t\tparent: '',\n\t\tdefaultUrlParams: {},\n\t\tviewOptions: {},\n\t\tprocess: false\n\t});\n\n\tvar component = _(options).pick(componentOptions);\n\n\t// generate uniq component name if name is omitted\n\tif (_.isUndefined(component.name)) {\n\t\tcomponent.name = _.uniqueId('auto-named-component');\n\t}\n\n\tif (!_.isString(component.name)) {\n\t\tthrow new Error('Component `name` option should be a string');\n\t}\n\n\tif (component.name in this.components) {\n\t\tthrow new Error('Duplicate component with name \"' + component.name + '\"');\n\t}\n\n\tif (!component.View) {\n\t\tthrow new Error('Component `View` option is required');\n\t}\n\n\tif (!_.isString(component.parent) && !_.isNull(component.parent)) {\n\t\tthrow new Error('Component `parent` option should be a string or null');\n\t}\n\n\tthis.components[component.name] = component;\n\n\t// bind component to route\n\tif (!_.isUndefined(component.url)) {\n\t\tthis.route(component.url, component.name, function(params) {\n\t\t\trouter._populateUrlParams(component.name, params);\n\n\t\t\t// process components tree\n\t\t\trouter._processComponent(component.name);\n\t\t});\n\t}\n\n\t// process components tree in force mode\n\tif (options.process) {\n\t\tthis._processComponent(component.name);\n\t}\n\n\treturn this;\n};\n\nRouter._calculateComponentsTree = function(componentName, child) {\n\tvar component = this.components[componentName];\n\n\tif (!component) {\n\t\tthrow new Error('Unknown component with name \"' + componentName + '\"');\n\t}\n\n\tvar node = {name: componentName};\n\tif (child) {\n\t\tnode.child = child;\n\t}\n\n\tif (_.isString(component.parent)) {\n\t\treturn this._calculateComponentsTree(component.parent, node);\n\t} else {\n\t\treturn node;\n\t}\n};\n\nRouter._isComponentTreeNodeChanged = function(oldNode, node) {\n\tif (!oldNode || oldNode.name !== node.name || !oldNode.view) return true;\n\tvar component = this.components[node.name];\n\tif (oldNode.view instanceof component.View === false) return true;\n\tif (!oldNode.view.attached) return true;\n\treturn !oldNode.view.isUnchanged();\n};\n\nRouter._applyComponentsTree = function(params, callback) {\n\tvar self = this;\n\n\tvar parentNode = params.parentNode;\n\n\tvar iterateNode = function(oldNode, node) {\n\t\t// omit child field in new node because it will set recursive\n\t\t// and should not exist if error case\n\t\tvar childNode = node.child;\n\t\tdelete node.child;\n\n\t\tif (parentNode) {\n\t\t\tparentNode.child = node;\n\t\t} else {\n\t\t\tself.componentsTree = node;\n\t\t}\n\n\t\tif (childNode) {\n\t\t\tself._applyComponentsTree({\n\t\t\t\tparentNode: node,\n\t\t\t\toldNode: oldNode && oldNode.child || null,\n\t\t\t\tnode: childNode\n\t\t\t}, callback);\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tvar node = params.node;\n\tvar oldNode = params.oldNode;\n\tvar component = this.components[node.name];\n\n\tvar onViewResolve = function(view) {\n\t\tnode.view = view;\n\t\tview.setData();\n\n\t\tif (component.container) {\n\t\t\tif (!parentNode) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Parent component should exist for component with `container` option'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tparentNode.view\n\t\t\t\t.setView(view, component.container)\n\t\t\t\t.renderViews()\n\t\t\t\t.attachViews();\n\t\t} else {\n\t\t\tview.render();\n\t\t}\n\n\t\t// stop processing old components tree\n\t\titerateNode(null, node);\n\t};\n\n\t// get view from old node\n\tvar oldView = oldNode && oldNode.view;\n\n\tif (this._isComponentTreeNodeChanged(oldNode, node)) {\n\t\tif (oldView) {\n\t\t\tif (oldView.container) {\n\t\t\t\t// remove old view if container for new view dirrent\n\t\t\t\tif (!component.container || oldView.container !== component.container) {\n\t\t\t\t\toldView.remove();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// detach old view if it has not a container\n\t\t\t\toldView.detach();\n\t\t\t}\n\t\t}\n\n\t\t// create new view\n\t\tvar view = new (component.View)(\n\t\t\t_(component)\n\t\t\t\t.chain()\n\t\t\t\t.pick('models', 'collections')\n\t\t\t\t.defaults(_(component).result('viewOptions'))\n\t\t\t\t.extend({router: this})\n\t\t\t\t.value()\n\t\t);\n\n\t\tif (view.waiting) {\n\t\t\t// wait when view will be resolved\n\t\t\tview.once('resolve', function() {\n\t\t\t\tonViewResolve(view);\n\t\t\t});\n\t\t} else {\n\t\t\tonViewResolve(view);\n\t\t}\n\t} else {\n\t\t// get old child view if exists\n\t\tvar oldChildView = oldNode.child && oldNode.child.view;\n\n\t\t// temporary remove child node view from container\n\t\t// to prevent recursive renderViews\n\t\tvar oldChildViewContainer;\n\t\tif (oldChildView) {\n\t\t\toldChildViewContainer = oldChildView.container;\n\n\t\t\tif (oldChildViewContainer) {\n\t\t\t\toldView.removeView(oldChildView, oldChildViewContainer);\n\t\t\t}\n\t\t}\n\n\t\t// save old view to new node\n\t\tnode.view = oldView;\n\n\t\t// set data and re-render old view\n\t\toldView.setData();\n\t\toldView.render();\n\n\t\t// revert child node view\n\t\tif (oldChildView && oldChildViewContainer) {\n\t\t\toldView.setView(oldChildView, oldChildViewContainer);\n\t\t}\n\n\t\t// proprocessing old components tree\n\t\titerateNode(oldNode, node);\n\t}\n};\n\nRouter._processComponent = function(componentName, callback) {\n\tcallback = callback || _.noop;\n\n\tvar newComponentsTree = this._calculateComponentsTree(componentName);\n\n\tthis._applyComponentsTree({\n\t\tparentNode: null,\n\t\toldNode: this.componentsTree,\n\t\tnode: newComponentsTree\n\t}, callback);\n};\n\n/*\n * Override `route` to add middleware processing functionality\n */\n\nRouter.route = function(url, name, callback) {\n\tvar router = this;\n\n\tif (_.isFunction(name)) {\n\t\tcallback = name;\n\t\tname = '';\n\t}\n\n\tbackbone.Router.prototype.route.call(this, url, name, function() {\n\t\tvar args = arguments;\n\n\t\trouter._defaultMiddleware({\n\t\t\turl: url,\n\t\t\tname: name,\n\t\t\tcallback: callback\n\t\t}, function() {\n\t\t\tcallback.apply(router, args);\n\t\t});\n\t});\n};\n\n/*\n * Override `navigate`\n * @param {String} fragment\n * @param {Object} [options] - hash of params\n * @param {Object} [options.qs] - query string hash\n */\n\nRouter.navigate = function(fragment, options) {\n\toptions = options || {};\n\n\tif (fragment.indexOf(this.root) === 0) {\n\t\tfragment = fragment.substring(this.root.length);\n\t}\n\n\t// force to go to the selected fragment even if we currently on it\n\tif (options.force) {\n\t\tthis.navigate(this.nowhereUrl, {\n\t\t\treplace: options.replace,\n\t\t\ttrigger: false\n\t\t});\n\n\t\toptions = _(options).chain().omit('force').extend({replace: true}).value();\n\n\t\treturn this.navigate(fragment, options);\n\t}\n\n\t// set `trigger` to true by default\n\toptions = _(options || {}).defaults({\n\t\ttrigger: true,\n\t\tparams: {}\n\t});\n\n\t// add support of query string using `toFragment` from backbone.queryparams\n\tvar qs = options.qs;\n\n\tif (this.toFragment && qs) {\n\t\t// reject undefined and null qs parameters\n\t\t_(qs).each(function(val, key, qs) {\n\t\t\tif (val === undefined || val === null) delete qs[key];\n\t\t});\n\n\t\tfragment = this.toFragment(fragment, qs);\n\n\t\tdelete options.qs;\n\t}\n\n\tbackbone.Router.prototype.navigate.call(this, fragment, options);\n};\n\n\n/*\n * Default middleware function\n */\n\nRouter._defaultMiddleware = function(route, next) {\n\tnext();\n};\n\n/**\n * Use passed function as `middleware`\n *\n * @param {Function} middleware - middleware function,\n * `route` and `next` will be passed as arguments.\n * context (`this`) is link to the router object.\n */\n\nRouter.middleware = function(middleware) {\n\tvar router = this;\n\n\tvar defaultMiddleware = this._defaultMiddleware;\n\n\tthis._defaultMiddleware = function(route, next) {\n\t\tdefaultMiddleware.call(router, route, function() {\n\t\t\tmiddleware.call(router, route, next);\n\t\t});\n\t};\n\n\treturn this;\n};\n\n/*\n * Require module file and init it\n * @param {String} params.url Url without query string\n */\n\nRouter.setModule = function(params) {\n\tvar router = this;\n\n\tvar url = params.url;\n\tdelete params.url;\n\n\tvar moduleName = _(url.split('/')).find(_.identity) || this.defaultModuleName;\n\n\t// require module file\n\trequire([this.modulesPath + moduleName], function(moduleInit) {\n\t\t// if module is loaded first time\n\t\tif (!router.modules[moduleName]) {\n\t\t\t// init it\n\t\t\tmoduleInit(router);\n\n\t\t\t// set module init flag to true\n\t\t\trouter.modules[moduleName] = true;\n\n\t\t\t// and navigate again with force flag\n\t\t\trouter.navigate(url, {\n\t\t\t\treplace: true,\n\t\t\t\tforce: true,\n\t\t\t\tqs: params\n\t\t\t});\n\t\t}\n\t}, this.onModuleError);\n};\n\n/*\n * Start routes handling\n */\n\nRouter.start = function() {\n\tthis._initRootComponent();\n\n\tbackbone.history.start({\n\t\tpushState: this.pushState,\n\t\troot: this.root\n\t});\n};\n\nmodule.exports = backbone.Router.extend(Router);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\n\n/*\n * Take jquery or other selectors lib from backbone\n */\n\nvar $ = backbone.$;\n\n/*\n * Helpers\n */\n\nvar splice = Array.prototype.splice;\n\n/*\n * Cached regex to split keys for `delegate`.\n */\n\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\nvar nestedEventTypes = ['views', 'collections', 'models'];\n\n/*\n * Base View class extend backbone View class\n */\n\nvar View = {\n\t/*\n\t * Helpers (Object|Fuction) which will be passed to the template\n\t */\n\n\ttemplateHelpers: {}\n};\n\nvar viewOptions = [\n\t'models', 'collections', 'views', 'events', 'data', 'router',\n\t'templateHelpers'\n];\n\n/*\n * @override constructor\n *\n * @param {Object} [options]\n */\n\nView.constructor = function(options) {\n\tvar self = this;\n\n\toptions = options || {};\n\n\t// nested views hash is empty by default\n\tthis.views = {};\n\n\tthis.data = this.data || {};\n\n\t// populate View instance with fields from options\n\t_.extend(this, _.pick(options, viewOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\tif (this.template && !_.isFunction(this.template)) {\n\t\tthrow new Error('View `template` option should be a function');\n\t}\n\n\t// normalize nested views hash\n\tthis._normalizeViews();\n\n\t// create special hash for all events for fast search\n\tthis._prepareNestedEvents();\n\n\t// views are in the resolved state by default\n\tthis.waiting = false;\n\n\t// views are not attached by default\n\tthis.attached = false;\n\n\t// apply default backbone.View constructor\n\tbackbone.View.apply(this, arguments);\n\n\t// we should delegate events after constructor call because collections and\n\t// models was created in the initialize method\n\n\t// delegate events for each collection\n\tif (this.collections) {\n\t\t_(this.collections).each(function(collection, key) {\n\t\t\tself.delegateNestedEvents('collections', key, collection);\n\t\t});\n\t}\n\n\t// delegate events for each model\n\tif (this.models) {\n\t\t_(this.models).each(function(model, key) {\n\t\t\tself.delegateNestedEvents('models', key, model);\n\t\t});\n\t}\n};\n\n/*\n * Method to change view data.\n * Router calls this method to update view data.\n *\n * @param {Object} [data]\n */\n\nView.setData = function(data) {\n\tif (data) this.data = data;\n};\n\n/*\n * Method to check that view is changed and should be re-rendered\n * Returns true by default, override this method for specific logic\n */\n\nView.isUnchanged = function() {\n\treturn true;\n};\n\n/*\n * Method to switch view to waiting state\n */\n\nView.wait = function() {\n\tvar self = this;\n\tthis.waiting = true;\n\n\treturn function() {\n\t\tself.waiting = false;\n\t\tself.trigger('resolve');\n\t};\n};\n\n/*\n * @override `render`\n */\n\nView.render = function(options) {\n\tconsole.log('>>>      render: %o %o', this, this.$el)\n\n\t// stop rendering if view in `waiting` state, resolve it first\n\tif (this.waiting) return this;\n\n\toptions = options || {};\n\n\tif (this.template) {\n\t\t// re-render template only if it exists and if it is necessary\n\t\tif (options.force || !this.attached || !this.isUnchanged()) {\n\t\t\t// detach view from DOM element\n\t\t\tthis.detach();\n\n\t\t\t// render template with data\n\t\t\tvar html = this.renderTemplate(this.template, this.getTemplateData());\n\n\t\t\t// render html with jqeury (or other lib) call\n\t\t\tvar $el = $(html);\n\n\t\t\tif (!$el.length) {\n\t\t\t\tthrow new Error('View template produce empty html');\n\t\t\t}\n\n\t\t\tif ($el.length > 1) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'View template produce html with more than one root elements'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.setElement($el);\n\t\t}\n\t} else {\n\t\t// re-ensure element if it is not ensured\n\t\tif (!this.$el.length) this._ensureElement();\n\t}\n\n\t// render nested views\n\tthis.renderViews(options);\n\n\tif (!this.parent || this.$container) {\n\t\t// attach all nested views first\n\t\tthis.attachViews();\n\n\t\t// attach current view\n\t\tthis.attach();\n\t}\n\n\t// return this for chaining\n\treturn this;\n};\n\n/*\n * Get data for template rendering\n */\n\nView.getTemplateData = function() {\n\treturn this.data;\n};\n\n/*\n * Render template with data. Returns html.\n *\n * @param {function} template for rendering\n * @params {object} data for rendering\n */\n\nView.renderTemplate = function(template, data) {\n\tdata = _(this).chain().result('templateHelpers').extend(data).value();\n\n\t// get html\n\treturn template(data);\n};\n\n/*\n * Render all nested view\n*/\n\nView.renderViews = function(options) {\n\tconsole.log('>>> renderViews: %o %o', this, this.$el)\n\n\tvar self = this;\n\n\t// iterate by each views group\n\t_(this.views).each(function(viewsGroup, container) {\n\t\t// return if view group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call render for each views from view group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview.render(options);\n\t\t});\n\n\t\t// get first container or $el\n\t\tvar $container = container ? self.$(container).first() : self.$el;\n\n\t\tif (!$container.length) {\n\t\t\tthrow new Error('Container \"' + container + '\" is not found');\n\t\t}\n\n\t\tvar containerEl = $container.get(0);\n\n\t\t// dom is changed if some view from group is not in current container\n\t\tvar domChanged = _(viewsGroup).some(function(view) {\n\t\t\treturn (\n\t\t\t\t!view.attached ||\n\t\t\t\t!view.$container ||\n\t\t\t\tview.$container.get(0) !== containerEl\n\t\t\t);\n\t\t});\n\n\t\tif (domChanged) {\n\t\t\t// re-append views group to container\n\t\t\tvar $els = [];\n\n\t\t\t_(viewsGroup).each(function(view) {\n\t\t\t\tview.$container = $container;\n\t\t\t\t$els.push(view.$el);\n\t\t\t});\n\n\t\t\t// @TODO: add some rendering optimizations here\n\n\t\t\t// put all views to $container\n\t\t\t$container.append($els);\n\t\t}\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/*\n * Set view to views group or replace some view in specified position\n * If index is passed it replace only one view with index in views group\n *\n * @param {View} view - view to set\n * @param {String} container - container to set\n * @param {Number} [index] - index of view to replace\n */\n\nView.setView = function(view, container, index) {\n\treturn this._updateViews([view], container, index);\n};\n\n/*\n * Set views to views group or replace some view in specified position\n * If index is passed it replace only one view with index in views group\n *\n * @param {View[]} views - views to set\n * @param {String} container - container to set\n * @param {Number} [index] - index of view to replace\n */\n\nView.setViews = function(views, container, index) {\n\treturn this._updateViews(views, container, index);\n};\n\n/*\n * Alias for setView\n *\n * @param {View} view - view to set\n * @param {String} container - container to set\n * @param {Number} [index] - index of view to replace\n */\n\nView.replaceView = function(view, container, index) {\n\treturn this._updateViews([view], container, index);\n};\n\n/*\n * Alias for setViews\n *\n * @param {View[]} views - views to set\n * @param {String} container - container to set\n * @param {Number} [index] - index of view to replace\n */\n\nView.replaceViews = function(views, container, index) {\n\treturn this._updateViews(views, container, index);\n};\n\n/*\n * Append view to end of views group\n * This method is alias for insertView without index argument\n *\n * @param {View} view - view to append\n * @param {String} container - container of views group\n */\n\nView.appendView = function(view, container) {\n\treturn this._insertViews([view], container);\n};\n\n/*\n * Append views to end of views group\n * This method is alias for insertViews without index argument\n *\n * @param {View[]} views - views to append\n * @param {String} container - container of views group\n */\n\nView.appendViews = function(views, container) {\n\treturn this._insertViews(views, container);\n};\n\n/*\n * Prepend view to start of views group\n * This method is alias for insertView with `0` as index argument value\n *\n * @param {View} views - view to prepend\n * @param {String} container - container of views group\n */\n\nView.prependView = function(view, container) {\n\treturn this._insertViews([view], container, 0);\n};\n\n/*\n * Prepend views to start of views group\n * This method is alias for insertViews with `0` as index argument value\n *\n * @param {View[]} views - view to prepend\n * @param {String} container - container of views group\n */\n\nView.prependViews = function(views, container) {\n\treturn this._insertViews(views, container, 0);\n};\n\n/*\n * Insert view to specified position of views group\n * If index is not passed method insert view to the end of views group (append)\n *\n * @param {View} view - view to insert\n * @param {String} container - container of views group\n * @param {Number} [index] - position in views group\n */\n\nView.insertView = function(view, container, index) {\n\treturn this._insertViews([view], container, index);\n};\n\n/*\n * Insert views to specified position of views group\n * If index is not passed method insert views to the end of views group (append)\n *\n * @param {View[]} views - views to insert\n * @param {String} container - container of views group\n * @param {Number} [index] - position in views group\n */\n\nView.insertViews = function(views, container, index) {\n\treturn this._insertViews(views, container, index);\n};\n\n/*\n * Remove view from views group by index or view instance\n * If index is passed it remove view in the index position\n *\n * @param {View} [view] - view to remove\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in views group\n */\n\nView.removeView = function(view, container, index) {\n\tif (arguments.length < 2) {\n\t\tthrow new Error('\"view\" or \"index\" arguments must be specified');\n\t}\n\n\tif (_.isString(view)) {\n\t\tindex = container;\n\t\tcontainer = view;\n\t\tview = this.getView(container, index);\n\t\tif (!view) return this;\n\t}\n\n\treturn this._removeViews([view], container);\n};\n\n/*\n * Remove views from views group\n * If views are passed remove only these views\n * Othervise remove all views from container\n *\n * @param {View[]} [views] - views to remove\n * @param {String} container - container of views group\n */\n\nView.removeViews = function(views, container) {\n\tif (_.isString(views)) {\n\t\tcontainer = views;\n\t\tviews = this.getViews(container);\n\t}\n\n\treturn this._removeViews(views, container);\n};\n\n/*\n * Get single view by container and index\n *\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in views group\n */\n\nView.getView = function(container, index) {\n\treturn this.getViews(container)[index || 0] || null;\n};\n\n/*\n * Get views group by container\n *\n * @param {String} container - container of views group\n */\n\nView.getViews = function(container) {\n\treturn _.clone(this.views[container]) || [];\n};\n\nView._insertViews = function(views, container, index) {\n\tconsole.log('>>> _insertViews:', views, container, index)\n\n\tvar self = this;\n\n\tvar viewsGroup = this.getViews(container);\n\n\t_(views).each(function(view) {\n\t\tif (view.parent) {\n\t\t\tview.parent.removeView(view, view.container);\n\t\t}\n\t});\n\n\tif (viewsGroup.length) {\n\t\t// if index is not specified set it value as last index of views group\n\t\tif (typeof index === 'undefined') {\n\t\t\tindex = viewsGroup.length;\n\t\t}\n\n\t\t// insert views\n\t\tsplice.apply(this.views[container], [index, 0].concat(views));\n\t} else {\n\t\t// if group is empty - set views as whole views group value\n\t\tthis.views[container] = views;\n\t}\n\n\t// set each view parent to current\n\t_(views).each(function(view) {\n\t\tview.parent = self;\n\t\tview.container = container;\n\t});\n\n\tthis.delegateNestedEvents('views', container, views);\n\n\treturn this;\n};\n\nView._updateViews = function(views, container, index) {\n\tconsole.log('>>> _updateViews:', views, container, index)\n\n\tvar viewsGroup = this.getViews(container);\n\n\tif (viewsGroup.length) {\n\t\tvar removedViews = [];\n\n\t\t// if views group is not empty\n\t\tif (typeof index !== 'undefined') {\n\t\t\t// if index is specified\n\t\t\t// remove view from specific position\n\t\t\tremovedViews = this.getView(container, index);\n\t\t\tremovedViews = removedViews ? [removedViews] : [];\n\t\t} else {\n\t\t\t// if no index - remove all views from views group\n\t\t\tremovedViews = viewsGroup;\n\t\t}\n\n\t\tif (removedViews.length) {\n\t\t\t// if remove views array is not empty\n\t\t\t// remove from parent\n\t\t\tthis._removeViews(removedViews, container);\n\n\t\t\t// and remove views\n\t\t\t_(removedViews).each(function(view) {\n\t\t\t\tview.remove();\n\t\t\t});\n\t\t}\n\t}\n\n\t// insert new views\n\treturn this._insertViews(views, container, index);\n};\n\nView._removeViews = function(views, container) {\n\tconsole.log('>>> _removeViews:', views, container)\n\n\tvar self = this;\n\n\tvar viewsGroup = this.getViews(container);\n\n\tif (!viewsGroup.length) return this;\n\n\tvar viewObjs = _.chain(views).uniq().map(function(view) {\n\t\t\treturn {\n\t\t\t\tview: view,\n\t\t\t\tindex: _.indexOf(viewsGroup, view)\n\t\t\t};\n\t\t}).filter(function(viewObj) {\n\t\t\treturn viewObj.index >= 0;\n\t\t}).sortBy(function(viewObj) {\n\t\t\treturn -viewObj.index;\n\t\t}).value();\n\n\tif (!viewObjs.length) return this;\n\n\t_(viewObjs).each(function(viewObj) {\n\t\tvar view = viewObj.view;\n\n\t\t// remove item from group\n\t\tsplice.call(self.views[container], viewObj.index, 1);\n\n\t\t// undelegate all nested entity events\n\t\tself.undelegateNestedEvents(view);\n\n\t\t// unset view parent\n\t\tdelete view.parent;\n\t});\n\n\treturn this;\n};\n\n/*\n * @override setElement\n * Original setElement do undelegateEvents/delegateEvents, we remove it\n * because we have special detach/attach methods for this\n */\n\nView.setElement = function(element) {\n\tvar $previousEl = this.$el;\n\n\tthis._setElement(element);\n\n\t// insert html to $el\n\tif ($previousEl && this.$container) {\n\t\t$previousEl.replaceWith(this.$el);\n\t}\n\n\treturn this;\n};\n\n/*\n * @override delegateEvents\n */\n\nView.delegateEvents = function(events) {\n\tevents = events || _.result(this, 'events');\n\tif (!events) return this;\n\tevents = _(events).omit(nestedEventTypes);\n\treturn backbone.View.prototype.delegateEvents.call(this, events);\n};\n\nView.delegateNestedEvents = function(type, key, entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\tvar listeners = this._nestedEventsHash[type][key];\n\tif (listeners) {\n\t\t_(listeners).each(function(listener) {\n\t\t\t_(entities).each(function(entity) {\n\t\t\t\tself.listenTo(entity, listener.eventName, listener.handler);\n\t\t\t});\n\t\t});\n\t}\n\treturn this;\n};\n\nView.undelegateNestedEvents = function(entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\t_(entities).each(function(entity) {\n\t\tself.stopListening(entity);\n\t});\n\treturn this;\n};\n\nView._prepareNestedEvents = function(events) {\n\tvar self = this;\n\n\t// Hash for nested views events fast search\n\tthis._nestedEventsHash = {};\n\t_(nestedEventTypes).each(function(type) {\n\t\tself._nestedEventsHash[type] = {};\n\t});\n\n\tevents = events || _.result(this, 'events');\n\tif (!events) return;\n\n\t// bind all prefixed events to view then call native delegate events\n\t_(nestedEventTypes).each(function(type) {\n\t\tvar typeEventsHash = self._nestedEventsHash[type];\n\n\t\tif (!_(events).has(type) || !_.isObject(events[type])) return;\n\n\t\t_(events[type]).each(function(method, key) {\n\t\t\tif (!_.isFunction(method)) method = self[method];\n\t\t\tif (!method) return;\n\t\t\tvar match = key.match(delegateEventSplitter);\n\t\t\tvar eventName = match[1];\n\t\t\tvar entityKeys = match[2].replace(/ *, */g, ',').split(',');\n\t\t\tmethod = _.bind(method, self);\n\n\t\t\t// fill _nestedEventsHash\n\t\t\t_(entityKeys).each(function(entityKey) {\n\t\t\t\ttypeEventsHash[entityKey] = typeEventsHash[entityKey] || [];\n\t\t\t\ttypeEventsHash[entityKey].push({\n\t\t\t\t\teventName: eventName,\n\t\t\t\t\thandler: method\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n};\n\n/*\n * Wrap all non-array view groups to arrays with one element\n */\n\nView._normalizeViews = function() {\n\tvar self = this;\n\n\t_(this.views).each(function(views, container) {\n\t\tif (!_.isArray(views)) {\n\t\t\tself.views[container] = [views];\n\t\t}\n\t});\n};\n\nView.attachViews = function() {\n\t// iterate by each nested views groups\n\t_(this.views).each(function(viewsGroup) {\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call attach method for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\t// recursive attach all nested views\n\t\t\tview.attachViews();\n\n\t\t\t// attach current view\n\t\t\tview.attach();\n\t\t});\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/*\n * afterAttach is empty by default.\n * It called after attach call\n * Override it to add some specific logic for DOM manipulations.\n */\n\nView.afterAttach = function() {\n\treturn this;\n};\n\n/*\n * Detach all previous views and attach new view to current view $el\n */\n\nView.attach = function() {\n\t// return if current view is already attached\n\tif (this.attached) return this;\n\n\t// detach previous view\n\tvar previousView = this.$el.data('esencia-view');\n\tif (previousView) previousView.detach();\n\n\t// attach current view and set attr\n\tthis.$el.data('esencia-view', this).attr('esencia-view', this.cid);\n\n\t// enable all DOM events\n\tthis.delegateEvents();\n\n\tthis.attached = true;\n\n\t// do some user afterAttach actions\n\tconsole.log('>>>      attach: %o %o', this, this.$el)\n\tthis.afterAttach();\n\n\treturn this;\n};\n\nView.detachViews = function() {\n\t// iterate by each views groups\n\t_(this.views).each(function(viewsGroup) {\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call detach method for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\t// recursive detach all nested views\n\t\t\tview.detachViews();\n\n\t\t\t// detach current view\n\t\t\tview.detach();\n\t\t});\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/*\n * beforeDetach is empty by default.\n * It called before detach calls\n * Override it to add some specific logic before view detach from dom.\n */\n\nView.beforeDetach = function() {\n\treturn this;\n};\n\n/*\n * Detach view from current view $el\n */\n\nView.detach = function() {\n\t// return if current view is not already attached\n\tif (!this.attached) return this;\n\n\t// do some user beforeDetach actions\n\tconsole.log('>>>      detach: %o %o', this, this.$el)\n\tthis.beforeDetach();\n\n\t// remove attr and data from $el\n\tthis.$el.removeData('esencia-view').removeAttr('esencia-view');\n\n\t// disable all DOM events\n\tthis.undelegateEvents();\n\n\tthis.attached = false;\n\n\t// return this for chaining\n\treturn this;\n};\n\nView.remove = function() {\n\t// remove current view from parent view container\n\tif (this.parent) {\n\t\tthis.parent.removeView(this, this.container);\n\t}\n\n\t// detach all nested views first\n\tthis.detachViews();\n\n\t// detach current view\n\tthis.detach();\n\n\t// remove DOM element\n\treturn backbone.View.prototype.remove.call(this);\n};\n\n/*\n * Get view, that attached to closest element with attr `esencia-view`\n *\n * @param {String | $} selector\n */\n\nView.getClosestView = function(selector) {\n\tvar $selector = $(selector);\n\n\tif (!$selector.is('[esencia-view]')) {\n\t\t$selector = $selector.closest('[esencia-view]');\n\t}\n\n\treturn $selector.length ? $selector.data('esencia-view') : null;\n};\n\nmodule.exports = backbone.View.extend(View);\n"]}