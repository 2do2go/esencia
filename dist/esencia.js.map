{"version":3,"sources":["lib/classes/collection.js","lib/classes/collectionView.js","lib/classes/componentsManager.js","lib/classes/model.js","lib/classes/router.js","lib/classes/view.js","lib/esencia.js","lib/utils/componentsManager.js","lib/utils/exec.js","lib/utils/extend.js"],"names":["_","_require","backbone","execUtils","Collection","sync","method","collection","options","contains","baseMethods","prepareOptions","getFakeBaseMethod","prototype","call","exec","extend","parse","success","resp","fetch","reset","context","trigger","wrapError","module","exports","View","CollectionView","collectionEvents","add","change","remove","_prepareViews","self","views","itemsContainer","map","model","ItemView","_prepareEntityEvents","_addEntityEvents","_onCollectionAdd","index","indexOf","models","addView","at","render","include","_onCollectionChange","view","getView","_onCollectionRemove","ComponentsManager","pick","componentManagerOptions","components","tree","currentNames","autoAddRoot","_addRoot","initialize","apply","arguments","componentOptions","Events","rootEl","defaultParent","undefined","RootView","el","parent","defaults","load","component","hasName","has","hasContainer","hasParent","isString","isRoot","isNull","hasDefaultParent","name","Error","isUndefined","container","uniqueId","default","get","names","callback","isFunction","isArray","noop","length","_stopLoading","treeNodes","_buildTree","oldTreeNodes","_loadTree","children","oldNodes","nodes","buildHashedTree","parentNames","chain","uniq","node","push","compact","value","each","find","child","isEmpty","filter","some","treeParams","afterCallback","after","isNodeChanged","oldNode","Boolean","isWaiting","attached","applyState","renderNodeAndProcessChildren","params","exclude","union","oldChildren","update","viewOptions","setView","renderViews","attachViews","listenToOnce","detach","result","componentsManager","tail","stopLoading","stopListening","Model","serverAttrs","set","namesPattern","Router","namedParameters","autoloadModules","modulesPath","defaultModuleName","require","window","onModuleError","routerOptions","constructor","modules","route","loadModule","url","isObject","componentNames","pluck","join","data","fragment","history","first","initial","query","last","_routeToRegExp","paramNames","match","replace","substring","_extractParameters","namedParams","paramsLength","moduleName","getModuleName","loadUrl","split","identity","$","splice","Array","delegateEventSplitter","entityNamesSplitter","isContainerSkipped","initialized","templateHelpers","waitsCounter","waitAvailable","entityTypes","entityEventTypes","additionalViewOptions","stateOptions","templateData","_prepareModels","_prepareCollections","delegateEntityEvents","omit","viewsGroup","wait","collections","defer","updateState","state","stateOption","targetObj","stateObj","objKeys","keys","objKey","undelegateEntityEvents","stateChanged","template","clone","getTemplateData","isStatesEqual","_update","oldState","newState","isEqual","once","force","detachViews","locals","html","_renderTemplate","$el","setElement","_ensureElement","attach","$container","containerEl","domChanged","parentEl","$els","append","_setViews","setViews","appendView","_addViews","appendViews","prependView","prependViews","addViews","removeView","_removeViews","removeViews","getViews","getViewsCount","concat","oldViews","isNumber","oldView","all","viewObjs","viewObj","sortBy","element","$previousEl","_setElement","replaceWith","ensureUI","ui","$ui","mapObject","selector","delegateTriggers","triggers","undelegateTriggers","event","key","eventName","delegateTrigger","bind","listener","on","cid","off","undelegateTrigger","entityType","entityName","entities","_entityEvents","events","entity","listenTo","eventType","entityNames","_addEntityEvent","entityEvents","beforeAttach","afterAttach","previousView","attr","delegateEvents","beforeDetach","afterDetach","removeData","removeAttr","undelegateEvents","getClosestView","$selector","is","closest","Esencia","backboneFields","DEFAULT_EXEC_TYPE","urlError","error","type","dataType","contentType","processData","JSON","stringify","baseMethodsMap","values","toUpperCase"],"mappings":"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","file":"esencia.js","sourceRoot":".","sourcesContent":["'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar execUtils = require('../utils/exec');\n\n/**\n * @class Esencia.Collection\n * @extend Backbone.Collection\n */\n\nvar Collection = {};\n\n/**\n * Override `sync` to add exec custom method functionality\n *\n * @override\n */\n\nCollection.sync = function(method, collection, options) {\n\tif (!_.contains(execUtils.baseMethods, method)) {\n\t\toptions = execUtils.prepareOptions(method, collection, options);\n\t\tmethod = execUtils.getFakeBaseMethod(options);\n\t}\n\n\treturn backbone.Collection.prototype.sync.call(\n\t\tthis, method, collection, options\n\t);\n};\n\n/**\n * Exec custom non-REST method on collection\n * It trigger `exec:[method]` event after success method exec\n *\n * @param {String} method\n * @param {Object} options\n */\n\nCollection.exec = function(method, options) {\n\toptions = _.extend({parse: true}, options);\n\tvar collection = this;\n\tvar success = options.success;\n\toptions.success = function(resp) {\n\t\tif (options.fetch) collection[options.reset ? 'reset' : 'set'](resp, options);\n\t\tif (success) success.call(options.context, collection, resp, options);\n\t\tcollection.trigger('exec:' + method, collection, resp, options);\n\t};\n\texecUtils.wrapError(this, options);\n\treturn this.sync(method, this, options);\n};\n\nmodule.exports = backbone.Collection.extend(Collection);\n","'use strict';\n\nvar View = require('./view');\nvar _ = require('underscore');\n\nvar CollectionView = {};\n\nvar collectionEvents = {\n\tadd: '_onCollectionAdd',\n\tchange: '_onCollectionChange',\n\tremove: '_onCollectionRemove'\n};\n\nCollectionView._prepareViews = function() {\n\tView.prototype._prepareViews.call(this);\n\n\tvar self = this;\n\tthis.views[this.itemsContainer] = this.collection.map(function(model) {\n\t\treturn new self.ItemView({model: model});\n\t});\n};\n\nCollectionView._prepareEntityEvents = function() {\n\tView.prototype._prepareEntityEvents.call(this);\n\n\tthis._addEntityEvents('collections', collectionEvents);\n};\n\nCollectionView._onCollectionAdd = function(model) {\n\tvar index = _.indexOf(this.collection.models, model);\n\tthis.addView(\n\t\tnew this.ItemView({model: model}),\n\t\tthis.itemsContainer,\n\t\t{at: index}\n\t);\n\tthis.render({include: this.itemsContainer});\n};\n\nCollectionView._onCollectionChange = function(model) {\n\tvar index = _.indexOf(this.collection.models, model);\n\tvar view = this.getView(this.itemsContainer, index);\n\tview.render();\n};\n\nCollectionView._onCollectionRemove = function(model, collection, options) {\n\tvar view = this.getView(this.itemsContainer, options.index);\n\tview.remove();\n};\n\nmodule.exports = View.extend(CollectionView);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar View = require('./view');\nvar extend = require('../utils/extend');\n\n/**\n * @class Esencia.ComponentsManager\n */\n\nvar ComponentsManager = function(options) {\n\toptions = options || {};\n\n\t// populate ComponentsManager instance with fields from options\n\t_.extend(this, _.pick(options, componentManagerOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\t// all components hash\n\tthis.components = {};\n\n\t// current components tree that loaded at this moment\n\tthis.tree = [];\n\n\t// component names of the loaded tree at this moment\n\tthis.currentNames = [];\n\n\t// add default root component, in most cases this is what you need\n\tif (this.autoAddRoot) this._addRoot();\n\n\tthis.initialize.apply(this, arguments);\n};\n\nvar componentManagerOptions = [\n\t'rootEl', 'autoAddRoot'\n];\n\n var componentOptions = [\n\t'name', 'parent', 'container', 'View', 'model', 'models',\n\t'collection', 'collections', 'viewOptions'\n];\n\n_.extend(ComponentsManager.prototype, backbone.Events, {\n\t// You can set selector of any element at the page if you want restrict\n\t// specific page area that component manager will process\n\trootEl: 'html',\n\n\t// Add default root component, in most cases this is what you need\n\tautoAddRoot: true,\n\n\t// Default parent component name is undefined until any root component will\n\t// added\n\t// When root component is added, it name will set as value of this field\n\tdefaultParent: undefined,\n\n\t/**\n\t * Initialize is an empty function by default. Override it with your own\n\t * initialization logic.\n\t */\n\n\tinitialize: function() {},\n\n\t/**\n\t * Add default root component to the components list\n\t */\n\n\t_addRoot: function() {\n\t\tvar RootView = View.extend({\n\t\t\tel: this.rootEl\n\t\t});\n\n\t\tthis.add({\n\t\t\tparent: null,\n\t\t\tView: RootView\n\t\t});\n\t},\n\n\t/**\n\t * Add component to the components list\n\t *\n\t * @param {Object} options\n\t * @param {String} options.name - component name\n\t * @param {View} options.View - component view constructor\n\t * @param {String|Null} [options.parent] - component parent name or null\n\t * for roots\n\t * @param {String} [options.container] - view container, required if parent\n\t * is string\n\t * @param {Boolean} [options.load] - load component after add\n\t */\n\n\tadd: function(options) {\n\t\toptions = _.defaults({}, options, {\n\t\t\tparent: this.defaultParent,\n\t\t\tload: false\n\t\t});\n\n\t\tvar component = _.pick(options, componentOptions);\n\n\t\tvar hasName = _.has(component, 'name');\n\t\tvar hasContainer = _.has(component, 'container');\n\t\tvar hasParent = _.isString(component.parent);\n\t\tvar isRoot = _.isNull(component.parent);\n\t\tvar hasDefaultParent = _.isString(this.defaultParent);\n\n\t\tif (hasName && !_.isString(component.name)) {\n\t\t\tthrow new Error('Component `name` option should be a string');\n\t\t}\n\n\t\tif (hasName && _.has(this.components, component.name)) {\n\t\t\tthrow new Error('Duplicate component with name \"' + component.name + '\"');\n\t\t}\n\n\t\tif (!_.has(component, 'View')) {\n\t\t\tthrow new Error('Component `View` option is required');\n\t\t}\n\n\t\tif (!hasDefaultParent && _.isUndefined(component.parent)) {\n\t\t\tthrow new Error(\n\t\t\t\t'Default root component is not set, add root component first'\n\t\t\t);\n\t\t}\n\n\t\tif (!hasParent && !isRoot) {\n\t\t\tthrow new Error('Component `parent` option should be a string or null');\n\t\t}\n\n\t\tif (isRoot && hasContainer) {\n\t\t\tthrow new Error('Root component could not have a container');\n\t\t}\n\n\t\tif (hasParent && !hasContainer) {\n\t\t\tthrow new Error(\n\t\t\t\t'Component `container` option is required for components with parent'\n\t\t\t);\n\t\t}\n\n\t\tif (hasContainer && !_.isString(component.container)) {\n\t\t\tthrow new Error('Component `container` option should be a string selector');\n\t\t}\n\n\t\t// generate uniq component name if compoent has not a name\n\t\tif (!hasName) {\n\t\t\tcomponent.name = _.uniqueId('__COMPONENT_') + '__';\n\t\t}\n\n\t\tthis.components[component.name] = component;\n\n\t\tif (isRoot && (!hasDefaultParent || options.default)) {\n\t\t\tthis.defaultParent = component.name;\n\t\t}\n\n\t\t// process components tree in force mode\n\t\tif (options.load) {\n\t\t\tthis.load(component.name);\n\t\t}\n\n\t\treturn component;\n\t},\n\n\t/**\n\t * Get component by name\n\t *\n\t * @param {String} name - component name\n\t * @return {Object} component\n\t */\n\n\tget: function(name) {\n\t\tvar component = this.components[name];\n\n\t\tif (!component) {\n\t\t\tthrow new Error('Component with name \"' + name + '\" does not exist');\n\t\t}\n\n\t\treturn component;\n\t},\n\n\t/**\n\t * Remove component by name\n\t *\n\t * @param {String} name - component name\n\t */\n\n\tremove: function(name) {\n\t\tdelete this.components[name];\n\t},\n\n\t/**\n\t * Load components tree by name(s) and call a callback on done\n\t *\n\t * @param {String|String[]} [names] - component name or names list\n\t * @param {Object} [options]\n\t * @params {Function} [callback]\n\t */\n\n\tload: function(names, options, callback) {\n\t\tif (_.isFunction(names)) {\n\t\t\tcallback = names;\n\t\t\tnames = undefined;\n\t\t\toptions = undefined;\n\t\t}\n\n\t\tif (_.isFunction(options)) {\n\t\t\tcallback = options;\n\n\t\t\tif (_.isArray(names) || _.isString(names)) {\n\t\t\t\toptions = undefined;\n\t\t\t} else {\n\t\t\t\toptions = names;\n\t\t\t\tnames = undefined;\n\t\t\t}\n\t\t}\n\n\t\tnames = names || this.currentNames;\n\t\toptions = options || {};\n\t\tcallback = callback || _.noop;\n\n\t\tif (!_.isArray(names)) names = [names];\n\t\tif (!names.length) {\n\t\t\tthrow new Error('Component name or names to load should be set');\n\t\t}\n\n\t\tthis._stopLoading();\n\n\t\tvar treeNodes = this._buildTree(names);\n\t\tvar oldTreeNodes = this.tree;\n\t\tthis.tree = [];\n\n\t\tthis.currentNames = names;\n\n\t\tthis._loadTree({\n\t\t\tparent: {children: this.tree},\n\t\t\toldNodes: oldTreeNodes,\n\t\t\tnodes: treeNodes\n\t\t}, options, callback);\n\t},\n\n\t_buildTree: function(names) {\n\t\tvar self = this;\n\n\t\t// internal function for recursion\n\t\tvar buildHashedTree = function(names, tree) {\n\t\t\t// exit with empty tree if names list is empty\n\t\t\tif (!names.length) return tree;\n\n\t\t\tvar parentNames = [];\n\n\t\t\t// create component nodes\n\t\t\tvar nodes = _(names)\n\t\t\t\t.chain()\n\t\t\t\t.uniq()\n\t\t\t\t.map(function(name) {\n\t\t\t\t\tvar component = self.get(name);\n\n\t\t\t\t\t// skip component if it is already in the tree\n\t\t\t\t\tif (_.has(tree, component.name)) return null;\n\n\t\t\t\t\t// create node\n\t\t\t\t\tvar node = {\n\t\t\t\t\t\tcomponent: component,\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t};\n\n\t\t\t\t\t// add parent name to the list\n\t\t\t\t\tif (_.isString(component.parent)) {\n\t\t\t\t\t\tparentNames.push(component.parent);\n\t\t\t\t\t}\n\n\t\t\t\t\t// add nodes to the hashed tree first to prevent cycles\n\t\t\t\t\ttree[component.name] = node;\n\n\t\t\t\t\treturn node;\n\t\t\t\t})\n\t\t\t\t.compact()\n\t\t\t\t.value();\n\n\t\t\t// build new tree for parent components\n\t\t\ttree = buildHashedTree(parentNames, tree);\n\n\t\t\t// add each node to the parent children list if component has a parent\n\t\t\t_(nodes).each(function(node) {\n\t\t\t\tif (_.isString(node.component.parent)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.component.container &&\n\t\t\t\t\t\t_(tree[node.component.parent].children).find(function(child) {\n\t\t\t\t\t\t\treturn child.component.container === node.component.container;\n\t\t\t\t\t\t})\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Components could not have same container and parent in one tree'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\ttree[node.component.parent].children.push(node);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn tree;\n\t\t};\n\n\t\tvar tree = buildHashedTree(names, {});\n\n\t\tif (_.isEmpty(tree)) {\n\t\t\tthrow new Error('Components tree is empty');\n\t\t}\n\n\t\t// filter root components\n\t\ttree = _(tree).filter(function(node) {\n\t\t\treturn _.isNull(node.component.parent);\n\t\t});\n\n\t\tif (!tree.length) {\n\t\t\tthrow new Error('Components tree should have at least one root node');\n\t\t}\n\n\t\tif (\n\t\t\t_(tree).some(function(node) {\n\t\t\t\treturn node.component.container;\n\t\t\t})\n\t\t) {\n\t\t\tthrow new Error('Root component could not have a container');\n\t\t}\n\n\t\treturn tree;\n\t},\n\n\t_loadTree: function(treeParams, options, callback) {\n\t\tvar self = this;\n\n\t\tvar parent = treeParams.parent;\n\n\t\tvar afterCallback = _.after(treeParams.nodes.length, callback);\n\n\t\tvar isNodeChanged = function(oldNode, node) {\n\t\t\treturn Boolean(\n\t\t\t\t_.isEmpty(oldNode) ||\n\t\t\t\toldNode.component.name !== node.component.name ||\n\t\t\t\t!oldNode.view ||\n\t\t\t\toldNode.view instanceof node.component.View === false ||\n\t\t\t\toldNode.view.isWaiting() ||\n\t\t\t\t!oldNode.view.attached ||\n\t\t\t\toldNode.view.applyState()\n\t\t\t);\n\t\t};\n\n\t\tvar renderNodeAndProcessChildren = function(params) {\n\t\t\tvar node = params.node;\n\n\t\t\t// exclude list is an union of old and new children\n\t\t\tvar exclude = _.union(\n\t\t\t\t_(params.oldChildren).chain().map(function(node) {\n\t\t\t\t\treturn node.component.container;\n\t\t\t\t}).compact().value(),\n\t\t\t\t_(params.children).chain().map(function(node) {\n\t\t\t\t\treturn node.component.container;\n\t\t\t\t}).compact().value()\n\t\t\t);\n\n\t\t\t// update view state\n\t\t\tnode.view.update(options.viewOptions, {exclude: exclude});\n\n\t\t\tif (!node.view.attached && node.component.container) {\n\t\t\t\tvar container = node.component.container;\n\n\t\t\t\t// render view with container from parent view\n\t\t\t\tparent.view\n\t\t\t\t\t.setView(node.view, container)\n\t\t\t\t\t.renderViews({include: [container]})\n\t\t\t\t\t.attachViews({include: [container]});\n\t\t\t} else {\n\t\t\t\t// render old view or view without container directly\n\t\t\t\tnode.view.render({exclude: exclude});\n\t\t\t}\n\n\t\t\t// view re-rendering\n\t\t\tif (node.view.isWaiting()) {\n\t\t\t\t// wait when view will be updated\n\t\t\t\tself.listenToOnce(node.view, 'updated', function() {\n\t\t\t\t\tnode.view.render({exclude: exclude});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// recursive call for children nodes\n\t\t\tself._loadTree({\n\t\t\t\tparent: node,\n\t\t\t\toldNodes: params.oldChildren,\n\t\t\t\tnodes: params.children\n\t\t\t}, options, afterCallback);\n\t\t};\n\n\t\t// process all nodes in single parent node\n\t\t_(treeParams.nodes).each(function(node, index) {\n\t\t\t// TODO get oldNode in better way\n\t\t\tvar oldNode = treeParams.oldNodes[index] || {};\n\n\t\t\t// detect changes in nodes tree\n\t\t\tif (isNodeChanged(oldNode, node)) {\n\t\t\t\t// destroy old node\n\t\t\t\tif (oldNode.view) {\n\t\t\t\t\tif (oldNode.component.container) {\n\t\t\t\t\t\t// remove old view if container for new view differs\n\t\t\t\t\t\tif (oldNode.component.container !== node.component.container) {\n\t\t\t\t\t\t\toldNode.view.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// detach old view if it has not a container\n\t\t\t\t\t\toldNode.view.detach();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// create new view\n\t\t\t\tnode.view = new (node.component.View)(\n\t\t\t\t\t_(node.component)\n\t\t\t\t\t\t.chain()\n\t\t\t\t\t\t.pick('model', 'models', 'collection', 'collections')\n\t\t\t\t\t\t.extend(\n\t\t\t\t\t\t\t_.result(node.component, 'viewOptions'),\n\t\t\t\t\t\t\t{componentsManager: self},\n\t\t\t\t\t\t\toptions.viewOptions\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.value()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// save old view to new node\n\t\t\t\tnode.view = oldNode.view;\n\t\t\t}\n\n\t\t\t// save children for node because it will be creared next\n\t\t\tvar children = node.children;\n\n\t\t\t// clear children field in new node because it will set recursive\n\t\t\t// and should be empty in error case\n\t\t\tnode.children = [];\n\n\t\t\t// save node to the parent children\n\t\t\tparent.children.push(node);\n\n\t\t\tif (node.view.isWaiting()) {\n\t\t\t\t// wait when view will be initialized\n\t\t\t\tself.listenToOnce(node.view, 'initialized', function() {\n\t\t\t\t\trenderNodeAndProcessChildren({\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\toldChildren: oldNode.children || [],\n\t\t\t\t\t\tchildren: children\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trenderNodeAndProcessChildren({\n\t\t\t\t\tnode: node,\n\t\t\t\t\toldChildren: oldNode.children || [],\n\t\t\t\t\tchildren: children\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// remove all nodes, that are not replaced by new nodes\n\t\t_(treeParams.oldNodes)\n\t\t\t.chain()\n\t\t\t.tail(treeParams.nodes.length)\n\t\t\t.each(function(node) {\n\t\t\t\t// destroy old node\n\t\t\t\tif (node.view) {\n\t\t\t\t\tif (node.component.container) {\n\t\t\t\t\t\t// remove old view if component has a container\n\t\t\t\t\t\tnode.view.remove();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// detach old view if it has not a container\n\t\t\t\t\t\tnode.view.detach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t},\n\n\t_stopLoading: function() {\n\t\tvar self = this;\n\n\t\tvar stopLoading = function(nodes) {\n\t\t\t_(nodes).each(function(node) {\n\t\t\t\tif (node.view) {\n\t\t\t\t\tself.stopListening(node.view);\n\t\t\t\t}\n\n\t\t\t\tif (node.children.length) {\n\t\t\t\t\tstopLoading(node.children);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tstopLoading(this.tree);\n\t}\n});\n\nComponentsManager.extend = extend;\n\nmodule.exports = ComponentsManager;\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar execUtils = require('../utils/exec');\n\n/**\n * @class Esencia.Model\n * @extend Backbone.Model\n */\n\nvar Model = {};\n\n/**\n * Override `sync` to add exec custom method functionality\n *\n * @override\n */\n\nModel.sync = function(method, model, options) {\n\tif (!_.contains(execUtils.baseMethods, method)) {\n\t\toptions = execUtils.prepareOptions(method, model, options);\n\t\tmethod = execUtils.getFakeBaseMethod(options);\n\t}\n\n\treturn backbone.Model.prototype.sync.call(this, method, model, options);\n};\n\n/**\n * Exec custom non-REST method on model\n * It trigger `exec:[method]` event after success method exec\n *\n * @param {String} method\n * @param {Object} options\n */\n\nModel.exec = function(method, options) {\n\toptions = _.extend({parse: true}, options);\n\tvar model = this;\n\tvar success = options.success;\n\toptions.success = function(resp) {\n\t\tif (options.fetch) {\n\t\t\tvar serverAttrs = options.parse ? model.parse(resp, options) : resp;\n\t\t\tif (!model.set(serverAttrs, options)) return false;\n\t\t}\n\t\tif (success) success.call(options.context, model, resp, options);\n\t\tmodel.trigger('exec:' + method, model, resp, options);\n\t};\n\texecUtils.wrapError(this, options);\n\treturn this.sync(method, this, options);\n};\n\nmodule.exports = backbone.Model.extend(Model);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar componentsManager = require('../utils/componentsManager');\n\nvar namesPattern = /[\\:\\*]([^\\:\\?\\/]+)/g;\n\n/**\n * @class Esencia.Router\n * @extend Backbone.Router\n */\n\nvar Router = {\n\tcomponentsManager: componentsManager,\n\tnamedParameters: true,\n\tautoloadModules: false,\n\tmodulesPath: 'modules/',\n\tdefaultModuleName: 'main',\n\trequire: window.require,\n\tonModuleError: function() {}\n};\n\nvar routerOptions = [\n\t'componentsManager', 'namedParameters', 'autoloadModules', 'modulesPath',\n\t'defaultModuleName', 'require', 'onModuleError'\n];\n\n/**\n * @constructor\n * @param {Object} [options]\n */\n\nRouter.constructor = function(options) {\n\toptions = options || {};\n\n\t// populate Router instance with fields from options\n\t_.extend(this, _.pick(options, routerOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\tthis.modules = {};\n\n\tbackbone.Router.apply(this, arguments);\n\n\tif (this.autoloadModules) {\n\t\tthis.route('*url', function(params) {\n\t\t\tthis.loadModule(params.url);\n\t\t});\n\t}\n};\n\n/**\n * Add new component to components manager\n *\n * @param {Object} options - component options\n */\n\nRouter.component = function(options) {\n\treturn this.componentsManager.add(options);\n};\n\n/**\n * Override `route` to add components processing functionality\n *\n * @override\n */\n\nRouter.route = function(route, options, callback) {\n\tvar self = this;\n\n\tif (_.isFunction(options)) {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\n\tif (!_.isObject(options)) {\n\t\toptions = {name: options};\n\t}\n\n\tvar name = '';\n\n\tif (_.has(options, 'components') || _.has(options, 'component')) {\n\t\tvar components = _(options.components || [options.component])\n\t\t\t.map(function(componentOptions) {\n\t\t\t\tif (_.isString(componentOptions)) {\n\t\t\t\t\treturn self.componentsManager.get(componentOptions);\n\t\t\t\t} else {\n\t\t\t\t\treturn self.component(componentOptions);\n\t\t\t\t}\n\t\t\t});\n\n\t\tvar componentNames = _.pluck(components, 'name');\n\n\t\tname = componentNames.join(',');\n\n\t\t// create callback to load components tree\n\t\tcallback = function() {\n\t\t\tvar viewOptions = {\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: backbone.history.fragment,\n\t\t\t\t\tparams: self.namedParameters ? _.first(arguments) : _.initial(arguments),\n\t\t\t\t\tquery: _.last(arguments)\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tself.componentsManager.load(componentNames, {viewOptions: viewOptions});\n\t\t};\n\t}\n\n\tname = options.name || name;\n\n\t// bind component to route\n\tbackbone.Router.prototype.route.call(this, route, name, callback);\n};\n\nRouter._routeToRegExp = function(route) {\n\tvar paramNames = route.match(namesPattern) || [];\n\n\troute = backbone.Router.prototype._routeToRegExp.call(this, route);\n\n\t// Map and remove any trailing ')' character that has been\n\t// caught up in regex matching\n\troute.paramNames = _(paramNames).map(function(name) {\n\t\treturn name.replace(/\\)$/, '').substring(1);\n\t});\n\n\treturn route;\n};\n\nRouter._extractParameters = function(route, fragment) {\n\tvar params = backbone.Router.prototype._extractParameters.call(\n\t\tthis, route, fragment\n\t);\n\n\tif (!this.namedParameters || !route.paramNames) return params;\n\n\tvar namedParams = {};\n\n\tvar paramsLength = params.length;\n\t_(route.paramNames).find(function(name, index) {\n\t\tif (_.isString(params[index]) && index < paramsLength - 1) {\n\t\t\tnamedParams[name] = params[index];\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t});\n\n\tvar query = params[paramsLength - 1];\n\n\treturn [namedParams, query];\n};\n\n/**\n * Load module file and init it\n *\n * @param {Object} fragment\n */\n\nRouter.loadModule = function(fragment) {\n\tvar self = this;\n\n\tfragment = fragment || backbone.history.fragment;\n\n\tvar moduleName = this.getModuleName(fragment);\n\n\t// if module is loaded first time\n\tif (!this.modules[moduleName]) {\n\t\t// require module file\n\t\tthis.require([this.modulesPath + moduleName], function() {\n\t\t\t// set module init flag to true\n\t\t\tself.modules[moduleName] = true;\n\n\t\t\t// and navigate again with force flag\n\t\t\tbackbone.history.loadUrl(fragment);\n\t\t}, this.onModuleError);\n\t}\n};\n\nRouter.getModuleName = function(fragment) {\n\treturn _(fragment.split('/')).find(_.identity) || this.defaultModuleName;\n};\n\nmodule.exports = backbone.Router.extend(Router);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\n\n// Take jquery or other selectors lib from backbone\nvar $ = backbone.$;\n\nvar splice = Array.prototype.splice;\n\n// Cached regex to split keys for `delegate`.\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\nvar entityNamesSplitter = /\\s*,\\s*/g;\n\nfunction isContainerSkipped(container, options) {\n\tvar exclude = options.exclude;\n\tvar include = options.include;\n\treturn Boolean(\n\t\texclude && _.contains(_.isArray(exclude) ? exclude : [exclude], container) ||\n\t\tinclude && !_.contains(_.isArray(include) ? include : [include], container)\n\t);\n}\n\n/**\n * @class Esencia.View\n * @extend Backbone.View\n */\n\nvar View = {\n\t// This flag is used to detect that view is already initialized\n\tinitialized: false,\n\n\t// Helpers (Object|Fuction) which will be passed to the template\n\ttemplateHelpers: {},\n\n\t// Views are in the resolved state by default\n\twaitsCounter: 0,\n\n\t// This flag is used to check that .wait() is called\n\t// in the constructor/initialize\n\twaitAvailable: true,\n\n\t// Views are not attached by default\n\tattached: false,\n};\n\nvar entityTypes = ['models', 'collections', 'views'];\nvar entityEventTypes = ['modelEvents', 'collectionEvents', 'viewEvents'];\nvar additionalViewOptions = [\n\t'componentsManager', 'template', 'templateHelpers', 'ui', 'triggers'\n];\nvar stateOptions = ['data', 'models', 'collections', 'model', 'collection'];\nvar viewOptions = _.union(\n\tentityTypes, entityEventTypes, additionalViewOptions, stateOptions\n);\n\n/**\n * @constructor\n * @param {Object} [options]\n */\n\nView.constructor = function(options) {\n\tvar self = this;\n\n\toptions = options || {};\n\n\t// populate View instance with fields from options\n\t_.extend(this, _.pick(options, viewOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\t// initialize data\n\tthis.data = _.result(this, 'data', {});\n\n\t// template data should be empty when view is rendered at first time\n\tthis.templateData = {};\n\n\t// create special hash object for all entity events for fast search\n\tthis._prepareEntityEvents();\n\n\t// create instances of nested models\n\tthis._prepareModels();\n\n\t// create instances of nested collections\n\tthis._prepareCollections();\n\n\t// prepare nested views: create instances and wrap to arrays\n\tthis._prepareViews();\n\n\t// delegate events for each views group before constructor\n\t_(this.views).each(function(views, container) {\n\t\tself.delegateEntityEvents('views', container, views);\n\t});\n\n\t// apply default backbone.View constructor\n\t// omit model and collection because we alredy processed this options\n\tbackbone.View.call(this, _.omit(options, 'model', 'collection'));\n\n\t// set waiting state for current view if some nested view is in waiting state\n\t_(this.views).each(function(viewsGroup) {\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tif (view.isWaiting()) {\n\t\t\t\tself.listenToOnce(view, 'resolved', self.wait());\n\t\t\t}\n\t\t});\n\t});\n\n\t// disable .wait(), it available only in the constructor/initialize\n\tthis.waitAvailable = false;\n\n\t// we should delegate events after parent constructor call because\n\t// collections and models could be created in the initialize method\n\n\t// delegate events for each collection\n\t_(this.collections).each(function(collection, name) {\n\t\tself.delegateEntityEvents('collections', name, collection);\n\t});\n\n\tif (this.collection) {\n\t\tthis.delegateEntityEvents('collections', '', this.collection);\n\t}\n\n\t// delegate events for each model\n\t_(this.models).each(function(model, name) {\n\t\tself.delegateEntityEvents('models', name, model);\n\t});\n\n\tif (this.model) {\n\t\tthis.delegateEntityEvents('models', '', this.model);\n\t}\n\n\tif (!this.isWaiting()) {\n\t\tthis.initialized = true;\n\n\t\t_.defer(function() {\n\t\t\tself.trigger('initialized');\n\t\t});\n\t}\n};\n\n/**\n * Modfy view state\n * Method is used to update view state\n *\n * @param {Object} [state] - new state object\n * @param {Object} [options]\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.updateState = function(state, options) {\n\tstate = _.defaults({}, state, {data: {}});\n\toptions = _.defaults({}, options, {\n\t\tapply: true\n\t});\n\n\tvar self = this;\n\n\t_(stateOptions).each(function(stateOption) {\n\t\tif (!_.has(state, stateOption)) return;\n\n\t\tvar targetObj, stateObj, objKeys;\n\n\t\tif (_.contains(['data', 'models', 'collections'], stateOption)) {\n\t\t\tstateObj = state[stateOption];\n\n\t\t\tif (!_.isObject(stateObj)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'State property `' + stateOption + '` should be an object'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\ttargetObj = self[stateOption];\n\t\t\tobjKeys = _.keys(stateObj);\n\t\t} else {\n\t\t\ttargetObj = self;\n\t\t\tstateObj = state;\n\t\t\tobjKeys = [stateOption];\n\t\t}\n\n\t\t_(objKeys).each(function(objKey) {\n\t\t\tif (\n\t\t\t\t_.has(targetObj, objKey) &&\n\t\t\t\t_.contains(['models', 'collections', 'model', 'collection'], stateOption)\n\t\t\t) {\n\t\t\t\tself.undelegateEntityEvents(targetObj[objKey]);\n\t\t\t}\n\n\t\t\ttargetObj[objKey] = stateObj[objKey];\n\n\t\t\tif (_.contains(['models', 'collections'], stateOption)) {\n\t\t\t\tself.delegateEntityEvents(stateOption, objKey, stateObj[objKey]);\n\t\t\t}\n\n\t\t\tif (_.contains(['model', 'collection'], stateOption)) {\n\t\t\t\tself.delegateEntityEvents(stateOption + 's', '', stateObj[objKey]);\n\t\t\t}\n\t\t});\n\t});\n\n\tif (options.apply) {\n\t\tthis.applyState();\n\t}\n\n\treturn this;\n};\n\nView.applyState = function() {\n\tvar stateChanged = false;\n\n\tif (this.template) {\n\t\t// TODO deep clone required here\n\t\tvar templateData = _.clone(this.getTemplateData());\n\n\t\tstateChanged = !this.isStatesEqual(this.templateData, templateData);\n\n\t\tif (stateChanged) this.templateData = templateData;\n\t}\n\n\treturn stateChanged;\n};\n\nView._update = function() {};\n\nView.update = function(state, options) {\n\tif (!this.initialized) {\n\t\tthrow new Error(\n\t\t\t'Method .update() is not available while view is not initialized'\n\t\t);\n\t}\n\n\toptions = _.defaults({}, options, {apply: false});\n\n\tvar self = this;\n\n\tthis.waitAvailable = true;\n\n\tthis.updateState(state, options);\n\n\tthis._update(state);\n\n\t_(this.views).each(function(viewsGroup, container) {\n\t\tif (isContainerSkipped(container, options)) return;\n\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tif (view.isWaiting()) {\n\t\t\t\tself.listenToOnce(view, 'resolved', self.wait());\n\t\t\t}\n\t\t});\n\t});\n\n\tthis.waitAvailable = false;\n\n\tif (!this.isWaiting()) {\n\t\t_.defer(function() {\n\t\t\tself.trigger('updated');\n\t\t});\n\t}\n\n\treturn this;\n};\n\n/**\n * Check that view is changed and should be re-rendered\n * Method returns true by default (always unchanged), could be overriden\n * for specific logic\n *\n * @return {Boolean}\n */\n\nView.isStatesEqual = function(oldState, newState) {\n\treturn _.isEqual(oldState, newState);\n};\n\n/**\n * Switch view to the waiting state\n *\n * @return {Function} - callback function, should be called to resolve view\n */\n\nView.wait = function() {\n\tif (!this.waitAvailable) {\n\t\tthrow new Error(\n\t\t\t'Method .wait() is available only in initialization or updating'\n\t\t);\n\t}\n\n\tvar self = this;\n\n\t++this.waitsCounter;\n\n\t// TODO: think about promises\n\treturn _.once(function() {\n\t\t_.defer(function() {\n\t\t\t--self.waitsCounter;\n\n\t\t\t// exit if view is still waiting\n\t\t\tif (self.isWaiting()) return;\n\n\t\t\t// trigger specific events\n\t\t\tif (self.initialized) {\n\t\t\t\tself.trigger('updated');\n\t\t\t} else {\n\t\t\t\tself.initialized = true;\n\n\t\t\t\tself.trigger('initialized');\n\t\t\t}\n\n\t\t\t// trigger common resolve event\n\t\t\tself.trigger('resolved');\n\t\t});\n\t});\n};\n\n/**\n * Check view waiting state\n *\n * @return {Boolean}\n */\n\nView.isWaiting = function() {\n\treturn this.waitsCounter > 0;\n};\n\n/**\n * Render view\n *\n * @param {Object} options\n * @param {Boolean} options.force\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.render = function(options) {\n\t// stop rendering if view is not initialized\n\tif (!this.initialized) return this;\n\n\toptions = options || {};\n\n\tif (this.template) {\n\t\tvar stateChanged = this.applyState();\n\n\t\t// re-render template only if it exists and if it is necessary\n\t\tif (options.force || !this.attached || stateChanged) {\n\t\t\t// recursive detach all nested views\n\t\t\tthis.detachViews(options);\n\n\t\t\t// detach view from DOM element\n\t\t\tthis.detach();\n\n\t\t\t// render template with data\n\t\t\tvar locals = _(this)\n\t\t\t\t.chain()\n\t\t\t\t.result('templateHelpers')\n\t\t\t\t.extend(this.templateData)\n\t\t\t\t.value();\n\n\t\t\tvar html = this._renderTemplate(this.template, locals);\n\n\t\t\tif (!_.isString(html)) {\n\t\t\t\tthrow new Error('`_renderTemplate` method should return a HTML string');\n\t\t\t}\n\n\t\t\t// render html with jqeury (or other lib) call\n\t\t\tvar $el = $(html);\n\n\t\t\tif (!$el.length) {\n\t\t\t\tthrow new Error('View template produces empty html');\n\t\t\t}\n\n\t\t\tif ($el.length > 1) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'View template produces html with more than one root elements'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.setElement($el);\n\t\t}\n\t} else {\n\t\t// re-ensure element if it is not ensured\n\t\tif (!this.$el.length) this._ensureElement();\n\t}\n\n\t// trigger event\n\tthis.trigger('render');\n\n\t// render nested views\n\tthis.renderViews(options);\n\n\tif (!this.parent || this.$el.parent().length) {\n\t\t// attach all nested views first\n\t\tthis.attachViews(options);\n\n\t\t// attach current view\n\t\tthis.attach();\n\t}\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Get data for template rendering\n * Returns data by default, could be overriden\n *\n * @return {Object}\n */\n\nView.getTemplateData = function() {\n\treturn {};\n};\n\n/**\n * Render template with data, return html\n * By default this method simply calls template function with data as argument\n * Override this function to change template rendering logic\n *\n * @param {Function} template - template function for rendering\n * @param {Object} data - data for rendering\n * @return {String} - rendered html\n */\n\nView._renderTemplate = function(template, locals) {\n\tif (!_.isFunction(template)) {\n\t\tthrow new Error('View `template` should be a function');\n\t}\n\n\treturn template(locals);\n};\n\n/**\n * Render all nested view\n *\n * @param {Object} options\n * @param {Boolean} options.force\n * @return {Esencia.View} - view instance for chaining\n*/\n\nView.renderViews = function(options) {\n\t// stop rendering if view is not initialized\n\tif (!this.initialized) return this;\n\n\tvar self = this;\n\n\t// iterate by each views group\n\t_(this.views).each(function(viewsGroup, container) {\n\t\tif (isContainerSkipped(container, options)) return;\n\n\t\t// return if view group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call render for each views from view group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview.render(_.omit(options, 'include', 'exclude'));\n\t\t});\n\n\t\t// get first container or $el\n\t\tvar $container = container ? self.$(container).first() : self.$el;\n\n\t\tif (!$container.length) {\n\t\t\tthrow new Error('Container \"' + container + '\" is not found');\n\t\t}\n\n\t\tvar containerEl = $container.get(0);\n\n\t\t// dom is changed if some view from group is not in current container\n\t\tvar domChanged = _(viewsGroup).some(function(view) {\n\t\t\tvar parentEl = view.$el.parent().get(0);\n\t\t\treturn (\n\t\t\t\t!view.attached ||\n\t\t\t\t!parentEl ||\n\t\t\t\tparentEl !== containerEl\n\t\t\t);\n\t\t});\n\n\t\tif (domChanged) {\n\t\t\t// re-append views group to container\n\t\t\tvar $els = [];\n\n\t\t\t_(viewsGroup).each(function(view) {\n\t\t\t\t$els.push(view.$el);\n\t\t\t});\n\n\t\t\t// TODO: add some rendering optimizations here\n\n\t\t\t// put all views to $container\n\t\t\t$container.append($els);\n\t\t}\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Set view to the views group or replace some view at the specified position\n *\n * @param {Esencia.View} view\n * @param {String} container - container selector\n * @param {Object} [options]\n * @param {Integer} [options.at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setView = function(view, container, options) {\n\treturn this._setViews([view], container, options);\n};\n\n/**\n * Set views to the views group or replace some view at the specified position\n *\n * @param {Esencia.View[]} views\n * @param {String} container - container selector\n * @param {Object} [options]\n * @param {Integer} [options.at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setViews = function(views, container, options) {\n\treturn this._setViews(views, container, options);\n};\n\n/**\n * Append view to the end of views group\n *\n * @param {Esencia.View} view\n * @param {String} container - container selector\n * @param {Object} [options]\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.appendView = function(view, container, options) {\n\toptions = _.omit(options || {}, 'at');\n\treturn this._addViews([view], container, options);\n};\n\n/**\n * Append views to the end of views group\n *\n * @param {Esencia.View[]} views\n * @param {String} container - container selector\n * @param {Object} [options]\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.appendViews = function(views, container, options) {\n\toptions = _.omit(options || {}, 'at');\n\treturn this._addViews(views, container, options);\n};\n\n/**\n * Prepend view to start of views group\n *\n * @param {Esencia.View} view\n * @param {String} container - container selector\n * @param {Object} [options]\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.prependView = function(view, container, options) {\n\toptions = _.extend({}, options, {at: 0});\n\treturn this._addViews([view], container, options);\n};\n\n/**\n * Prepend views to start of views group\n *\n * @param {Esencia.View[]} views\n * @param {String} container - container selector\n * @param {Object} [options]\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.prependViews = function(views, container, options) {\n\toptions = _.extend({}, options, {at: 0});\n\treturn this._addViews(views, container, options);\n};\n\n/**\n * Insert view to the views group at the specified position\n * If options.at is not passed method inserts view to the end of\n * the views group (append-like)\n *\n * @param {Esencia.View} view\n * @param {String} container - container selector\n * @param {Object} [options]\n * @param {Integer} [options.at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.addView = function(view, container, options) {\n\treturn this._addViews([view], container, options);\n};\n\n/**\n * Insert views to the views group at the specified position\n * If options.at is not passed method inserts views to the end of\n * the views group (append-like)\n *\n * @param {Esencia.View[]} views\n * @param {String} container - container selector\n * @param {Object} [options]\n * @param {Integer} [options.at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.addViews = function(views, container, options) {\n\treturn this._addViews(views, container, options);\n};\n\n/**\n * Remove view from views group container by index or view instance\n * If index is passed it remove view at the specified position\n *\n * @param {Esencia.View} [view]\n * @param {String} container - container selector\n * @param {Integer} [at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.removeView = function(view, container, at) {\n\tif (arguments.length < 2) {\n\t\tthrow new Error('\"view\" or \"at\" arguments must be specified');\n\t}\n\n\tif (_.isString(view)) {\n\t\tat = container;\n\t\tcontainer = view;\n\t\tview = this.getView(container, at);\n\t\tif (!view) return this;\n\t}\n\n\treturn this._removeViews([view], container);\n};\n\n/**\n * Remove views from views group container\n * If views are passed remove only these views\n * Othervise remove all views from container\n *\n * @param {Esencia.View[]} [views]\n * @param {String} container - container selector\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.removeViews = function(views, container) {\n\tif (_.isString(views)) {\n\t\tcontainer = views;\n\t\tviews = this.getViews(container);\n\t}\n\n\treturn this._removeViews(views, container);\n};\n\n/**\n * Get single view from views group at the specified position\n *\n * @param {String} container - container selector\n * @param {Integer} [at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.getView = function(container, at) {\n\treturn this.getViews(container)[at || 0] || null;\n};\n\n/**\n * Get views group\n *\n * @param {String} container - container selector\n * @return {Esencia.View[]} - view instance for chaining\n */\n\nView.getViews = function(container) {\n\treturn _.clone(this.views[container]) || [];\n};\n\n/**\n * Get views count in the views group\n *\n * @param {String} container - container selector\n * @return {Integer}\n */\n\nView.getViewsCount = function(container) {\n\treturn (this.views[container] || []).length;\n};\n\nView._addViews = function(views, container, options) {\n\tvar self = this;\n\n\tvar viewsGroup = this.getViews(container);\n\n\t// if index is not specified set it value as last index of views group\n\toptions = _.defaults({}, options, {at: viewsGroup.length});\n\n\t_(views).each(function(view) {\n\t\tif (view.parent) {\n\t\t\tview.parent.removeView(view, view.container);\n\t\t}\n\t});\n\n\n\t// insert views\n\tif (!this.views[container]) this.views[container] = [];\n\tsplice.apply(this.views[container], [options.at, 0].concat(views));\n\n\t// set each view parent to current\n\t_(views).each(function(view) {\n\t\tview.parent = self;\n\t\tview.container = container;\n\t});\n\n\tthis.delegateEntityEvents('views', container, views);\n\n\treturn this;\n};\n\nView._setViews = function(views, container, options) {\n\toptions = options || {};\n\n\tvar oldViews;\n\n\tif (_.isNumber(options.at)) {\n\t\t// if index is specified get view from specific position as old\n\t\tvar oldView = this.getView(container, options.at);\n\t\toldViews = oldView ? [oldView] : [];\n\t} else {\n\t\t// if no index - get all views from group as old\n\t\toldViews = this.getViews(container);\n\t}\n\n\t// exit if views equal oldViews\n\tif (\n\t\toldViews.length === views.length &&\n\t\t_(oldViews).all(function(oldView, index) {\n\t\t\treturn oldView === views[index];\n\t\t})\n\t) return this;\n\n\tif (oldViews.length) {\n\t\t// if old views array is not empty remove them from parent view\n\t\tthis._removeViews(oldViews, container);\n\n\t\t// and remove views from DOM\n\t\t_(oldViews).each(function(view) {\n\t\t\tview.remove();\n\t\t});\n\t}\n\n\t// insert new views\n\treturn this._addViews(views, container, options);\n};\n\nView._removeViews = function(views, container) {\n\tvar self = this;\n\n\tvar viewsGroup = this.getViews(container);\n\n\tif (!viewsGroup.length) return this;\n\n\tvar viewObjs = _(views)\n\t\t.chain()\n\t\t.uniq()\n\t\t.map(function(view) {\n\t\t\treturn {\n\t\t\t\tview: view,\n\t\t\t\tindex: _.indexOf(viewsGroup, view)\n\t\t\t};\n\t\t})\n\t\t.filter(function(viewObj) {\n\t\t\treturn viewObj.index >= 0;\n\t\t})\n\t\t.sortBy(function(viewObj) {\n\t\t\treturn -viewObj.index;\n\t\t})\n\t\t.value();\n\n\tif (!viewObjs.length) return this;\n\n\t_(viewObjs).each(function(viewObj) {\n\t\tvar view = viewObj.view;\n\n\t\t// remove item from group\n\t\tsplice.call(self.views[container], viewObj.index, 1);\n\n\t\t// undelegate all entity events\n\t\tself.undelegateEntityEvents(view);\n\n\t\t// unset view parent\n\t\tdelete view.parent;\n\t});\n\n\treturn this;\n};\n\n/**\n * Original setElement do undelegateEvents/delegateEvents, we remove it\n * because we have special detach/attach methods for this purpose\n *\n * @override\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setElement = function(element) {\n\tvar $previousEl = this.$el;\n\n\tthis._setElement(element);\n\n\t// insert html to $el\n\tif ($previousEl && $previousEl.parent().length) {\n\t\t$previousEl.replaceWith(this.$el);\n\t}\n\n\tthis.ensureUI();\n\n\treturn this;\n};\n\nView.ensureUI = function(ui) {\n\tui = ui || _.result(this, 'ui', {});\n\tvar self = this;\n\tthis.$ui = _(ui).mapObject(function(selector) {\n\t\treturn self.$(selector);\n\t});\n\treturn this;\n};\n\nView.delegateTriggers = function(triggers) {\n\ttriggers = triggers || _.result(this, 'triggers');\n\tif (!triggers) return this;\n\tvar self = this;\n\tthis.undelegateTriggers();\n\t_(triggers).each(function(event, key) {\n\t\tvar match = key.match(delegateEventSplitter);\n\t\tvar eventName = match[1];\n\t\tvar selector = match[2];\n\t\tself.delegateTrigger(eventName, selector, _.bind(self.trigger, self, event));\n\t});\n\treturn this;\n};\n\nView.delegateTrigger = function(eventName, selector, listener) {\n\tthis.$el.on(eventName + '.delegateTriggers' + this.cid, selector, listener);\n\treturn this;\n};\n\nView.undelegateTriggers = function() {\n\tif (this.$el) this.$el.off('.delegateTriggers' + this.cid);\n\treturn this;\n};\n\nView.undelegateTrigger = function(eventName, selector, listener) {\n\tthis.$el.off(eventName + '.delegateTriggers' + this.cid, selector, listener);\n\treturn this;\n};\n\nView.delegateEntityEvents = function(entityType, entityName, entities) {\n\tif (!_.has(this._entityEvents, entityType)) {\n\t\tthrow new Error(\n\t\t\t'Wrong entity type \"' + entityType + '\", available values: ' +\n\t\t\tentityTypes.join(', ')\n\t\t);\n\t}\n\n\tvar self = this;\n\n\tif (!entities) entities = this[entityType][entityName];\n\tif (!entities) return this;\n\tif (!_.isArray(entities)) entities = [entities];\n\tvar events = this._entityEvents[entityType][entityName];\n\tif (events) {\n\t\tthis.undelegateEntityEvents(entities);\n\n\t\t_(events).each(function(event) {\n\t\t\t_(entities).each(function(entity) {\n\t\t\t\tself.listenTo(entity, event.name, event.listener);\n\t\t\t});\n\t\t});\n\t}\n\n\treturn this;\n};\n\nView.undelegateEntityEvents = function(entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\t_(entities).each(function(entity) {\n\t\tself.stopListening(entity);\n\t});\n\treturn this;\n};\n\nView._prepareEntityEvents = function() {\n\tvar self = this;\n\n\t// Hash for entity events fast search\n\tthis._entityEvents = {};\n\t_(entityTypes).each(function(entityType) {\n\t\tself._entityEvents[entityType] = {};\n\t});\n\n\t// bind all prefixed events to view then call native delegate events\n\t_(entityEventTypes).each(function(eventType, index) {\n\t\tvar events = _.result(self, eventType);\n\t\tif (!events) return;\n\t\tvar entityType = entityTypes[index];\n\t\tself._addEntityEvents(entityType, events);\n\t});\n};\n\nView._addEntityEvents = function(entityType, events) {\n\tvar self = this;\n\n\t_(events).each(function(method, key) {\n\t\tif (!_.isFunction(method)) method = self[method];\n\t\tif (!method) return;\n\t\tvar match = key.match(delegateEventSplitter);\n\t\tvar eventName = match[1];\n\t\tvar entityNames = match[2].replace(entityNamesSplitter, ',').split(',');\n\t\tmethod = _.bind(method, self);\n\t\t_(entityNames).each(function(entityName) {\n\t\t\tself._addEntityEvent(entityType, entityName, eventName, method);\n\t\t});\n\t});\n};\n\nView._addEntityEvent = function(entityType, entityName, eventName, listener) {\n\tvar entityEvents = this._entityEvents[entityType];\n\tentityEvents[entityName] = entityEvents[entityName] || [];\n\tentityEvents[entityName].push({\n\t\tname: eventName,\n\t\tlistener: listener\n\t});\n};\n\n/**\n * Wrap all non-array view groups to arrays with one element and delegate events\n */\n\nView._prepareViews = function() {\n\tthis.views = _.result(this, 'views', {});\n\n\tthis.views = _(this.views).mapObject(function(views) {\n\t\tif (!views) return [];\n\t\tviews = _.isArray(views) ? views : [views];\n\t\treturn _(views).map(function(view) {\n\t\t\treturn _.isFunction(view) ? new view() : view;\n\t\t});\n\t});\n};\n\nView._prepareModels = function() {\n\tthis.models = _.result(this, 'models', {});\n\n\tthis.models = _(this.models).mapObject(function(model) {\n\t\treturn _.isFunction(model) ? new model() : model;\n\t});\n\n\tif (this.model && _.isFunction(this.model)) {\n\t\tthis.model = new this.model();\n\t}\n};\n\nView._prepareCollections = function() {\n\tthis.collections = _.result(this, 'collections', {});\n\n\tthis.collections = _(this.collections).mapObject(function(collection) {\n\t\treturn _.isFunction(collection) ? new collection() : collection;\n\t});\n\n\tif (this.collection && _.isFunction(this.collection)) {\n\t\tthis.collection = new this.collection();\n\t}\n};\n\n/**\n * Attach all nested views\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.attachViews = function(options) {\n\toptions = options || {};\n\n\t// iterate by each nested views groups\n\t_(this.views).each(function(viewsGroup, container) {\n\t\tif (isContainerSkipped(container, options)) return;\n\n\t\t// call attach method for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\t// recursive attach all nested views\n\t\t\tview.attachViews(_.omit(options, 'include', 'exclude'));\n\n\t\t\t// attach current view\n\t\t\tview.attach();\n\t\t});\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * beforeAttach is empty by default\n * It called before attach call, could be overriden to add some specific logic\n * before view will be attached to the DOM\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.beforeAttach = function() {\n\treturn this;\n};\n\n/**\n * afterAttach is empty by default\n * It called after attach call, could be overriden to add some specific logic\n * for DOM manipulations\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.afterAttach = function() {\n\treturn this;\n};\n\n/**\n * Attach new view to current view $el\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.attach = function() {\n\t// return if current view is already attached\n\tif (this.attached) return this;\n\n\t// do some user beforeAttach actions\n\tthis.beforeAttach();\n\n\t// trigger attach event\n\tthis.trigger('beforeAttach');\n\n\tvar previousView = this.$el.data('esencia-view');\n\tif (previousView) {\n\t\t// recursive detach all nested views\n\t\tpreviousView.detachViews();\n\n\t\t// detach previous view\n\t\tpreviousView.detach();\n\t}\n\n\t// attach current view and set attr\n\tthis.$el.data('esencia-view', this).attr('esencia-view', this.cid);\n\n\t// enable all DOM events\n\tthis.delegateEvents();\n\n\tthis.delegateTriggers();\n\n\tthis.attached = true;\n\n\t// do some user afterAttach actions\n\tthis.afterAttach();\n\n\t// trigger afterAttach event\n\tthis.trigger('afterAttach');\n\n\treturn this;\n};\n\n/**\n * Detach all nested views\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.detachViews = function(options) {\n\toptions = options || {};\n\n\t// iterate by each views groups\n\t_(this.views).each(function(viewsGroup, container) {\n\t\tif (isContainerSkipped(container, options)) return;\n\n\t\t// call detach method for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\t// recursive detach all nested views\n\t\t\tview.detachViews(_.omit(options, 'include', 'exclude'));\n\n\t\t\t// detach current view\n\t\t\tview.detach();\n\t\t});\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * beforeDetach is empty by default\n * It is called before detach method call, could be overriden to add some\n * specific logic before view will be detached from DOM\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.beforeDetach = function() {\n\treturn this;\n};\n\n/**\n * afterDetach is empty by default\n * It is called after detach method call, could be overriden to add some\n * specific logic after view will be detached from DOM\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.afterDetach = function() {\n\treturn this;\n};\n\n/**\n * Detach view from current view $el\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.detach = function() {\n\t// return if current view is not already attached\n\tif (!this.attached) return this;\n\n\t// trigger beforeDetach event\n\tthis.trigger('beforeDetach');\n\n\t// do some user beforeDetach actions\n\tthis.beforeDetach();\n\n\t// remove attr and data from $el\n\tthis.$el.removeData('esencia-view').removeAttr('esencia-view');\n\n\t// disable all DOM events\n\tthis.undelegateEvents();\n\n\tthis.undelegateTriggers();\n\n\tthis.attached = false;\n\n\t// trigger afterDetach event\n\tthis.trigger('afterDetach');\n\n\t// do some user afterDetach actions\n\tthis.afterDetach();\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Remove view from parent container and remove element from DOM\n */\n\nView.remove = function() {\n\t// remove current view from parent view container\n\tif (this.parent) {\n\t\tthis.parent.removeView(this, this.container);\n\t}\n\n\t// detach all nested views first\n\tthis.detachViews();\n\n\t// detach current view\n\tthis.detach();\n\n\t// remove DOM element\n\treturn backbone.View.prototype.remove.call(this);\n};\n\n/**\n * Get view, that attached to closest element with attr `esencia-view`\n *\n * @param {String | $} selector\n * @return {Esencia.View | Null}\n */\n\nView.getClosestView = function(selector) {\n\tvar $selector = $(selector);\n\n\tif (!$selector.is('[esencia-view]')) {\n\t\t$selector = $selector.closest('[esencia-view]');\n\t}\n\n\treturn $selector.length ? $selector.data('esencia-view') : null;\n};\n\nmodule.exports = backbone.View.extend(View);\n","'use strict';\n\nvar backbone = require('backbone');\nvar _ = require('underscore');\nvar Router = require('./classes/router');\nvar Collection = require('./classes/collection');\nvar Model = require('./classes/model');\nvar View = require('./classes/view');\nvar CollectionView = require('./classes/collectionView');\nvar ComponentsManager = require('./classes/componentsManager');\nvar componentsManager = require('./utils/componentsManager');\nvar extend = require('./utils/extend');\n\nvar Esencia = exports;\n\n// Allow the `Esencia` object to serve as a global event bus, for folks who\n// want global \"pubsub\" in a convenient place.\n_.extend(Esencia, backbone.Events);\n\n// Export some Backbone fields\nvar backboneFields = ['Events', 'History', 'history'];\n_.extend(Esencia, _.pick(backbone, backboneFields));\n\n// Export all Esencia classes\n_.extend(Esencia, {\n\tRouter: Router,\n\tCollection: Collection,\n\tModel: Model,\n\tView: View,\n\tCollectionView: CollectionView,\n\tComponentsManager: ComponentsManager\n});\n\n// Export the default Esencia.componentsManager\nEsencia.componentsManager = componentsManager;\n\n// Export extend helper for subclassing\nEsencia.extend = extend;\n","'use strict';\n\nvar ComponentsManager = require('../classes/componentsManager');\n\n// Create the default Esencia.componentsManager\nmodule.exports = new ComponentsManager();\n","'use strict';\n\nvar _ = require('underscore');\n\n// Default http method type for exec methods\nvar DEFAULT_EXEC_TYPE = 'PUT';\n\n// Throw an error when a URL is needed, and none is supplied.\nvar urlError = function() {\n\tthrow new Error('A `url` property or function must be specified');\n};\n\n// Wrap an optional error callback with a fallback error event.\nexports.wrapError = function(model, options) {\n\tvar error = options.error;\n\toptions.error = function(resp) {\n\t\tif (error) error.call(options.context, model, resp, options);\n\t\tmodel.trigger('error', model, resp, options);\n\t};\n};\n\nexports.prepareOptions = function(method, model, options) {\n\toptions = _.extend({\n\t\ttype: DEFAULT_EXEC_TYPE,\n\t\tdataType: 'json',\n\t\tcontentType: 'application/json',\n\t\tprocessData: false\n\t}, options);\n\n\t// Ensure that we have a URL and add method name to it\n\tif (!options.url) {\n\t\tvar url = _.result(model, 'url') || urlError();\n\t\toptions.url = url.replace(/[^\\/]$/, '$&/') + method;\n\t}\n\n\t// stringify data to json\n\tif (options.data && _.isObject(options.data) && !options.processData) {\n\t\toptions.data = JSON.stringify(options.data);\n\t}\n\n\treturn options;\n};\n\n// HTTP type to backbone sync methods map\nvar baseMethodsMap = {\n\t'POST': 'create',\n\t'PUT': 'update',\n\t'PATCH': 'patch',\n\t'DELETE': 'delete',\n\t'GET': 'read'\n};\n\nexports.baseMethods = _.values(baseMethodsMap);\n\nexports.getFakeBaseMethod = function(options) {\n\treturn baseMethodsMap[options.type.toUpperCase()];\n};\n","'use strict';\n\nvar backbone = require('backbone');\n\n// There is no good exports of extend method from backbone.\n// Take it from View because no other ways\nmodule.exports = backbone.View.extend;\n"]}