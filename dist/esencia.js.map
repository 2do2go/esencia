{"version":3,"sources":["lib/classes/collection.js","lib/classes/componentsManager.js","lib/classes/model.js","lib/classes/router.js","lib/classes/view.js","lib/esencia.js","lib/utils/componentsManager.js","lib/utils/exec.js","lib/utils/extend.js"],"names":["_","_require","backbone","execUtils","Collection","sync","method","collection","options","prepareOptions","getFakeBaseMethod","prototype","call","exec","extend","parse","success","resp","fetch","reset","context","trigger","wrapError","module","exports","View","isTreeNodeChanged","oldNode","node","Boolean","component","name","view","isWaiting","attached","isUnchanged","ComponentsManager","pick","componentManagerOptions","components","tree","autoAddRoot","_addRoot","initialize","apply","arguments","componentOptions","Events","rootEl","defaultParent","RootView","el","add","parent","defaults","process","has","uniqueId","isString","Error","isNull","container","get","remove","names","callback","isArray","noop","_buildTree","oldTree","_applyTree","children","self","buildHashedTree","length","parentNames","nodes","chain","uniq","map","push","compact","value","each","find","child","isEmpty","filter","some","params","afterCallback","after","iterate","oldChildren","setData","setView","renderViews","include","attachViews","exclude","union","render","index","detach","result","componentsManager","listenToOnce","Model","model","serverAttrs","set","Router","autoloadModules","modulesPath","defaultModuleName","onModuleError","routerOptions","constructor","modules","route","url","isFunction","isObject","componentNames","pluck","join","loadModule","moduleName","split","identity","require","moduleInit","navigate","replace","force","qs","$","splice","Array","delegateEventSplitter","nestedEntityTypes","isContainerSkipped","contains","templateHelpers","waitsCounter","waitAvailable","viewOptions","data","_prepareEvents","type","_prepareViews","views","wait","collections","key","delegateNestedEvents","models","once","defer","_render","template","getTemplateData","html","renderTemplate","$el","setElement","_ensureElement","$container","attach","viewsGroup","omit","first","containerEl","domChanged","$els","append","_updateViews","setViews","appendView","_insertViews","appendViews","prependView","prependViews","insertView","insertViews","removeView","getView","_removeViews","removeViews","getViews","clone","concat","oldViews","all","oldView","viewObjs","indexOf","viewObj","sortBy","undelegateNestedEvents","element","$previousEl","_setElement","replaceWith","delegateEvents","events","entities","listeners","_nestedEventsHash","listener","entity","listenTo","eventName","handler","stopListening","typeEventsHash","match","entityKeys","bind","entityKey","afterAttach","previousView","attr","cid","detachViews","beforeDetach","removeData","removeAttr","undelegateEvents","getClosestView","selector","$selector","is","closest","Esencia","backboneFields","DEFAULT_EXEC_TYPE","urlError","error","dataType","contentType","processData","JSON","stringify","baseMethodsMap","toUpperCase"],"mappings":"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","file":"esencia.js","sourceRoot":".","sourcesContent":["'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar execUtils = require('../utils/exec');\n\n/**\n * @class Esencia.Collection\n * @extend Backbone.Collection\n */\n\nvar Collection = {};\n\n/**\n * Override `sync` to add exec custom method functionality\n *\n * @override\n */\n\nCollection.sync = function(method, collection, options) {\n\toptions = execUtils.prepareOptions(method, collection, options);\n\tmethod = execUtils.getFakeBaseMethod(options);\n\treturn backbone.Collection.prototype.sync.call(\n\t\tthis, method, collection, options\n\t);\n};\n\n/**\n * Exec custom non-REST method on collection\n * It trigger `exec:[method]` event after success method exec\n *\n * @param {String} method\n * @param {Object} options\n */\n\nCollection.exec = function(method, options) {\n\toptions = _.extend({parse: true}, options);\n\tvar collection = this;\n\tvar success = options.success;\n\toptions.success = function(resp) {\n\t\tif (options.fetch) collection[options.reset ? 'reset' : 'set'](resp, options);\n\t\tif (success) success.call(options.context, collection, resp, options);\n\t\tcollection.trigger('exec:' + method, collection, resp, options);\n\t};\n\texecUtils.wrapError(this, options);\n\treturn this.sync(method, this, options);\n};\n\nmodule.exports = backbone.Collection.extend(Collection);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar View = require('./view');\nvar extend = require('../utils/extend');\n\nfunction isTreeNodeChanged(oldNode, node) {\n\treturn Boolean(\n\t\t!oldNode ||\n\t\toldNode.component.name !== node.component.name ||\n\t\t!oldNode.view ||\n\t\toldNode.view instanceof node.component.View === false ||\n\t\toldNode.view.isWaiting() ||\n\t\t!oldNode.view.attached ||\n\t\t!oldNode.view.isUnchanged()\n\t);\n}\n\n/**\n * @class Esencia.ComponentsManager\n */\n\nvar ComponentsManager = function(options) {\n\t// populate ComponentsManager instance with fields from options\n\t_.extend(this, _.pick(options, componentManagerOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\t// all components hash\n\tthis.components = {};\n\n\t// current components tree that rendered at this moment\n\tthis.tree = [];\n\n\t// add default root component, in most cases this is what you need\n\tif (this.autoAddRoot) this._addRoot();\n\n\tthis.initialize.apply(this, arguments);\n};\n\nvar componentManagerOptions = [\n\t'rootEl', 'autoAddRoot', 'defaultParent'\n];\n\n var componentOptions = [\n\t'name', 'parent', 'container', 'View', 'models', 'collections', 'viewOptions'\n];\n\n_.extend(ComponentsManager.prototype, backbone.Events, {\n\t// You can set selector of any element at the page if you want restrict\n\t// specific page area that component manager will process\n\trootEl: 'html',\n\n\t// Add default root component, in most cases this is what you need\n\tautoAddRoot: true,\n\n\t// Default parent component name, this option will set as first root\n\t// component name\n\tdefaultParent: null,\n\n\t/**\n\t * Initialize is an empty function by default. Override it with your own\n\t * initialization logic.\n\t */\n\n\tinitialize: function() {},\n\n\t/**\n\t * Add default root component to the components list\n\t */\n\n\t_addRoot: function() {\n\t\tvar RootView = View.extend({\n\t\t\tel: this.rootEl\n\t\t});\n\n\t\tthis.add({\n\t\t\tparent: null,\n\t\t\tView: RootView\n\t\t});\n\t},\n\n\t/**\n\t * Add component to the components list\n\t *\n\t * @param {Object} options\n\t * @param {String} options.name - component name\n\t * @param {View} options.View - component view constructor\n\t * @param {String|Null} [options.parent] - component parent name or null\n\t * for roots\n\t * @param {String} [options.container] - view container, required if parent\n\t * is string\n\t * @param {Boolean} [options.process] - process component after add\n\t */\n\n\tadd: function(options) {\n\t\toptions = _.defaults({}, options, {\n\t\t\tparent: this.defaultParent,\n\t\t\tprocess: false\n\t\t});\n\n\t\tvar component = _.pick(options, componentOptions);\n\n\t\tif (!_.has(component, 'name')) {\n\t\t\tcomponent.name = _.uniqueId('__COMPONENT_') + '__';\n\t\t}\n\n\t\tif (!_.isString(component.name)) {\n\t\t\tthrow new Error('Component `name` option should be a string');\n\t\t}\n\n\t\tif (_.has(this.components, component.name)) {\n\t\t\tthrow new Error('Duplicate component with name \"' + component.name + '\"');\n\t\t}\n\n\t\tif (!_.has(component, 'View')) {\n\t\t\tthrow new Error('Component `View` option is required');\n\t\t}\n\n\t\tif (!_.isString(component.parent) && !_.isNull(component.parent)) {\n\t\t\tthrow new Error('Component `parent` option should be a string or null');\n\t\t}\n\n\t\tif (_.isNull(component.parent) && _.has(component, 'container')) {\n\t\t\tthrow new Error('Root component could not have a container');\n\t\t}\n\n\t\tif (_.isString(component.parent) && !_.has(component, 'container')) {\n\t\t\tthrow new Error(\n\t\t\t\t'Component `container` option is required for components with parent'\n\t\t\t);\n\t\t}\n\n\t\tif (_.has(component, 'container') && !_.isString(component.container)) {\n\t\t\tthrow new Error('Component `container` option should be a string');\n\t\t}\n\n\t\tthis.components[component.name] = component;\n\n\t\tif (_.isNull(this.defaultParent) && _.isNull(component.parent)) {\n\t\t\tthis.defaultParent = component.name;\n\t\t}\n\n\t\t// process components tree in force mode\n\t\tif (options.process) {\n\t\t\tthis.process(component.name);\n\t\t}\n\n\t\treturn component;\n\t},\n\n\t/**\n\t * Get component by name\n\t *\n\t * @param {String} name - component name\n\t * @return {Object} component\n\t */\n\n\tget: function(name) {\n\t\tvar component = this.components[name];\n\n\t\tif (!component) {\n\t\t\tthrow new Error('Component with name \"' + name + '\" does not exist');\n\t\t}\n\n\t\treturn component;\n\t},\n\n\t/**\n\t * Remove component by name\n\t *\n\t * @param {String} name - component name\n\t */\n\n\tremove: function(name) {\n\t\tdelete this.components[name];\n\t},\n\n\t/**\n\t * Process components tree by name(s) and call a callback on done\n\t *\n\t * @param {String|String[]} names - component name or names list\n\t * @params {Function} [callback]\n\t */\n\n\tprocess: function(names, callback) {\n\t\tif (!_.isArray(names)) names = [names];\n\t\tcallback = callback || _.noop;\n\n\t\tvar tree = this._buildTree(names);\n\t\tvar oldTree = this.tree;\n\t\tthis.tree = [];\n\n\t\tthis._applyTree({\n\t\t\tparent: {children: this.tree},\n\t\t\toldTree: oldTree,\n\t\t\ttree: tree\n\t\t}, callback);\n\t},\n\n\t_buildTree: function(names) {\n\t\tvar self = this;\n\n\t\t// internal function for recursion\n\t\tvar buildHashedTree = function(names, tree) {\n\t\t\t// exit with empty tree if names list is empty\n\t\t\tif (!names.length) return tree;\n\n\t\t\tvar parentNames = [];\n\n\t\t\t// create component nodes\n\t\t\tvar nodes = _(names)\n\t\t\t\t.chain()\n\t\t\t\t.uniq()\n\t\t\t\t.map(function(name) {\n\t\t\t\t\tvar component = self.get(name);\n\n\t\t\t\t\t// skip component if it is already in the tree\n\t\t\t\t\tif (_.has(tree, component.name)) return null;\n\n\t\t\t\t\t// create node\n\t\t\t\t\tvar node = {\n\t\t\t\t\t\tcomponent: component,\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t};\n\n\t\t\t\t\t// add parent name to the list\n\t\t\t\t\tif (_.isString(component.parent)) {\n\t\t\t\t\t\tparentNames.push(component.parent);\n\t\t\t\t\t}\n\n\t\t\t\t\t// add nodes to the hashed tree first to prevent cycles\n\t\t\t\t\ttree[component.name] = node;\n\n\t\t\t\t\treturn node;\n\t\t\t\t})\n\t\t\t\t.compact()\n\t\t\t\t.value();\n\n\t\t\t// build new tree for parent components\n\t\t\ttree = buildHashedTree(parentNames, tree);\n\n\t\t\t// add each node to the parent children list if component has a parent\n\t\t\t_(nodes).each(function(node) {\n\t\t\t\tif (_.isString(node.component.parent)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.component.container &&\n\t\t\t\t\t\t_(tree[node.component.parent].children).find(function(child) {\n\t\t\t\t\t\t\treturn child.component.container === node.component.container;\n\t\t\t\t\t\t})\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Components could not have same container and parent in one tree'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\ttree[node.component.parent].children.push(node);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn tree;\n\t\t};\n\n\t\tvar tree = buildHashedTree(names, {});\n\n\t\tif (_.isEmpty(tree)) {\n\t\t\tthrow new Error('Components tree is empty');\n\t\t}\n\n\t\t// filter root components\n\t\ttree = _(tree).filter(function(node) {\n\t\t\treturn _.isNull(node.component.parent);\n\t\t});\n\n\t\tif (!tree.length) {\n\t\t\tthrow new Error('Components tree should have at least one root node');\n\t\t}\n\n\t\tif (\n\t\t\t_(tree).some(function(node) {\n\t\t\t\treturn node.component.container;\n\t\t\t})\n\t\t) {\n\t\t\tthrow new Error('Root component could not have a container');\n\t\t}\n\n\t\treturn tree;\n\t},\n\n\t_applyTree: function(params, callback) {\n\t\tvar self = this;\n\n\t\tvar parent = params.parent;\n\n\t\tvar afterCallback = _.after(params.tree.length, callback);\n\n\t\tvar iterate = function(oldNode, node) {\n\t\t\tvar container = node.component.container;\n\n\t\t\tvar children = node.children;\n\t\t\tvar oldChildren = oldNode ? oldNode.children : [];\n\n\t\t\t// set view data\n\t\t\tnode.view.setData();\n\n\t\t\tif (!node.view.attached && container) {\n\t\t\t\t// render view with container from parent view\n\t\t\t\tparent.view\n\t\t\t\t\t.setView(node.view, container)\n\t\t\t\t\t.renderViews({include: [container]})\n\t\t\t\t\t.attachViews({include: [container]});\n\t\t\t} else {\n\t\t\t\t// exclude list is an union of old and new children\n\t\t\t\tvar exclude = _.union(\n\t\t\t\t\t_(children).chain().map(function(child) {\n\t\t\t\t\t\treturn child.component.container;\n\t\t\t\t\t}).compact().value(),\n\t\t\t\t\t_(oldChildren).chain().map(function(child) {\n\t\t\t\t\t\treturn child.component.container;\n\t\t\t\t\t}).compact().value()\n\t\t\t\t);\n\n\t\t\t\t// render view without container directly\n\t\t\t\tnode.view.render({exclude: exclude});\n\t\t\t}\n\n\t\t\t// clear children field in new node because it will set recursive\n\t\t\t// and should be empty in error case\n\t\t\tnode.children = [];\n\n\t\t\t// save node to the parent children\n\t\t\tparent.children.push(node);\n\n\t\t\t// recursive call for children nodes\n\t\t\tself._applyTree({\n\t\t\t\tparent: node,\n\t\t\t\toldTree: oldChildren,\n\t\t\t\ttree: children\n\t\t\t}, afterCallback);\n\t\t};\n\n\t\t_(params.tree).each(function(node, index) {\n\t\t\t// TODO get oldNode in better way\n\t\t\tvar oldNode = params.oldTree[index] || null;\n\n\t\t\tif (isTreeNodeChanged(oldNode, node)) {\n\t\t\t\tif (oldNode && oldNode.view) {\n\t\t\t\t\tif (oldNode.component.container) {\n\t\t\t\t\t\t// remove old view if container for new view dirrent\n\t\t\t\t\t\tif (oldNode.component.container !== node.component.container) {\n\t\t\t\t\t\t\toldNode.view.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// detach old view if it has not a container\n\t\t\t\t\t\toldNode.view.detach();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// create new view\n\t\t\t\tnode.view = new (node.component.View)(\n\t\t\t\t\t_(node.component)\n\t\t\t\t\t\t.chain()\n\t\t\t\t\t\t.pick('models', 'collections')\n\t\t\t\t\t\t.extend(_.result(node.component, 'viewOptions'), {\n\t\t\t\t\t\t\tcomponentsManager: this\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.value()\n\t\t\t\t);\n\n\t\t\t\t// stop processing old components tree by passing null as oldNode\n\t\t\t\tif (node.view.isWaiting()) {\n\t\t\t\t\t// wait when view will be resolved\n\t\t\t\t\tself.listenToOnce(node.view, 'resolve', function() {\n\t\t\t\t\t\titerate(null, node);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\titerate(null, node);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// save old view to new node\n\t\t\t\tnode.view = oldNode.view;\n\n\t\t\t\t// process old components tree\n\t\t\t\titerate(oldNode, node);\n\t\t\t}\n\t\t});\n\t}\n});\n\nComponentsManager.extend = extend;\n\nmodule.exports = ComponentsManager;\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar execUtils = require('../utils/exec');\n\n/**\n * @class Esencia.Model\n * @extend Backbone.Model\n */\n\nvar Model = {};\n\n/**\n * Override `sync` to add exec custom method functionality\n *\n * @override\n */\n\nModel.sync = function(method, model, options) {\n\toptions = execUtils.prepareOptions(method, model, options);\n\tmethod = execUtils.getFakeBaseMethod(options);\n\treturn backbone.Model.prototype.sync.call(this, method, model, options);\n};\n\n/**\n * Exec custom non-REST method on model\n * It trigger `exec:[method]` event after success method exec\n *\n * @param {String} method\n * @param {Object} options\n */\n\nModel.exec = function(method, options) {\n\toptions = _.extend({parse: true}, options);\n\tvar model = this;\n\tvar success = options.success;\n\toptions.success = function(resp) {\n\t\tif (options.fetch) {\n\t\t\tvar serverAttrs = options.parse ? model.parse(resp, options) : resp;\n\t\t\tif (!model.set(serverAttrs, options)) return false;\n\t\t}\n\t\tif (success) success.call(options.context, model, resp, options);\n\t\tmodel.trigger('exec:' + method, model, resp, options);\n\t};\n\texecUtils.wrapError(this, options);\n\treturn this.sync(method, this, options);\n};\n\nmodule.exports = backbone.Model.extend(Model);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar componentsManager = require('../utils/componentsManager');\n\n/**\n * @class Esencia.Router\n * @extend Backbone.Router\n */\n\nvar Router = {\n\t// root: '/',\n\tcomponentsManager: componentsManager,\n\tautoloadModules: true,\n\tmodulesPath: 'modules/',\n\tdefaultModuleName: 'main',\n\tonModuleError: function() {}\n};\n\nvar routerOptions = [\n\t// 'root',\n\t'componentsManager',\n\t'autoloadModules', 'modulesPath', 'defaultModuleName', 'onModuleError'\n];\n\n/**\n * @constructor\n * @param {Object} [options]\n */\n\nRouter.constructor = function(options) {\n\toptions = options || {};\n\n\t// populate Router instance with fields from options\n\t_.extend(this, _.pick(options, routerOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\tthis.modules = {};\n\n\tbackbone.Router.apply(this, arguments);\n};\n\n/**\n * Add new component to components manager\n *\n * @param {Object} options - component options\n */\n\nRouter.component = function(options) {\n\treturn this.componentsManager.add(options);\n};\n\n/**\n * Override `route` to add components processing functionality\n *\n * @override\n */\n\nRouter.route = function(url, options, callback) {\n\tvar self = this;\n\n\tif (_.isFunction(options)) {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\n\tif (!_.isObject(options)) {\n\t\toptions = {name: options};\n\t}\n\n\tvar name = '';\n\n\tif (_.has(options, 'components') || _.has(options, 'component')) {\n\t\tvar components = _(options.components || [options.component])\n\t\t\t.map(function(componentOptions) {\n\t\t\t\tif (_.isString(componentOptions)) {\n\t\t\t\t\treturn self.componentsManager.get(componentOptions);\n\t\t\t\t} else {\n\t\t\t\t\treturn self.component(componentOptions);\n\t\t\t\t}\n\t\t\t});\n\n\t\tvar componentNames = _.pluck(components, 'name');\n\n\t\tname = componentNames.join(',');\n\n\t\t// create callback to process components tree\n\t\tcallback = function() {\n\t\t\tself.componentsManager.process(componentNames);\n\t\t};\n\t}\n\n\tname = options.name || name;\n\n\t// bind component to route\n\tbackbone.Router.prototype.route.call(this, url, name, callback);\n};\n\n/**\n * Load module file and init it\n *\n * @param {Object} params\n * @param {String} params.url - url without query string\n */\n\nRouter.loadModule = function(params) {\n\tvar self = this;\n\n\tvar url = params.url;\n\tdelete params.url;\n\n\tvar moduleName = _(url.split('/')).find(_.identity) || this.defaultModuleName;\n\n\t// require module file\n\trequire([this.modulesPath + moduleName], function(moduleInit) {\n\t\t// if module is loaded first time\n\t\tif (!self.modules[moduleName]) {\n\t\t\t// init it\n\t\t\tmoduleInit(self);\n\n\t\t\t// set module init flag to true\n\t\t\tself.modules[moduleName] = true;\n\n\t\t\t// and navigate again with force flag\n\t\t\tself.navigate(url, {\n\t\t\t\treplace: true,\n\t\t\t\tforce: true,\n\t\t\t\tqs: params\n\t\t\t});\n\t\t}\n\t}, this.onModuleError);\n};\n\nmodule.exports = backbone.Router.extend(Router);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\n\n// Take jquery or other selectors lib from backbone\nvar $ = backbone.$;\n\nvar splice = Array.prototype.splice;\n\n// Cached regex to split keys for `delegate`.\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n// List nested entity types processed by current view\nvar nestedEntityTypes = ['views', 'collections', 'models'];\n\nfunction isContainerSkipped(container, options) {\n\treturn Boolean(\n\t\t(options.exclude && _.contains(options.exclude, container)) ||\n\t\t(options.include && !_.contains(options.include, container))\n\t);\n}\n\n/**\n * @class Esencia.View\n * @extend Backbone.View\n */\n\nvar View = {\n\t// Helpers (Object|Fuction) which will be passed to the template\n\ttemplateHelpers: {},\n\n\t// Views are in the resolved state by default\n\twaitsCounter: 0,\n\n\t// This flag is used to check that .wait() is called\n\t// in the constructor/initialize\n\twaitAvailable: true,\n\n\t// Views are not attached by default\n\tattached: false\n};\n\nvar viewOptions = [\n\t'views', 'collections', 'models', 'data', 'events', 'templateHelpers',\n\t'componentsManager'\n];\n\n/**\n * @constructor\n * @param {Object} [options]\n */\n\nView.constructor = function(options) {\n\tvar self = this;\n\n\toptions = options || {};\n\n\t// data is empty object by default\n\tthis.data = {};\n\n\t// populate View instance with fields from options\n\t_.extend(this, _.pick(options, viewOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\t// create special hash object for all events for fast search\n\tthis._prepareEvents();\n\n\t// initialize nested views, collections and models\n\t_(nestedEntityTypes).each(function(type) {\n\t\tself[type] = _.result(self, type, {});\n\t});\n\n\t// normalize nested views hash\n\tthis._prepareViews();\n\n\t// apply default backbone.View constructor\n\tbackbone.View.apply(this, arguments);\n\n\t// set waiting state for current view if some nested view is in waiting state\n\t_(this.views).each(function(views) {\n\t\t_(views).each(function(view) {\n\t\t\tif (view.isWaiting()) {\n\t\t\t\tself.listenToOnce(view, 'resolve', self.wait());\n\t\t\t}\n\t\t});\n\t});\n\n\t// disable .wait(), it available only in the constructor/initialize\n\tthis.waitAvailable = false;\n\n\t// we should delegate events after parent constructor call because\n\t// collections and models could be created in the initialize method\n\n\t// delegate events for each collection\n\t_(this.collections).each(function(collection, key) {\n\t\tself.delegateNestedEvents('collections', key, collection);\n\t});\n\n\t// delegate events for each model\n\t_(this.models).each(function(model, key) {\n\t\tself.delegateNestedEvents('models', key, model);\n\t});\n};\n\n/**\n * Update view data\n * Method is used to update view state, could be overriden to modify nested\n * views state\n *\n * @param {Object} [data] - new data object\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setData = function(data) {\n\tif (data) this.data = data;\n\treturn this;\n};\n\n/**\n * Check that view is changed and should be re-rendered\n * Method returns true by default (always unchanged), could be overriden\n * for specific logic\n *\n * @return {Boolean}\n */\n\nView.isUnchanged = function() {\n\treturn true;\n};\n\n/**\n * Switch view to the waiting state\n *\n * @return {Function} - callback function, should be called to resolve view\n */\n\nView.wait = function() {\n\tif (!this.waitAvailable) {\n\t\tthrow new Error('Method .wait() is available only in the constructor');\n\t}\n\n\tvar self = this;\n\n\tthis.waitsCounter++;\n\n\t// TODO: think about promises\n\treturn _.once(function() {\n\t\t_.defer(function() {\n\t\t\tself.waitsCounter--;\n\t\t\tif (!self.isWaiting()) {\n\t\t\t\tself.trigger('resolve');\n\t\t\t}\n\t\t});\n\t});\n};\n\n/**\n * Check view waiting state\n *\n * @return {Boolean}\n */\n\nView.isWaiting = function() {\n\treturn this.waitsCounter > 0;\n};\n\n/**\n * Render view\n *\n * @param {Object} options\n * @param {Boolean} options.force\n * @return {Esencia.View} - view instance for chaining\n */\n\nView._render = function(options) {\n\t// stop rendering if view in `waiting` state, resolve it first\n\tif (this.isWaiting()) return this;\n\n\toptions = options || {};\n\n\tif (this.template) {\n\t\t// re-render template only if it exists and if it is necessary\n\t\tif (options.force || !this.attached || !this.isUnchanged()) {\n\t\t\t// detach view from DOM element\n\t\t\tthis.detach();\n\n\t\t\t// render template with data\n\t\t\tvar data = _(this)\n\t\t\t\t.chain()\n\t\t\t\t.result('templateHelpers')\n\t\t\t\t.extend(this.getTemplateData())\n\t\t\t\t.value();\n\t\t\tvar html = this.renderTemplate(this.template, data);\n\n\t\t\tif (!_.isString(html)) {\n\t\t\t\tthrow new Error('`renderTemplate` method should return a HTML string');\n\t\t\t}\n\n\t\t\t// render html with jqeury (or other lib) call\n\t\t\tvar $el = $(html);\n\n\t\t\tif (!$el.length) {\n\t\t\t\tthrow new Error('View template produces empty html');\n\t\t\t}\n\n\t\t\tif ($el.length > 1) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'View template produces html with more than one root elements'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.setElement($el);\n\t\t}\n\t} else {\n\t\t// re-ensure element if it is not ensured\n\t\tif (!this.$el.length) this._ensureElement();\n\t}\n\n\t// render nested views\n\tthis.renderViews(options);\n\n\tif (!this.parent || this.$container) {\n\t\t// attach all nested views first\n\t\tthis.attachViews(options);\n\n\t\t// attach current view\n\t\tthis.attach();\n\t}\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Render view by calling private _render method\n *\n * @override\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.render = function(options) {\n\treturn this._render(options);\n};\n\n/**\n * Get data for template rendering\n * Returns data by default, could be overriden\n *\n * @return {Object}\n */\n\nView.getTemplateData = function() {\n\treturn this.data;\n};\n\n/**\n * Render template with data, return html\n * By default this method simply calls template function with data as argument\n * Override this function to change template rendering logic\n *\n * @param {Function} template - template function for rendering\n * @param {Object} data - data for rendering\n * @return {String} - rendered html\n */\n\nView.renderTemplate = function(template, data) {\n\tif (!_.isFunction(template)) {\n\t\tthrow new Error('View `template` should be a function');\n\t}\n\n\treturn template(data);\n};\n\n/**\n * Render all nested view\n *\n * @param {Object} options\n * @param {Boolean} options.force\n * @return {Esencia.View} - view instance for chaining\n*/\n\nView.renderViews = function(options) {\n\tvar self = this;\n\n\t// iterate by each views group\n\t_(this.views).each(function(viewsGroup, container) {\n\t\tif (isContainerSkipped(container, options)) return;\n\n\t\t// return if view group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call render for each views from view group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview.render(_.omit(options, 'include', 'exclude'));\n\t\t});\n\n\t\t// get first container or $el\n\t\tvar $container = container ? self.$(container).first() : self.$el;\n\n\t\tif (!$container.length) {\n\t\t\tthrow new Error('Container \"' + container + '\" is not found');\n\t\t}\n\n\t\tvar containerEl = $container.get(0);\n\n\t\t// dom is changed if some view from group is not in current container\n\t\tvar domChanged = _(viewsGroup).some(function(view) {\n\t\t\treturn (\n\t\t\t\t!view.attached ||\n\t\t\t\t!view.$container ||\n\t\t\t\tview.$container.get(0) !== containerEl\n\t\t\t);\n\t\t});\n\n\t\tif (domChanged) {\n\t\t\t// re-append views group to container\n\t\t\tvar $els = [];\n\n\t\t\t_(viewsGroup).each(function(view) {\n\t\t\t\tview.$container = $container;\n\t\t\t\t$els.push(view.$el);\n\t\t\t});\n\n\t\t\t// TODO: add some rendering optimizations here\n\n\t\t\t// put all views to $container\n\t\t\t$container.append($els);\n\t\t}\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Set view to views group or replace some view in specified position\n * If index is passed it replace only one view with index in views group\n *\n * @param {Esencia.View} view - view to set\n * @param {String} container - container to set\n * @param {Number} [index] - index of view to replace\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setView = function(view, container, index) {\n\treturn this._updateViews([view], container, index);\n};\n\n/**\n * Set views to views group or replace some view in specified position\n * If index is passed it replace only one view with index in views group\n *\n * @param {Esencia.View[]} views - views to set\n * @param {String} container - container to set\n * @param {Number} [index] - index of view to replace\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setViews = function(views, container, index) {\n\treturn this._updateViews(views, container, index);\n};\n\n/**\n * Append view to end of views group\n * This method is alias for insertView without index argument\n *\n * @param {Esencia.View} view - view to append\n * @param {String} container - container of views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.appendView = function(view, container) {\n\treturn this._insertViews([view], container);\n};\n\n/**\n * Append views to end of views group\n * This method is alias for insertViews without index argument\n *\n * @param {Esencia.View[]} views - views to append\n * @param {String} container - container of views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.appendViews = function(views, container) {\n\treturn this._insertViews(views, container);\n};\n\n/**\n * Prepend view to start of views group\n * This method is alias for insertView with `0` as index argument value\n *\n * @param {Esencia.View} view - view to prepend\n * @param {String} container - container of views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.prependView = function(view, container) {\n\treturn this._insertViews([view], container, 0);\n};\n\n/**\n * Prepend views to start of views group\n * This method is alias for insertViews with `0` as index argument value\n *\n * @param {Esencia.View[]} views - view to prepend\n * @param {String} container - container of views group\n  * @return {Esencia.View} - view instance for chaining\n */\n\nView.prependViews = function(views, container) {\n\treturn this._insertViews(views, container, 0);\n};\n\n/**\n * Insert view to specified position of views group in the container\n * If index is not passed method inserts view to the end of views group (append)\n *\n * @param {Esencia.View} view - view to insert\n * @param {String} container - container of views group\n * @param {Number} [index] - position in views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.insertView = function(view, container, index) {\n\treturn this._insertViews([view], container, index);\n};\n\n/**\n * Insert views to specified position of views group container\n * If index is not passed method inserts views to the end of views group\n *\n * @param {Esencia.View[]} views - views to insert\n * @param {String} container - container of views group\n * @param {Number} [index] - position in views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.insertViews = function(views, container, index) {\n\treturn this._insertViews(views, container, index);\n};\n\n/**\n * Remove view from views group container by index or view instance\n * If index is passed it remove view in the index position\n *\n * @param {Esencia.View} [view] - view to remove\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.removeView = function(view, container, index) {\n\tif (arguments.length < 2) {\n\t\tthrow new Error('\"view\" or \"index\" arguments must be specified');\n\t}\n\n\tif (_.isString(view)) {\n\t\tindex = container;\n\t\tcontainer = view;\n\t\tview = this.getView(container, index);\n\t\tif (!view) return this;\n\t}\n\n\treturn this._removeViews([view], container);\n};\n\n/**\n * Remove views from views group container\n * If views are passed remove only these views\n * Othervise remove all views from container\n *\n * @param {Esencia.View[]} [views] - views to remove\n * @param {String} container - container of views group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.removeViews = function(views, container) {\n\tif (_.isString(views)) {\n\t\tcontainer = views;\n\t\tviews = this.getViews(container);\n\t}\n\n\treturn this._removeViews(views, container);\n};\n\n/**\n * Get single view from container by index\n *\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in views group\n * @return {Esencia.View}\n */\n\nView.getView = function(container, index) {\n\treturn this.getViews(container)[index || 0] || null;\n};\n\n/**\n * Get views group from container\n *\n * @param {String} container - container of views group\n * @return {Esencia.View[]}\n */\n\nView.getViews = function(container) {\n\treturn _.clone(this.views[container]) || [];\n};\n\nView._insertViews = function(views, container, index) {\n\tvar self = this;\n\n\tvar viewsGroup = this.getViews(container);\n\n\t_(views).each(function(view) {\n\t\tif (view.parent) {\n\t\t\tview.parent.removeView(view, view.container);\n\t\t}\n\t});\n\n\tif (viewsGroup.length) {\n\t\t// if index is not specified set it value as last index of views group\n\t\tif (typeof index === 'undefined') {\n\t\t\tindex = viewsGroup.length;\n\t\t}\n\n\t\t// insert views\n\t\tsplice.apply(this.views[container], [index, 0].concat(views));\n\t} else {\n\t\t// if group is empty - set views as whole views group value\n\t\tthis.views[container] = views;\n\t}\n\n\t// set each view parent to current\n\t_(views).each(function(view) {\n\t\tview.parent = self;\n\t\tview.container = container;\n\t});\n\n\tthis.delegateNestedEvents('views', container, views);\n\n\treturn this;\n};\n\nView._updateViews = function(views, container, index) {\n\tvar oldViews;\n\n\tif (typeof index === 'undefined') {\n\t\t// if no index - get all views from group as old\n\t\toldViews = this.getViews(container);\n\t} else {\n\t\t// if index is specified get view from specific position as old\n\t\toldViews = this.getView(container, index);\n\t\toldViews = oldViews ? [oldViews] : [];\n\t}\n\n\t// exit if views equal oldViews\n\tif (\n\t\toldViews.length === views.length &&\n\t\t_(oldViews).all(function(oldView, index) {\n\t\t\treturn oldView === views[index];\n\t\t})\n\t) return this;\n\n\tif (oldViews.length) {\n\t\t// if old views array is not empty remove them from parent view\n\t\tthis._removeViews(oldViews, container);\n\n\t\t// and remove views from DOM\n\t\t_(oldViews).each(function(view) {\n\t\t\tview.remove();\n\t\t});\n\t}\n\n\t// insert new views\n\treturn this._insertViews(views, container, index);\n};\n\nView._removeViews = function(views, container) {\n\tvar self = this;\n\n\tvar viewsGroup = this.getViews(container);\n\n\tif (!viewsGroup.length) return this;\n\n\tvar viewObjs = _(views)\n\t\t.chain()\n\t\t.uniq()\n\t\t.map(function(view) {\n\t\t\treturn {\n\t\t\t\tview: view,\n\t\t\t\tindex: _.indexOf(viewsGroup, view)\n\t\t\t};\n\t\t})\n\t\t.filter(function(viewObj) {\n\t\t\treturn viewObj.index >= 0;\n\t\t})\n\t\t.sortBy(function(viewObj) {\n\t\t\treturn -viewObj.index;\n\t\t})\n\t\t.value();\n\n\tif (!viewObjs.length) return this;\n\n\t_(viewObjs).each(function(viewObj) {\n\t\tvar view = viewObj.view;\n\n\t\t// remove item from group\n\t\tsplice.call(self.views[container], viewObj.index, 1);\n\n\t\t// undelegate all nested entity events\n\t\tself.undelegateNestedEvents(view);\n\n\t\t// unset view parent\n\t\tdelete view.parent;\n\t});\n\n\treturn this;\n};\n\n/**\n * Original setElement do undelegateEvents/delegateEvents, we remove it\n * because we have special detach/attach methods for this purpose\n *\n * @override\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setElement = function(element) {\n\tvar $previousEl = this.$el;\n\n\tthis._setElement(element);\n\n\t// insert html to $el\n\tif ($previousEl && this.$container) {\n\t\t$previousEl.replaceWith(this.$el);\n\t}\n\n\treturn this;\n};\n\n/**\n * @override\n */\n\nView.delegateEvents = function(events) {\n\tevents = events || _.result(this, 'events');\n\tif (!events) return this;\n\tevents = _.omit(events, nestedEntityTypes);\n\treturn backbone.View.prototype.delegateEvents.call(this, events);\n};\n\nView.delegateNestedEvents = function(type, key, entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\tvar listeners = this._nestedEventsHash[type][key];\n\tif (listeners) {\n\t\t_(listeners).each(function(listener) {\n\t\t\t_(entities).each(function(entity) {\n\t\t\t\tself.listenTo(entity, listener.eventName, listener.handler);\n\t\t\t});\n\t\t});\n\t}\n\treturn this;\n};\n\nView.undelegateNestedEvents = function(entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\t_(entities).each(function(entity) {\n\t\tself.stopListening(entity);\n\t});\n\treturn this;\n};\n\nView._prepareEvents = function(events) {\n\tvar self = this;\n\n\t// Hash for nested views events fast search\n\tthis._nestedEventsHash = {};\n\t_(nestedEntityTypes).each(function(type) {\n\t\tself._nestedEventsHash[type] = {};\n\t});\n\n\tevents = events || _.result(this, 'events');\n\tif (!events) return;\n\n\t// bind all prefixed events to view then call native delegate events\n\t_(nestedEntityTypes).each(function(type) {\n\t\tvar typeEventsHash = self._nestedEventsHash[type];\n\n\t\tif (!_.has(events, type) || !_.isObject(events[type])) return;\n\n\t\t_(events[type]).each(function(method, key) {\n\t\t\tif (!_.isFunction(method)) method = self[method];\n\t\t\tif (!method) return;\n\t\t\tvar match = key.match(delegateEventSplitter);\n\t\t\tvar eventName = match[1];\n\t\t\tvar entityKeys = match[2].replace(/ *, */g, ',').split(',');\n\t\t\tmethod = _.bind(method, self);\n\n\t\t\t// fill _nestedEventsHash\n\t\t\t_(entityKeys).each(function(entityKey) {\n\t\t\t\ttypeEventsHash[entityKey] = typeEventsHash[entityKey] || [];\n\t\t\t\ttypeEventsHash[entityKey].push({\n\t\t\t\t\teventName: eventName,\n\t\t\t\t\thandler: method\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n};\n\n/**\n * Wrap all non-array view groups to arrays with one element and delegate events\n */\n\nView._prepareViews = function() {\n\tvar self = this;\n\n\t_(this.views).each(function(views, container) {\n\t\tif (!_.isArray(views)) views = [views];\n\t\tself.views[container] = views;\n\t\tself.delegateNestedEvents('views', container, views);\n\t});\n};\n\n/**\n * Attach all nested views\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.attachViews = function(options) {\n\toptions = options || {};\n\n\t// iterate by each nested views groups\n\t_(this.views).each(function(viewsGroup, container) {\n\t\tif (isContainerSkipped(container, options)) return;\n\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call attach method for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\t// recursive attach all nested views\n\t\t\tview.attachViews(_.omit(options, 'include', 'exclude'));\n\n\t\t\t// attach current view\n\t\t\tview.attach();\n\t\t});\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * afterAttach is empty by default\n * It called after attach call, could be verriden to add some specific logic\n * for DOM manipulations\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.afterAttach = function() {\n\treturn this;\n};\n\n/**\n * Attach new view to current view $el\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.attach = function() {\n\t// return if current view is already attached\n\tif (this.attached) return this;\n\n\t// detach previous view\n\tvar previousView = this.$el.data('esencia-view');\n\tif (previousView) previousView.detach();\n\n\t// attach current view and set attr\n\tthis.$el.data('esencia-view', this).attr('esencia-view', this.cid);\n\n\t// enable all DOM events\n\tthis.delegateEvents();\n\n\tthis.attached = true;\n\n\t// do some user afterAttach actions\n\tthis.afterAttach();\n\n\t// trigger attach event\n\tthis.trigger('attach');\n\n\treturn this;\n};\n\n/**\n * Detach all nested views\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.detachViews = function() {\n\t// iterate by each views groups\n\t_(this.views).each(function(viewsGroup) {\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call detach method for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\t// recursive detach all nested views\n\t\t\tview.detachViews();\n\n\t\t\t// detach current view\n\t\t\tview.detach();\n\t\t});\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * beforeDetach is empty by default\n * It called before detach method call, could be overriden to add some specific\n * logic before view detach from dom\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.beforeDetach = function() {\n\treturn this;\n};\n\n/**\n * Detach view from current view $el\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.detach = function() {\n\t// return if current view is not already attached\n\tif (!this.attached) return this;\n\n\t// trigger detach event\n\tthis.trigger('detach');\n\n\t// do some user beforeDetach actions\n\tthis.beforeDetach();\n\n\t// remove attr and data from $el\n\tthis.$el.removeData('esencia-view').removeAttr('esencia-view');\n\n\t// disable all DOM events\n\tthis.undelegateEvents();\n\n\tthis.attached = false;\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Remove view from parent container and remove element from DOM\n */\n\nView.remove = function() {\n\t// remove current view from parent view container\n\tif (this.parent) {\n\t\tthis.parent.removeView(this, this.container);\n\t}\n\n\t// detach all nested views first\n\tthis.detachViews();\n\n\t// detach current view\n\tthis.detach();\n\n\t// remove DOM element\n\treturn backbone.View.prototype.remove.call(this);\n};\n\n/**\n * Get view, that attached to closest element with attr `esencia-view`\n *\n * @param {String | $} selector\n * @return {Esencia.View | Null}\n */\n\nView.getClosestView = function(selector) {\n\tvar $selector = $(selector);\n\n\tif (!$selector.is('[esencia-view]')) {\n\t\t$selector = $selector.closest('[esencia-view]');\n\t}\n\n\treturn $selector.length ? $selector.data('esencia-view') : null;\n};\n\nmodule.exports = backbone.View.extend(View);\n","'use strict';\n\nvar backbone = require('backbone');\nvar _ = require('underscore');\nvar Router = require('./classes/router');\nvar Collection = require('./classes/collection');\nvar Model = require('./classes/model');\nvar View = require('./classes/view');\nvar ComponentsManager = require('./classes/componentsManager');\nvar componentsManager = require('./utils/componentsManager');\nvar extend = require('./utils/extend');\n\nvar Esencia = exports;\n\n// Allow the `Esencia` object to serve as a global event bus, for folks who\n// want global \"pubsub\" in a convenient place.\n_.extend(Esencia, backbone.Events);\n\n// Export some Backbone fields\nvar backboneFields = ['Events', 'History', 'history'];\n_.extend(Esencia, _.pick(backbone, backboneFields));\n\n// Export all Esencia classes\n_.extend(Esencia, {\n\tRouter: Router,\n\tCollection: Collection,\n\tModel: Model,\n\tView: View,\n\tComponentsManager: ComponentsManager\n});\n\n// Export the default Esencia.componentsManager\nEsencia.componentsManager = componentsManager;\n\n// Export extend helper for subclassing\nEsencia.extend = extend;\n","'use strict';\n\nvar ComponentsManager = require('../classes/componentsManager');\n\n// Create the default Esencia.componentsManager\nmodule.exports = new ComponentsManager();\n","'use strict';\n\nvar _ = require('underscore');\n\n// Default http method type for exec methods\nvar DEFAULT_EXEC_TYPE = 'PUT';\n\n// Throw an error when a URL is needed, and none is supplied.\nvar urlError = function() {\n\tthrow new Error('A `url` property or function must be specified');\n};\n\n// Wrap an optional error callback with a fallback error event.\nexports.wrapError = function(model, options) {\n\tvar error = options.error;\n\toptions.error = function(resp) {\n\t\tif (error) error.call(options.context, model, resp, options);\n\t\tmodel.trigger('error', model, resp, options);\n\t};\n};\n\nexports.prepareOptions = function(method, model, options) {\n\toptions = _.extend({\n\t\ttype: DEFAULT_EXEC_TYPE,\n\t\tdataType: 'json',\n\t\tcontentType: 'application/json',\n\t\tprocessData: false\n\t}, options);\n\n\t// Ensure that we have a URL and add method name to it\n\tif (!options.url) {\n\t\tvar url = _.result(model, 'url') || urlError();\n\t\toptions.url = url.replace(/[^\\/]$/, '$&/') + method;\n\t}\n\n\t// stringify data to json\n\tif (options.data && _.isObject(options.data) && !options.processData) {\n\t\toptions.data = JSON.stringify(options.data);\n\t}\n\n\treturn options;\n};\n\n// HTTP type to backbone sync methods map\nvar baseMethodsMap = {\n\t'POST': 'create',\n\t'PUT': 'update',\n\t'PATCH': 'patch',\n\t'DELETE': 'delete',\n\t'GET': 'read'\n};\n\nexports.getFakeBaseMethod = function(options) {\n\treturn baseMethodsMap[options.type.toUpperCase()];\n};\n","'use strict';\n\nvar backbone = require('backbone');\n\n// There is no good exports of extend method from backbone.\n// Take it from View because no other ways\nmodule.exports = backbone.View.extend;\n"]}