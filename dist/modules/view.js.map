{"version":3,"sources":["lib/view.js"],"names":["_","_require","backbone","$","splice","Array","prototype","delegateEventSplitter","nestedEventTypes","View","templateHelpers","viewOptions","wait","self","_waiting","trigger","isWaiting","constructor","options","views","data","extend","pick","template","isFunction","Error","_normalizeViews","_prepareNestedEvents","apply","arguments","collections","each","collection","key","delegateNestedEvents","models","model","setData","isUnchanged","render","force","isAttached","_createTemplateElement","_isAfterAttachNeeded","attach","renderViews","$el","parent","length","_afterAttachViews","getTemplateData","renderTemplate","chain","result","value","templateData","html","$html","$newEl","first","replaceWith","setElement","viewsGroup","container","view","$container","some","is","append","pluck","setView","setViews","index","_updateViews","replaceView","replaceViews","appendView","appendViews","insertViews","prependView","prependViews","insertView","removeView","removeViews","isString","getView","getViews","clone","method","isArray","removedViews","remove","concat","viewObjs","uniq","map","indexOf","filter","viewObj","sortBy","call","undelegateNestedEvents","delegateEvents","events","omit","type","entities","listeners","_nestedEventsHash","listener","entity","listenTo","eventName","handler","stopListening","typeEventsHash","has","isObject","match","entityKeys","replace","split","bind","entityKey","push","Boolean","afterAttach","previousView","detach","attr","cid","_detachViews","beforeDetach","removeData","removeAttr","undelegateEvents","_removeElement","getClosestView","selector","$selector","closest","module","exports"],"mappings":"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","file":"view.js","sourceRoot":".","sourcesContent":["'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\n\n/*\n * Take jquery or other selectors lib from backbone\n */\n\nvar $ = backbone.$;\n\n/*\n * Helpers\n */\n\nvar splice = Array.prototype.splice;\n\n/*\n * Cached regex to split keys for `delegate`.\n */\n\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\nvar nestedEventTypes = ['views', 'collections', 'models'];\n\n/*\n * Base View class extend backbone View class\n */\n\nvar View = {\n\t/*\n\t * Helpers (Object|Fuction) which will be passed to the template\n\t */\n\n\ttemplateHelpers: {}\n};\n\nvar viewOptions = [\n\t'models', 'collections', 'views', 'events', 'data', 'router',\n\t'templateHelpers'\n];\n\nView.wait = function() {\n\tvar self = this;\n\tthis._waiting = true;\n\n\treturn function() {\n\t\tself._waiting = false;\n\t\tself.trigger('resolve');\n\t};\n};\n\nView.isWaiting = function() {\n\treturn this._waiting;\n};\n\n/*\n * Override constructor\n *\n * @param {Object} [options]\n */\n\nView.constructor = function(options) {\n\tvar self = this;\n\n\toptions = options || {};\n\n\t// Nested views hash is empty by default\n\tthis.views = {};\n\n\tthis.data = this.data || {};\n\n\t// populate View instance with fields from options\n\t_.extend(this, _.pick(options, viewOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\tif (this.template && !_.isFunction(this.template)) {\n\t\tthrow new Error('View `template` option should be a function');\n\t}\n\n\tthis._normalizeViews();\n\tthis._prepareNestedEvents();\n\n\tthis._waiting = false;\n\n\t// apply backbone.View constructor\n\tbackbone.View.apply(this, arguments);\n\n\t// delegate events for each collection\n\tif (this.collections) {\n\t\t_(this.collections).each(function(collection, key) {\n\t\t\tself.delegateNestedEvents('collections', key, collection);\n\t\t});\n\t}\n\n\t// delegate events for each model\n\tif (this.models) {\n\t\t_(this.models).each(function(model, key) {\n\t\t\tself.delegateNestedEvents('models', key, model);\n\t\t});\n\t}\n};\n\nView.setData = function(data) {\n\tif (data) this.data = data;\n};\n\nView.isUnchanged = function() {\n\treturn true;\n};\n\n/*\n * Override `render`\n */\n\nView.render = function(options) {\n\tif (this.isWaiting()) return this;\n\n\toptions = options || {};\n\n\tif (\n\t\tthis.template &&\n\t\t(options.force || !this.isAttached() || !this.isUnchanged())\n\t) {\n\t\tthis._createTemplateElement();\n\n\t\t// set tricky flag that used for calling after render\n\t\t// only after _createTemplateElement\n\t\tthis._isAfterAttachNeeded = true;\n\t}\n\n\t// attach view to dom element\n\tthis.attach();\n\n\t// render nested views\n\tthis.renderViews(options);\n\n\t// call after attach method if el was set in parent view\n\tif (this.$el.parent().length) {\n\t\tthis._afterAttachViews();\n\t}\n\n\treturn this;\n};\n\n/*\n * Get data for template rendering\n */\n\nView.getTemplateData = function() {\n\treturn this.data;\n};\n\n/*\n * Render template with data. Returns html.\n *\n * @param {function} template for rendering\n * @params {object} data for rendering\n */\n\nView.renderTemplate = function(template, data) {\n\tdata = _(this).chain().result('templateHelpers').extend(data).value();\n\n\t// get html\n\treturn template(data);\n};\n\n/*\n * Set html to $el element\n *\n * @param {object} [data] data for rendering (return value of getData)\n */\n\nView._createTemplateElement = function() {\n\tvar templateData = this.getTemplateData();\n\tvar html = this.renderTemplate(this.template, templateData);\n\tvar $html = $(html);\n\n\tif ($html.length > 1) {\n\t\t// @TODO: show warning here or something better?\n\t}\n\n\tvar $newEl = $html.first();\n\n\t// insert html to $el\n\tif (this.$el.parent().length) {\n\t\tthis.$el.replaceWith($newEl);\n\t}\n\n\tthis.setElement($newEl, true);\n\n\treturn this;\n};\n\n\n/*\n * Render all nested view\n *\n * @TODO: add some rendering optimizations\n*/\n\nView.renderViews = function(options) {\n\tvar self = this;\n\n\t// iterate by each views group\n\t_(this.views).each(function(viewsGroup, container) {\n\t\t// return if view group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call render for each views from view group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview.render(options);\n\t\t});\n\n\t\t// get first container or $el\n\t\tvar $container = container ? self.$(container).first() : self.$el;\n\n\t\tif (!$container.length) {\n\t\t\tthrow new Error('Container \"' + container + '\" is not found');\n\t\t}\n\n\t\tif (_(viewsGroup).some(function(view) {\n\t\t\treturn !view.isAttached() || !$container.is(view.$el.parent());\n\t\t})) {\n\t\t\t// put to $container\n\t\t\t$container.append(_(viewsGroup).pluck('$el'));\n\t\t}\n\t});\n};\n\n/*\n * Set view(s) to views group or replace some view in specified position\n * If index is passed it replace only one view with index in views group\n *\n * @param {View | View[]} views - view(s) to set\n * @param {String} container - container to set\n * @param {Number} [index] - index of view to replace\n */\n\nView.setView = View.setViews = function(views, container, index) {\n\treturn this._updateViews('set', views, container, index);\n};\n\n/*\n * Alias for setViews\n */\n\nView.replaceView = View.replaceViews = function(views, container, index) {\n\treturn this.setViews.apply(this, arguments);\n};\n\n/*\n * Append view(s) to end of views group\n * This method is alias for insertViews without index argument\n *\n * @param {View | View[]} views\n * @param {String} container - container of views group\n */\n\nView.appendView = View.appendViews = function(views, container) {\n\treturn this.insertViews(views, container);\n};\n\n/*\n * Prepend view(s) to start of views group\n * This method is alias for insertViews with `0` as index argument value\n *\n * @param {View | View[]} views\n * @param {String} container - container of views group\n */\n\nView.prependView = View.prependViews = function(views, container) {\n\treturn this.insertViews(views, container, 0);\n};\n\n/*\n * Insert view(s) to specified position of views group\n * If index is not passed views will insert to end of views group (append)\n *\n * @param {View | View[]} views\n * @param {String} container - container of views group\n * @param {Number} [index] - position in views group\n */\n\nView.insertView = View.insertViews = function(views, container, index) {\n\treturn this._updateViews('insert', views, container, index);\n};\n\n/*\n * Remove view(s) from views group by index or views instances list\n * If index is passed it remove only one view in index position\n * If views is passed it remove some of them, that places in views group\n *\n * @param {View | View[]} [views] - view(s) to remove\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in views group\n */\n\nView.removeView = View.removeViews = function(views, container, index) {\n\tif (arguments.length < 2) {\n\t\tthrow new Error('\"views\" or \"index\" arguments must be specified');\n\t}\n\n\tif (_.isString(views)) {\n\t\tindex = container;\n\t\tcontainer = views;\n\t\tviews = this.getView(container, index);\n\t\tif (!views) return this;\n\t}\n\n\treturn this._updateViews('remove', views, container);\n};\n\n/*\n * Get single view by container and index\n *\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in views group\n */\n\nView.getView = function(container, index) {\n\treturn this.getViews(container)[index || 0] || null;\n};\n\n/*\n * Get views group by container\n *\n * @param {String} container - container of views group\n */\n\nView.getViews = function(container) {\n\treturn _.clone(this.views[container]) || [];\n};\n\n/*\n * Common method for updating view(s) in views group with method\n *  `set`, `insert` or `remove`.\n *\n * @param {String} method - `set`, `insert` or `remove`\n * @paran {View | View[]} views\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in group\n */\n\nView._updateViews = function(method, views, container, index) {\n\tvar self = this;\n\n\tif (!views) {\n\t\tthrow new Error('\"views\" argument must be specified');\n\t}\n\n\tif (!_.isArray(views)) views = [views];\n\n\tvar viewsGroup = this.getViews(container);\n\n\tswitch (method) {\n\t\tcase 'set':\n\t\t\tif (viewsGroup.length) {\n\t\t\t\tvar removedViews = [];\n\n\t\t\t\t// if views group is not empty\n\t\t\t\tif (typeof index !== 'undefined') {\n\t\t\t\t\t// if index is specified\n\t\t\t\t\t// remove view from specific position\n\t\t\t\t\tremovedViews = this.getView(container, index);\n\t\t\t\t\tremovedViews = removedViews ? [removedViews] : [];\n\t\t\t\t} else {\n\t\t\t\t\t// if no index - remove all views from views group\n\t\t\t\t\tremovedViews = viewsGroup;\n\t\t\t\t}\n\n\t\t\t\tif (removedViews.length) {\n\t\t\t\t\t// if remove views array is not empty\n\t\t\t\t\t// remove from parent\n\t\t\t\t\tthis._updateViews('remove', removedViews, container);\n\n\t\t\t\t\t// and remove views\n\t\t\t\t\t_(removedViews).each(function(view) {\n\t\t\t\t\t\tview.remove();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// insert new views\n\t\t\tthis._updateViews('insert', views, container, index);\n\n\t\t\tbreak;\n\n\t\tcase 'insert':\n\t\t\t_(views).each(function(view) {\n\t\t\t\tif (view.parent) {\n\t\t\t\t\tview.parent.removeView(view, view.container);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (viewsGroup.length) {\n\t\t\t\t// if index is not specified set it value as last index of views group\n\t\t\t\tif (typeof index === 'undefined') {\n\t\t\t\t\tindex = viewsGroup.length;\n\t\t\t\t}\n\n\t\t\t\t// insert views\n\t\t\t\tsplice.apply(this.views[container], [index, 0].concat(views));\n\t\t\t} else {\n\t\t\t\t// if group is empty - set views as whole views group value\n\t\t\t\tthis.views[container] = views;\n\t\t\t}\n\n\t\t\t// set each view parent to current\n\t\t\t_(views).each(function(view) {\n\t\t\t\tview.parent = self;\n\t\t\t\tview.container = container;\n\t\t\t});\n\n\t\t\tthis.delegateNestedEvents('views', container, views);\n\n\t\t\tbreak;\n\n\t\tcase 'remove':\n\t\t\tif (!viewsGroup.length) break;\n\n\t\t\tvar viewObjs = _.chain(views).uniq().map(function(view) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tview: view,\n\t\t\t\t\t\tindex: _.indexOf(viewsGroup, view)\n\t\t\t\t\t};\n\t\t\t\t}).filter(function(viewObj) {\n\t\t\t\t\treturn viewObj.index >= 0;\n\t\t\t\t}).sortBy(function(viewObj) {\n\t\t\t\t\treturn -viewObj.index;\n\t\t\t\t}).value();\n\n\t\t\tif (!viewObjs.length) break;\n\n\t\t\t_(viewObjs).each(function(viewObj) {\n\t\t\t\tvar view = viewObj.view;\n\n\t\t\t\t// remove item from group\n\t\t\t\tsplice.call(self.views[container], viewObj.index, 1);\n\n\t\t\t\t// undelegate all nested entity events\n\t\t\t\tself.undelegateNestedEvents(view);\n\n\t\t\t\t// unset view parent\n\t\t\t\tdelete view.parent;\n\t\t\t});\n\t}\n\n\treturn this;\n};\n\n/*\n * Override delegateEvents\n */\n\nView.delegateEvents = function(events) {\n\tevents = events || _.result(this, 'events');\n\tif (!events) return this;\n\tevents = _(events).omit(nestedEventTypes);\n\treturn backbone.View.prototype.delegateEvents.call(this, events);\n};\n\nView.delegateNestedEvents = function(type, key, entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\tvar listeners = this._nestedEventsHash[type][key];\n\tif (listeners) {\n\t\t_(listeners).each(function(listener) {\n\t\t\t_(entities).each(function(entity) {\n\t\t\t\tself.listenTo(entity, listener.eventName, listener.handler);\n\t\t\t});\n\t\t});\n\t}\n\treturn this;\n};\n\nView.undelegateNestedEvents = function(entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\t_(entities).each(function(entity) {\n\t\tself.stopListening(entity);\n\t});\n\treturn this;\n};\n\nView._prepareNestedEvents = function(events) {\n\tvar self = this;\n\n\t// Hash for nested views events fast search\n\tthis._nestedEventsHash = {};\n\t_(nestedEventTypes).each(function(type) {\n\t\tself._nestedEventsHash[type] = {};\n\t});\n\n\tevents = events || _.result(this, 'events');\n\tif (!events) return;\n\n\t// bind all prefixed events to view then call native delegate events\n\t_(nestedEventTypes).each(function(type) {\n\t\tvar typeEventsHash = self._nestedEventsHash[type];\n\n\t\tif (!_(events).has(type) || !_.isObject(events[type])) return;\n\n\t\t_(events[type]).each(function(method, key) {\n\t\t\tif (!_.isFunction(method)) method = self[method];\n\t\t\tif (!method) return;\n\t\t\tvar match = key.match(delegateEventSplitter);\n\t\t\tvar eventName = match[1];\n\t\t\tvar entityKeys = match[2].replace(/ *, */g, ',').split(',');\n\t\t\tmethod = _.bind(method, self);\n\n\t\t\t// fill _nestedEventsHash\n\t\t\t_(entityKeys).each(function(entityKey) {\n\t\t\t\ttypeEventsHash[entityKey] = typeEventsHash[entityKey] || [];\n\t\t\t\ttypeEventsHash[entityKey].push({\n\t\t\t\t\teventName: eventName,\n\t\t\t\t\thandler: method\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n};\n\n/*\n * Wrap all non-array views groups to arrays with one element\n */\n\nView._normalizeViews = function() {\n\tvar self = this;\n\n\t_(this.views).each(function(views, container) {\n\t\tif (!_.isArray(views)) {\n\t\t\tself.views[container] = [views];\n\t\t}\n\t});\n};\n\n/*\n * Get view attached state\n */\n\nView.isAttached = function() {\n\tvar view = this.$el.data('esencia-view');\n\treturn Boolean(view && view === this);\n};\n\nView._afterAttachViews = function() {\n\t// iterate by each nested views groups\n\t_(this.views).each(function(viewsGroup) {\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call _afterAttachViews for each views from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview._afterAttachViews();\n\t\t});\n\t});\n\n\t// call afterAttach for current view\n\tif (this._isAfterAttachNeeded) {\n\t\t// remove after attach flag\n\t\tdelete this._isAfterAttachNeeded;\n\n\t\t// call after attach\n\t\tthis.afterAttach();\n\t}\n};\n\n/*\n * afterAttach is empty by default.\n * It called after _createTemplateElement, renderViews and attach calls\n * Override it to add some specific logic after template render.\n */\n\nView.afterAttach = function() {\n\treturn this;\n};\n\n/*\n * Detach all previous views and attach new view to current view $el\n */\n\nView.attach = function() {\n\t// return if current view is already attached\n\tif (this.isAttached()) return this;\n\n\t// detach previous instance attached to this element\n\tvar previousView = this.$el.data('esencia-view');\n\tif (previousView) previousView.detach();\n\n\t// attach current view and set attr\n\tthis.$el.data('esencia-view', this).attr('esencia-view', this.cid);\n\n\treturn this;\n};\n\nView._detachViews = function() {\n\t// iterate by each views groups\n\t_(this.views).each(function(viewsGroup) {\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call _detachViews for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview.detach();\n\t\t});\n\t});\n};\n\n/*\n * beforeDetach is empty by default.\n * It called before detach calls\n * Override it to add some specific logic before view detach from dom.\n */\n\nView.beforeDetach = function() {\n\treturn this;\n};\n\n/*\n * Detach view from current view $el\n */\n\nView.detach = function() {\n\t// return if current view is not already attached\n\tif (!this.isAttached()) return this;\n\n\t// detach all nested views\n\tthis._detachViews();\n\n\t// do some user actions\n\tthis.beforeDetach();\n\n\t// remove attr and data from $el\n\tthis.$el.removeData('esencia-view').removeAttr('esencia-view');\n\n\t// disable all events\n\tthis.undelegateEvents();\n\tthis.stopListening();\n\n\treturn this;\n};\n\nView.remove = function() {\n\tif (this.parent) {\n\t\tthis.parent.removeView(this, this.container);\n\t}\n\tthis.detach();\n\tthis._removeElement();\n\treturn this;\n};\n\n/*\n * Get view, that attached to closest element with attr `esencia-view`\n *\n * @param {String | $} selector\n */\n\nView.getClosestView = function(selector) {\n\tvar $selector = $(selector);\n\n\tif (!$selector.is('[esencia-view]')) {\n\t\t$selector = $selector.closest('[esencia-view]');\n\t}\n\n\treturn $selector.length ? $selector.data('esencia-view') : null;\n};\n\nmodule.exports = backbone.View.extend(View);\n"]}