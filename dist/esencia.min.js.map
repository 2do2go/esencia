{"version":3,"sources":["esencia.js","lib/collection.js","lib/esencia.js","lib/router.js","lib/view.js"],"names":["factory","define","amd","exports","module","require","this","Esencia","_","Backbone","__external__","__external_Backbone","_require","id","cache","modules","call","backbone","Collection","baseMethods","execMethodType","sync","method","model","options","contains","prototype","params","type","dataType","contentType","processData","url","result","urlError","charAt","length","data","isObject","JSON","stringify","xhr","ajax","extend","trigger","exec","clone","collection","success","resp","error","Error","Router","View","root","rootViewEl","modulesPath","defaultModuleName","pushState","namedParameters","autoloadModules","debug","config","onModuleError","nowhereUrl","routerOptions","constructor","pick","components","componentsTree","urlParams","history","apply","arguments","route","setModule","_initRootComponent","RootView","el","component","name","parent","_populateUrlParams","componentName","key","has","componentOptions","router","defaults","defaultUrlParams","viewOptions","process","isUndefined","uniqueId","isString","isNull","_processComponent","_calculateComponentsTree","child","node","_isComponentTreeNodeChanged","oldNode","view","isAttached","isUnchanged","_applyComponentsTree","callback","self","parentNode","iterateNode","childNode","onViewResolve","setData","container","setView","renderViews","render","chain","value","isWaiting","once","oldChildNodeContainer","oldChildNode","removeView","noop","newComponentsTree","isFunction","args","_defaultMiddleware","navigate","fragment","indexOf","substring","force","replace","omit","qs","each","val","undefined","toFragment","next","middleware","defaultMiddleware","moduleName","split","find","identity","moduleInit","start","$","splice","Array","delegateEventSplitter","nestedEventTypes","templateHelpers","wait","_waiting","views","template","_normalizeViews","_prepareNestedEvents","collections","delegateNestedEvents","models","_createTemplateElement","_isAfterAttachNeeded","attach","$el","_afterAttachViews","getTemplateData","renderTemplate","templateData","html","$html","$newEl","first","replaceWith","setElement","viewsGroup","$container","some","is","append","pluck","setViews","index","_updateViews","replaceView","replaceViews","appendView","appendViews","insertViews","prependView","prependViews","insertView","removeViews","getView","getViews","isArray","removedViews","remove","concat","viewObjs","uniq","map","filter","viewObj","sortBy","undelegateNestedEvents","delegateEvents","events","entities","listeners","_nestedEventsHash","listener","entity","listenTo","eventName","handler","stopListening","typeEventsHash","match","entityKeys","bind","entityKey","push","Boolean","afterAttach","previousView","detach","attr","cid","_detachViews","beforeDetach","removeData","removeAttr","undelegateEvents","_removeElement","getClosestView","selector","$selector","closest"],"mappings":"CAAC,SAAUA,GACe,kBAAXC,SAAyBA,OAAOC,IACvCD,QACI,aACA,YACDD,GACuB,gBAAZG,SACdC,OAAOD,QAAUH,EAAQK,QAAQ,cAAeA,QAAQ,aAExDC,KAAKC,QAAUP,EAAQQ,EAAGC,WAEhC,SAAUC,EAAcC,GAEtB,QAASC,GAASC,GACd,GAAIT,GAASQ,EAASE,MAAMD,EAC5B,KAAKT,EAAQ,CACT,GAAID,KACJC,GAASQ,EAASE,MAAMD,IACpBA,GAAIA,EACJV,QAASA,GAEbS,EAASG,QAAQF,GAAIG,KAAKb,EAASC,EAAQD,GAE/C,MAAOC,GAAOD,QAquBlB,MAnuBAS,GAASE,SACTF,EAASG,SACL,SAAUX,EAAQD,GC3B1B,YAEA,IAAIK,GAAII,EAAQ,GACZK,EAAWL,EAAQ,GAEnBM,KAGAC,GAAe,SAAU,SAAU,QAAS,SAAU,QAEtDC,EAAiB,KAMrBF,GAAWG,KAAO,SAASC,EAAQC,EAAOC,GAEzC,GAAKhB,EAAEiB,SAASN,EAAaG,GA2B5B,MAAOL,GAASC,WAAWQ,UAAUL,KAAKL,KAAKV,KAAMgB,EAAQC,EAAOC,EA1BpEA,GAAUA,KAEV,IAAIG,IACHC,KAAMR,EACNS,SAAU,OACVC,YAAa,mBACbC,aAAa,EAId,KAAKP,EAAQQ,IAAK,CACjB,GAAIA,GAAMxB,EAAEyB,OAAOV,EAAO,QAAUW,GACpCP,GAAOK,IAAMA,GAAsC,MAA/BA,EAAIG,OAAOH,EAAII,OAAS,GAAa,GAAK,KAAOd,EAIlEE,EAAQa,MAAQ7B,EAAE8B,SAASd,EAAQa,QACtCb,EAAQa,KAAOE,KAAKC,UAAUhB,EAAQa,MAIvC,IAAII,GAAMjB,EAAQiB,IAAMxB,EAASyB,KAAKlC,EAAEmC,OAAOhB,EAAQH,GAEvD,OADAD,GAAMqB,QAAQ,UAAWrB,EAAOkB,EAAKjB,GAC9BiB,GAeTvB,EAAW2B,KAAO,SAASvB,EAAQE,GAClCA,EAAUA,EAAUhB,EAAEsC,MAAMtB,KAE5B,IAAIuB,GAAazC,KACb0C,EAAUxB,EAAQwB,OACtBxB,GAAQwB,QAAU,SAASC,GACtBD,GAASA,EAAQD,EAAYE,EAAMzB,GACvCuB,EAAWH,QAAQ,QAAUtB,EAAQyB,EAAYE,EAAMzB,GAGxD,IAAI0B,GAAQ1B,EAAQ0B,KAMpB,OALA1B,GAAQ0B,MAAQ,SAASD,GACpBC,GAAOA,EAAMH,EAAYE,EAAMzB,GACnCuB,EAAWH,QAAQ,QAASG,EAAYE,EAAMzB,IAGxClB,KAAKe,KAAKC,EAAQhB,KAAMkB,GAIhC,IAAIU,GAAW,WACd,KAAM,IAAIiB,OAAM,kDAGjB/C,GAAOD,QAAUc,EAASC,WAAWyB,OAAOzB,IDIpC,SAAUd,EAAQD,GErF1B,YAEA,IAAIiD,GAASxC,EAAQ,GACjBM,EAAaN,EAAQ,GACrByC,EAAOzC,EAAQ,EAEnBR,GAAOD,QAAQiD,OAASA,EACxBhD,EAAOD,QAAQe,WAAaA,EAC5Bd,EAAOD,QAAQkD,KAAOA,GFsFd,SAAUjD,EAAQD,GG9F1B,YAEA,IAAIK,GAAII,EAAQ,GACZK,EAAWL,EAAQ,GACnByC,EAAOzC,EAAQ,GAMfwC,GACHE,KAAM,IACNC,WAAY,OACZC,YAAa,WACbC,kBAAmB,OACnBC,WAAW,EACXC,iBAAiB,EACjBC,iBAAiB,EACjBC,OAAO,EACPC,UACAC,cAAe,aACfC,WAAY,OAGTC,GACH,OAAQ,aAAc,cAAe,oBAAqB,YAC1D,kBAAmB,kBAAmB,QAAS,SAAU,gBACzD,aAQDb,GAAOc,YAAc,SAAS1C,GAC7BA,EAAUA,MAGVhB,EAAEmC,OAAOrC,KAAME,EAAE2D,KAAK3C,EAASyC,IAG/B3D,KAAKkB,QAAUA,EAEflB,KAAK8D,cACL9D,KAAK+D,eAAiB,KACtB/D,KAAKgE,aACLhE,KAAKS,WAELT,KAAKiE,QAAUtD,EAASsD,QAQxBtD,EAASmC,OAAOO,gBAAkBrD,KAAKqD,gBAEvC1C,EAASmC,OAAOoB,MAAMlE,KAAMmE,WAExBjD,EAAQoC,iBACXtD,KAAKoE,MAAM,OAAQ,SAAS/C,GAC3BrB,KAAKqE,UAAUhD,MAKlByB,EAAOwB,mBAAqB,WAC3B,GAAIC,GAAWxB,EAAKV,QACnBmC,GAAIxE,KAAKiD,YAGVjD,MAAKyE,WACJC,KAAM,GACNC,OAAQ,KACR5B,KAAMwB,KAIRzB,EAAO8B,mBAAqB,SAASC,EAAexD,GACnD,GAGIyD,GAHAd,EAAYhE,KAAKgE,SAIrB,KAAKc,IAAOd,GACP9D,EAAE8D,GAAWe,IAAID,UACbd,GAAUc,EAInB,IAAIL,GAAYzE,KAAK8D,WAAWe,EAGhC,OAAO3E,GAAE8D,GAAW3B,OACnBnC,EAAEuE,GAAW9C,OAAO,oBACpBN,GAUD,IAAI2D,IACJ,MAAO,OAAQ,SAAU,YAAa,OAAQ,SAAU,cACxD,cAAe,mBAGhBlC,GAAO2B,UAAY,SAASvD,GAC3B,GAAI+D,GAASjF,IAEbkB,GAAUhB,MAAMgF,SAAShE,GACxByD,OAAQ,GACRQ,oBACAC,eACAC,SAAS,GAGV,IAAIZ,GAAYvE,EAAEgB,GAAS2C,KAAKmB,EAOhC,IAJI9E,EAAEoF,YAAYb,EAAUC,QAC3BD,EAAUC,KAAOxE,EAAEqF,SAAS,0BAGxBrF,EAAEsF,SAASf,EAAUC,MACzB,KAAM,IAAI7B,OAAM,6CAGjB,IAAI4B,EAAUC,OAAQ1E,MAAK8D,WAC1B,KAAM,IAAIjB,OAAM,kCAAoC4B,EAAUC,KAAO,IAGtE,KAAKD,EAAU1B,KACd,KAAM,IAAIF,OAAM,sCAGjB,KAAK3C,EAAEsF,SAASf,EAAUE,UAAYzE,EAAEuF,OAAOhB,EAAUE,QACxD,KAAM,IAAI9B,OAAM,uDAoBjB,OAjBA7C,MAAK8D,WAAWW,EAAUC,MAAQD,EAG7BvE,EAAEoF,YAAYb,EAAU/C,MAC5B1B,KAAKoE,MAAMK,EAAU/C,IAAK+C,EAAUC,KAAM,SAASrD,GAClD4D,EAAOL,mBAAmBH,EAAUC,KAAMrD,GAG1C4D,EAAOS,kBAAkBjB,EAAUC,QAKjCxD,EAAQmE,SACXrF,KAAK0F,kBAAkBjB,EAAUC,MAG3B1E,MAGR8C,EAAO6C,yBAA2B,SAASd,EAAee,GACzD,GAAInB,GAAYzE,KAAK8D,WAAWe,EAEhC,KAAKJ,EACJ,KAAM,IAAI5B,OAAM,gCAAkCgC,EAAgB,IAGnE,IAAIgB,IAAQnB,KAAMG,EAKlB,OAJIe,KACHC,EAAKD,MAAQA,GAGV1F,EAAEsF,SAASf,EAAUE,QACjB3E,KAAK2F,yBAAyBlB,EAAUE,OAAQkB,GAEhDA,GAIT/C,EAAOgD,4BAA8B,SAASC,EAASF,GACtD,IAAKE,GAAWA,EAAQrB,OAASmB,EAAKnB,OAASqB,EAAQC,KAAM,OAAO,CACpE,IAAIvB,GAAYzE,KAAK8D,WAAW+B,EAAKnB,KACrC,OAAIqB,GAAQC,eAAgBvB,GAAU1B,OAAS,KAC1CgD,EAAQC,KAAKC,eACVF,EAAQC,KAAKE,gBAGtBpD,EAAOqD,qBAAuB,SAAS9E,EAAQ+E,GAC9C,GAmDIJ,GAnDAK,EAAOrG,KAEPsG,EAAajF,EAAOiF,WAEpBC,EAAc,SAASR,EAASF,GAGnC,GAAIW,GAAYX,EAAKD,YACdC,GAAKD,MAERU,EACHA,EAAWV,MAAQC,EAEnBQ,EAAKtC,eAAiB8B,EAGnBW,EACHH,EAAKF,sBACJG,WAAYT,EACZE,QAASA,GAAWA,EAAQH,OAAS,KACrCC,KAAMW,GACJJ,GAEHA,KAIEP,EAAOxE,EAAOwE,KACdE,EAAU1E,EAAO0E,QACjBtB,EAAYzE,KAAK8D,WAAW+B,EAAKnB,MAEjC+B,EAAgB,SAAST,GAI5B,GAHAH,EAAKG,KAAOA,EACZA,EAAKU,UAEDjC,EAAUkC,UAAW,CACxB,IAAKL,EACJ,KAAM,IAAIzD,OAAM,sEAIjByD,GAAWN,KAAKY,QAAQZ,EAAMvB,EAAUkC,WACxCL,EAAWN,KAAKa,kBAEhBb,GAAKc,QAINP,GAAY,KAAMV,GAInB,IAAI7F,KAAK8F,4BAA4BC,EAASF,GAK7CG,EAAO,GAAKvB,GAAU1B,KACrB7C,EAAEuE,GACAsC,QACAlD,KAAK,SAAU,eACfqB,SAAShF,EAAEuE,GAAW9C,OAAO,gBAC7BU,QAAQ4C,OAAQjF,OAChBgH,SAGChB,EAAKiB,YAERjB,EAAKkB,KAAK,UAAW,WACpBT,EAAcT,KAGfS,EAAcT,OAET,CAENA,EAAOD,EAAQC,IAEf,IAGImB,GAHAC,EAAerB,EAAQH,KAIvBwB,IAAgBA,EAAapB,OAChCmB,EAAwBC,EAAapB,KAAKW,UAC1CX,EAAKqB,WAAWD,EAAapB,KAAMmB,IAGpCtB,EAAKG,KAAOA,EACZA,EAAKU,UACLV,EAAKc,SAGDM,GAAgBA,EAAapB,MAChCA,EAAKY,QAAQQ,EAAapB,KAAMmB,GAIjCZ,EAAYR,EAASF,KAIvB/C,EAAO4C,kBAAoB,SAASb,EAAeuB,GAClDA,EAAWA,GAAYlG,EAAEoH,IAEzB,IAAIC,GAAoBvH,KAAK2F,yBAAyBd,EAEtD7E,MAAKmG,sBACJG,WAAY,KACZP,QAAS/F,KAAK+D,eACd8B,KAAM0B,GACJnB,IAOJtD,EAAOsB,MAAQ,SAAS1C,EAAKgD,EAAM0B,GAClC,GAAInB,GAASjF,IAETE,GAAEsH,WAAW9C,KAChB0B,EAAW1B,EACXA,EAAO,IAGR/D,EAASmC,OAAO1B,UAAUgD,MAAM1D,KAAKV,KAAM0B,EAAKgD,EAAM,WACrD,GAAI+C,GAAOtD,SAEXc,GAAOyC,oBACNhG,IAAKA,EACLgD,KAAMA,EACN0B,SAAUA,GACR,WACFA,EAASlC,MAAMe,EAAQwC,QAY1B3E,EAAO6E,SAAW,SAASC,EAAU1G,GASpC,GARAA,EAAUA,MAE0B,IAAhC0G,EAASC,QAAQ7H,KAAKgD,QACzB4E,EAAWA,EAASE,UAAU9H,KAAKgD,KAAKlB,SAKrCZ,EAAQ6G,MAQX,MAPA/H,MAAK2H,SAAS3H,KAAK0D,YAClBsE,QAAS9G,EAAQ8G,QACjB1F,SAAS,IAGVpB,EAAUhB,EAAEgB,GAAS6F,QAAQkB,KAAK,SAAS5F,QAAQ2F,SAAS,IAAOhB,QAE5DhH,KAAK2H,SAASC,EAAU1G,EAIhCA,GAAUhB,EAAEgB,OAAegE,UAC1B5C,SAAS,EACTjB,WAID,IAAI6G,GAAKhH,EAAQgH,EAEbA,KAEHhI,EAAEgI,GAAIC,KAAK,SAASC,EAAKtD,EAAKoD,GACjBG,SAARD,GAA6B,OAARA,SAAqBF,GAAGpD,KAIlD8C,EAAW5H,KAAKsI,WAAWV,EAAUM,SAE9BhH,GAAQgH,IAGhBvH,EAASmC,OAAO1B,UAAUuG,SAASjH,KAAKV,KAAM4H,EAAU1G,IAQzD4B,EAAO4E,mBAAqB,SAAStD,EAAOmE,GAC3CA,KAWDzF,EAAO0F,WAAa,SAASA,GAC5B,GAAIvD,GAASjF,KAETyI,EAAoBzI,KAAK0H,kBAQ7B,OANA1H,MAAK0H,mBAAqB,SAAStD,EAAOmE,GACzCE,EAAkB/H,KAAKuE,EAAQb,EAAO,WACrCoE,EAAW9H,KAAKuE,EAAQb,EAAOmE,MAI1BvI,MAQR8C,EAAOuB,UAAY,SAAShD,GAC3B,GAAI4D,GAASjF,KAET0B,EAAML,EAAOK,UACVL,GAAOK,GAEd,IAAIgH,GAAaxI,EAAEwB,EAAIiH,MAAM,MAAMC,KAAK1I,EAAE2I,WAAa7I,KAAKmD,iBAG5DpD,UAASC,KAAKkD,YAAcwF,GAAa,SAASI,GAE5C7D,EAAOxE,QAAQiI,KAEnBI,EAAW7D,GAGXA,EAAOxE,QAAQiI,IAAc,EAG7BzD,EAAO0C,SAASjG,GACfsG,SAAS,EACTD,OAAO,EACPG,GAAI7G,MAGJrB,KAAKyD,gBAOTX,EAAOiG,MAAQ,WACd/I,KAAKsE,qBAEL3D,EAASsD,QAAQ8E,OAChB3F,UAAWpD,KAAKoD,UAChBJ,KAAMhD,KAAKgD,QAIblD,EAAOD,QAAUc,EAASmC,OAAOT,OAAOS,IHlEhC,SAAUhD,EAAQD,GIxY1B,YAEA,IAAIK,GAAII,EAAQ,GACZK,EAAWL,EAAQ,GAMnB0I,EAAIrI,EAASqI,EAMbC,EAASC,MAAM9H,UAAU6H,OAMzBE,EAAwB,iBAExBC,GAAoB,QAAS,cAAe,UAM5CrG,GAKHsG,oBAGGjE,GACH,SAAU,cAAe,QAAS,SAAU,OAAQ,SACpD,kBAGDrC,GAAKuG,KAAO,WACX,GAAIjD,GAAOrG,IAGX,OAFAA,MAAKuJ,UAAW,EAET,WACNlD,EAAKkD,UAAW,EAChBlD,EAAK/D,QAAQ,aAIfS,EAAKkE,UAAY,WAChB,MAAOjH,MAAKuJ,UASbxG,EAAKa,YAAc,SAAS1C,GAC3B,GAAImF,GAAOrG,IAcX,IAZAkB,EAAUA,MAGVlB,KAAKwJ,SAELxJ,KAAK+B,KAAO/B,KAAK+B,SAGjB7B,EAAEmC,OAAOrC,KAAME,EAAE2D,KAAK3C,EAASkE,IAE/BpF,KAAKkB,QAAUA,EAEXlB,KAAKyJ,WAAavJ,EAAEsH,WAAWxH,KAAKyJ,UACvC,KAAM,IAAI5G,OAAM,8CAGjB7C,MAAK0J,kBACL1J,KAAK2J,uBAEL3J,KAAKuJ,UAAW,EAGhB5I,EAASoC,KAAKmB,MAAMlE,KAAMmE,WAGtBnE,KAAK4J,aACR1J,EAAEF,KAAK4J,aAAazB,KAAK,SAAS1F,EAAYqC,GAC7CuB,EAAKwD,qBAAqB,cAAe/E,EAAKrC,KAK5CzC,KAAK8J,QACR5J,EAAEF,KAAK8J,QAAQ3B,KAAK,SAASlH,EAAO6D,GACnCuB,EAAKwD,qBAAqB,SAAU/E,EAAK7D,MAK5C8B,EAAK2D,QAAU,SAAS3E,GACnBA,IAAM/B,KAAK+B,KAAOA,IAGvBgB,EAAKmD,YAAc,WAClB,OAAO,GAORnD,EAAK+D,OAAS,SAAS5F,GACtB,MAAIlB,MAAKiH,YAAoBjH,MAE7BkB,EAAUA,OAGTlB,KAAKyJ,WACJvI,EAAQ6G,OAAU/H,KAAKiG,cAAiBjG,KAAKkG,gBAE9ClG,KAAK+J,yBAIL/J,KAAKgK,sBAAuB,GAI7BhK,KAAKiK,SAGLjK,KAAK6G,YAAY3F,GAGblB,KAAKkK,IAAIvF,SAAS7C,QACrB9B,KAAKmK,oBAGCnK,OAOR+C,EAAKqH,gBAAkB,WACtB,MAAOpK,MAAK+B,MAUbgB,EAAKsH,eAAiB,SAASZ,EAAU1H,GAIxC,MAHAA,GAAO7B,EAAEF,MAAM+G,QAAQpF,OAAO,mBAAmBU,OAAON,GAAMiF,QAGvDyC,EAAS1H,IASjBgB,EAAKgH,uBAAyB,WAC7B,GAAIO,GAAetK,KAAKoK,kBACpBG,EAAOvK,KAAKqK,eAAerK,KAAKyJ,SAAUa,GAC1CE,EAAQxB,EAAEuB,EAEVC,GAAM1I,OAAS,CAInB,IAAI2I,GAASD,EAAME,OASnB,OANI1K,MAAKkK,IAAIvF,SAAS7C,QACrB9B,KAAKkK,IAAIS,YAAYF,GAGtBzK,KAAK4K,WAAWH,GAAQ,GAEjBzK,MAUR+C,EAAK8D,YAAc,SAAS3F,GAC3B,GAAImF,GAAOrG,IAGXE,GAAEF,KAAKwJ,OAAOrB,KAAK,SAAS0C,EAAYlE,GAEvC,GAAKkE,EAAW/I,OAAhB,CAGA5B,EAAE2K,GAAY1C,KAAK,SAASnC,GAC3BA,EAAKc,OAAO5F,IAIb,IAAI4J,GAAanE,EAAYN,EAAK2C,EAAErC,GAAW+D,QAAUrE,EAAK6D,GAE9D,KAAKY,EAAWhJ,OACf,KAAM,IAAIe,OAAM,cAAgB8D,EAAY,iBAGzCzG,GAAE2K,GAAYE,KAAK,SAAS/E,GAC/B,OAAQA,EAAKC,eAAiB6E,EAAWE,GAAGhF,EAAKkE,IAAIvF,aAGrDmG,EAAWG,OAAO/K,EAAE2K,GAAYK,MAAM,YAczCnI,EAAK6D,QAAU7D,EAAKoI,SAAW,SAAS3B,EAAO7C,EAAWyE,GACzD,MAAOpL,MAAKqL,aAAa,MAAO7B,EAAO7C,EAAWyE,IAOnDrI,EAAKuI,YAAcvI,EAAKwI,aAAe,SAAS/B,EAAO7C,EAAWyE,GACjE,MAAOpL,MAAKmL,SAASjH,MAAMlE,KAAMmE,YAWlCpB,EAAKyI,WAAazI,EAAK0I,YAAc,SAASjC,EAAO7C,GACpD,MAAO3G,MAAK0L,YAAYlC,EAAO7C,IAWhC5D,EAAK4I,YAAc5I,EAAK6I,aAAe,SAASpC,EAAO7C,GACtD,MAAO3G,MAAK0L,YAAYlC,EAAO7C,EAAW,IAY3C5D,EAAK8I,WAAa9I,EAAK2I,YAAc,SAASlC,EAAO7C,EAAWyE,GAC/D,MAAOpL,MAAKqL,aAAa,SAAU7B,EAAO7C,EAAWyE,IAatDrI,EAAKsE,WAAatE,EAAK+I,YAAc,SAAStC,EAAO7C,EAAWyE,GAC/D,GAAIjH,UAAUrC,OAAS,EACtB,KAAM,IAAIe,OAAM,iDAGjB,OAAI3C,GAAEsF,SAASgE,KACd4B,EAAQzE,EACRA,EAAY6C,EACZA,EAAQxJ,KAAK+L,QAAQpF,EAAWyE,IAC3B5B,GAAcxJ,KAGbA,KAAKqL,aAAa,SAAU7B,EAAO7C,IAU3C5D,EAAKgJ,QAAU,SAASpF,EAAWyE,GAClC,MAAOpL,MAAKgM,SAASrF,GAAWyE,GAAS,IAAM,MAShDrI,EAAKiJ,SAAW,SAASrF,GACxB,MAAOzG,GAAEsC,MAAMxC,KAAKwJ,MAAM7C,SAa3B5D,EAAKsI,aAAe,SAASrK,EAAQwI,EAAO7C,EAAWyE,GACtD,GAAI/E,GAAOrG,IAEX,KAAKwJ,EACJ,KAAM,IAAI3G,OAAM,qCAGZ3C,GAAE+L,QAAQzC,KAAQA,GAASA,GAEhC,IAAIqB,GAAa7K,KAAKgM,SAASrF,EAE/B,QAAQ3F,GACP,IAAK,MACJ,GAAI6J,EAAW/I,OAAQ,CACtB,GAAIoK,KAGiB,oBAAVd,IAGVc,EAAelM,KAAK+L,QAAQpF,EAAWyE,GACvCc,EAAeA,GAAgBA,OAG/BA,EAAerB,EAGZqB,EAAapK,SAGhB9B,KAAKqL,aAAa,SAAUa,EAAcvF,GAG1CzG,EAAEgM,GAAc/D,KAAK,SAASnC,GAC7BA,EAAKmG,YAMRnM,KAAKqL,aAAa,SAAU7B,EAAO7C,EAAWyE,EAE9C,MAED,KAAK,SACJlL,EAAEsJ,GAAOrB,KAAK,SAASnC,GAClBA,EAAKrB,QACRqB,EAAKrB,OAAO0C,WAAWrB,EAAMA,EAAKW,aAIhCkE,EAAW/I,QAEO,mBAAVsJ,KACVA,EAAQP,EAAW/I,QAIpBmH,EAAO/E,MAAMlE,KAAKwJ,MAAM7C,IAAayE,EAAO,GAAGgB,OAAO5C,KAGtDxJ,KAAKwJ,MAAM7C,GAAa6C,EAIzBtJ,EAAEsJ,GAAOrB,KAAK,SAASnC,GACtBA,EAAKrB,OAAS0B,EACdL,EAAKW,UAAYA,IAGlB3G,KAAK6J,qBAAqB,QAASlD,EAAW6C,EAE9C,MAED,KAAK,SACJ,IAAKqB,EAAW/I,OAAQ,KAExB,IAAIuK,GAAWnM,EAAE6G,MAAMyC,GAAO8C,OAAOC,IAAI,SAASvG,GAChD,OACCA,KAAMA,EACNoF,MAAOlL,EAAE2H,QAAQgD,EAAY7E,MAE5BwG,OAAO,SAASC,GAClB,MAAOA,GAAQrB,OAAS,IACtBsB,OAAO,SAASD,GAClB,OAAQA,EAAQrB,QACdpE,OAEJ,KAAKqF,EAASvK,OAAQ,KAEtB5B,GAAEmM,GAAUlE,KAAK,SAASsE,GACzB,GAAIzG,GAAOyG,EAAQzG,IAGnBiD,GAAOvI,KAAK2F,EAAKmD,MAAM7C,GAAY8F,EAAQrB,MAAO,GAGlD/E,EAAKsG,uBAAuB3G,SAGrBA,GAAKrB,SAIf,MAAO3E,OAOR+C,EAAK6J,eAAiB,SAASC,GAE9B,OADAA,EAASA,GAAU3M,EAAEyB,OAAO3B,KAAM,YAElC6M,EAAS3M,EAAE2M,GAAQ5E,KAAKmB,GACjBzI,EAASoC,KAAK3B,UAAUwL,eAAelM,KAAKV,KAAM6M,IAFrC7M,MAKrB+C,EAAK8G,qBAAuB,SAASvI,EAAMwD,EAAKgI,GAC/C,GAAIzG,GAAOrG,IACNE,GAAE+L,QAAQa,KAAWA,GAAYA,GACtC,IAAIC,GAAY/M,KAAKgN,kBAAkB1L,GAAMwD,EAQ7C,OAPIiI,IACH7M,EAAE6M,GAAW5E,KAAK,SAAS8E,GAC1B/M,EAAE4M,GAAU3E,KAAK,SAAS+E,GACzB7G,EAAK8G,SAASD,EAAQD,EAASG,UAAWH,EAASI,aAI/CrN,MAGR+C,EAAK4J,uBAAyB,SAASG,GACtC,GAAIzG,GAAOrG,IAKX,OAJKE,GAAE+L,QAAQa,KAAWA,GAAYA,IACtC5M,EAAE4M,GAAU3E,KAAK,SAAS+E,GACzB7G,EAAKiH,cAAcJ,KAEblN,MAGR+C,EAAK4G,qBAAuB,SAASkD,GACpC,GAAIxG,GAAOrG,IAGXA,MAAKgN,qBACL9M,EAAEkJ,GAAkBjB,KAAK,SAAS7G,GACjC+E,EAAK2G,kBAAkB1L,QAGxBuL,EAASA,GAAU3M,EAAEyB,OAAO3B,KAAM,UAC7B6M,GAGL3M,EAAEkJ,GAAkBjB,KAAK,SAAS7G,GACjC,GAAIiM,GAAiBlH,EAAK2G,kBAAkB1L,EAEvCpB,GAAE2M,GAAQ9H,IAAIzD,IAAUpB,EAAE8B,SAAS6K,EAAOvL,KAE/CpB,EAAE2M,EAAOvL,IAAO6G,KAAK,SAASnH,EAAQ8D,GAErC,GADK5E,EAAEsH,WAAWxG,KAASA,EAASqF,EAAKrF,IACpCA,EAAL,CACA,GAAIwM,GAAQ1I,EAAI0I,MAAMrE,GAClBiE,EAAYI,EAAM,GAClBC,EAAaD,EAAM,GAAGxF,QAAQ,SAAU,KAAKW,MAAM,IACvD3H,GAASd,EAAEwN,KAAK1M,EAAQqF,GAGxBnG,EAAEuN,GAAYtF,KAAK,SAASwF,GAC3BJ,EAAeI,GAAaJ,EAAeI,OAC3CJ,EAAeI,GAAWC,MACzBR,UAAWA,EACXC,QAASrM,YAWd+B,EAAK2G,gBAAkB,WACtB,GAAIrD,GAAOrG,IAEXE,GAAEF,KAAKwJ,OAAOrB,KAAK,SAASqB,EAAO7C,GAC7BzG,EAAE+L,QAAQzC,KACdnD,EAAKmD,MAAM7C,IAAc6C,OAS5BzG,EAAKkD,WAAa,WACjB,GAAID,GAAOhG,KAAKkK,IAAInI,KAAK,eACzB,OAAO8L,SAAQ7H,GAAQA,IAAShG,OAGjC+C,EAAKoH,kBAAoB,WAExBjK,EAAEF,KAAKwJ,OAAOrB,KAAK,SAAS0C,GAEtBA,EAAW/I,QAGhB5B,EAAE2K,GAAY1C,KAAK,SAASnC,GAC3BA,EAAKmE,wBAKHnK,KAAKgK,6BAEDhK,MAAKgK,qBAGZhK,KAAK8N,gBAUP/K,EAAK+K,YAAc,WAClB,MAAO9N,OAOR+C,EAAKkH,OAAS,WAEb,GAAIjK,KAAKiG,aAAc,MAAOjG,KAG9B,IAAI+N,GAAe/N,KAAKkK,IAAInI,KAAK,eAMjC,OALIgM,IAAcA,EAAaC,SAG/BhO,KAAKkK,IAAInI,KAAK,eAAgB/B,MAAMiO,KAAK,eAAgBjO,KAAKkO,KAEvDlO,MAGR+C,EAAKoL,aAAe,WAEnBjO,EAAEF,KAAKwJ,OAAOrB,KAAK,SAAS0C,GAEtBA,EAAW/I,QAGhB5B,EAAE2K,GAAY1C,KAAK,SAASnC,GAC3BA,EAAKgI,cAWRjL,EAAKqL,aAAe,WACnB,MAAOpO,OAOR+C,EAAKiL,OAAS,WAEb,MAAKhO,MAAKiG,cAGVjG,KAAKmO,eAGLnO,KAAKoO,eAGLpO,KAAKkK,IAAImE,WAAW,gBAAgBC,WAAW,gBAG/CtO,KAAKuO,mBACLvO,KAAKsN,gBAEEtN,MAfwBA,MAkBhC+C,EAAKoJ,OAAS,WAMb,MALInM,MAAK2E,QACR3E,KAAK2E,OAAO0C,WAAWrH,KAAMA,KAAK2G,WAEnC3G,KAAKgO,SACLhO,KAAKwO,iBACExO,MASR+C,EAAK0L,eAAiB,SAASC,GAC9B,GAAIC,GAAY3F,EAAE0F,EAMlB,OAJKC,GAAU3D,GAAG,oBACjB2D,EAAYA,EAAUC,QAAQ,mBAGxBD,EAAU7M,OAAS6M,EAAU5M,KAAK,gBAAkB,MAG5DjC,EAAOD,QAAUc,EAASoC,KAAKV,OAAOU,IJwF9B,SAAUjD,EAAQD,GACdC,EAAOD,QAAUQ,GAErB,SAAUP,EAAQD,GACdC,EAAOD,QAAUO,IAGlBE,EAAS","file":"esencia.min.js","sourcesContent":["(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([\n            'underscore',\n            'backbone'\n        ], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('underscore'), require('backbone'));\n    } else {\n        this.Esencia = factory(_, Backbone);\n    }\n}(function (__external__, __external_Backbone) {\n    var global = this, define;\n    function _require(id) {\n        var module = _require.cache[id];\n        if (!module) {\n            var exports = {};\n            module = _require.cache[id] = {\n                id: id,\n                exports: exports\n            };\n            _require.modules[id].call(exports, module, exports);\n        }\n        return module.exports;\n    }\n    _require.cache = [];\n    _require.modules = [\n        function (module, exports) {\n            'use strict';\n            var _ = _require(5);\n            var backbone = _require(4);\n            var Collection = {};\n            var baseMethods = [\n                    'create',\n                    'update',\n                    'patch',\n                    'delete',\n                    'read'\n                ];\n            var execMethodType = 'PUT';\n            Collection.sync = function (method, model, options) {\n                if (!_.contains(baseMethods, method)) {\n                    options = options || {};\n                    var params = {\n                            type: execMethodType,\n                            dataType: 'json',\n                            contentType: 'application/json',\n                            processData: false\n                        };\n                    if (!options.url) {\n                        var url = _.result(model, 'url') || urlError();\n                        params.url = url + (url.charAt(url.length - 1) === '/' ? '' : '/') + method;\n                    }\n                    if (options.data && _.isObject(options.data)) {\n                        options.data = JSON.stringify(options.data);\n                    }\n                    var xhr = options.xhr = backbone.ajax(_.extend(params, options));\n                    model.trigger('request', model, xhr, options);\n                    return xhr;\n                } else {\n                    return backbone.Collection.prototype.sync.call(this, method, model, options);\n                }\n            };\n            Collection.exec = function (method, options) {\n                options = options ? _.clone(options) : {};\n                var collection = this;\n                var success = options.success;\n                options.success = function (resp) {\n                    if (success)\n                        success(collection, resp, options);\n                    collection.trigger('exec:' + method, collection, resp, options);\n                };\n                var error = options.error;\n                options.error = function (resp) {\n                    if (error)\n                        error(collection, resp, options);\n                    collection.trigger('error', collection, resp, options);\n                };\n                return this.sync(method, this, options);\n            };\n            var urlError = function () {\n                throw new Error('A \"url\" property or function must be specified');\n            };\n            module.exports = backbone.Collection.extend(Collection);\n        },\n        function (module, exports) {\n            'use strict';\n            var Router = _require(2);\n            var Collection = _require(0);\n            var View = _require(3);\n            module.exports.Router = Router;\n            module.exports.Collection = Collection;\n            module.exports.View = View;\n        },\n        function (module, exports) {\n            'use strict';\n            var _ = _require(5);\n            var backbone = _require(4);\n            var View = _require(3);\n            var Router = {\n                    root: '/',\n                    rootViewEl: 'html',\n                    modulesPath: 'modules/',\n                    defaultModuleName: 'main',\n                    pushState: false,\n                    namedParameters: false,\n                    autoloadModules: true,\n                    debug: false,\n                    config: {},\n                    onModuleError: function () {\n                    },\n                    nowhereUrl: '___'\n                };\n            var routerOptions = [\n                    'root',\n                    'rootViewEl',\n                    'modulesPath',\n                    'defaultModuleName',\n                    'pushState',\n                    'namedParameters',\n                    'autoloadModules',\n                    'debug',\n                    'config',\n                    'onModuleError',\n                    'nowhereUrl'\n                ];\n            Router.constructor = function (options) {\n                options = options || {};\n                _.extend(this, _.pick(options, routerOptions));\n                this.options = options;\n                this.components = {};\n                this.componentsTree = null;\n                this.urlParams = {};\n                this.modules = {};\n                this.history = backbone.history;\n                backbone.Router.namedParameters = this.namedParameters;\n                backbone.Router.apply(this, arguments);\n                if (options.autoloadModules) {\n                    this.route('*url', function (params) {\n                        this.setModule(params);\n                    });\n                }\n            };\n            Router._initRootComponent = function () {\n                var RootView = View.extend({ el: this.rootViewEl });\n                this.component({\n                    name: '',\n                    parent: null,\n                    View: RootView\n                });\n            };\n            Router._populateUrlParams = function (componentName, params) {\n                var urlParams = this.urlParams;\n                var key;\n                for (key in urlParams) {\n                    if (_(urlParams).has(key)) {\n                        delete urlParams[key];\n                    }\n                }\n                var component = this.components[componentName];\n                return _(urlParams).extend(_(component).result('defaultUrlParams'), params);\n            };\n            var componentOptions = [\n                    'url',\n                    'name',\n                    'parent',\n                    'container',\n                    'View',\n                    'models',\n                    'collections',\n                    'viewOptions',\n                    'defaultUrlParams'\n                ];\n            Router.component = function (options) {\n                var router = this;\n                options = _({}).defaults(options, {\n                    parent: '',\n                    defaultUrlParams: {},\n                    viewOptions: {},\n                    process: false\n                });\n                var component = _(options).pick(componentOptions);\n                if (_.isUndefined(component.name)) {\n                    component.name = _.uniqueId('auto-named-component');\n                }\n                if (!_.isString(component.name)) {\n                    throw new Error('Component `name` option should be a string');\n                }\n                if (component.name in this.components) {\n                    throw new Error('Duplicate component with name \"' + component.name + '\"');\n                }\n                if (!component.View) {\n                    throw new Error('Component `View` option is required');\n                }\n                if (!_.isString(component.parent) && !_.isNull(component.parent)) {\n                    throw new Error('Component `parent` option should be a string or null');\n                }\n                this.components[component.name] = component;\n                if (!_.isUndefined(component.url)) {\n                    this.route(component.url, component.name, function (params) {\n                        router._populateUrlParams(component.name, params);\n                        router._processComponent(component.name);\n                    });\n                }\n                if (options.process) {\n                    this._processComponent(component.name);\n                }\n                return this;\n            };\n            Router._calculateComponentsTree = function (componentName, child) {\n                var component = this.components[componentName];\n                if (!component) {\n                    throw new Error('Unknown component with name \"' + componentName + '\"');\n                }\n                var node = { name: componentName };\n                if (child) {\n                    node.child = child;\n                }\n                if (_.isString(component.parent)) {\n                    return this._calculateComponentsTree(component.parent, node);\n                } else {\n                    return node;\n                }\n            };\n            Router._isComponentTreeNodeChanged = function (oldNode, node) {\n                if (!oldNode || oldNode.name !== node.name || !oldNode.view)\n                    return true;\n                var component = this.components[node.name];\n                if (oldNode.view instanceof component.View === false)\n                    return true;\n                if (!oldNode.view.isAttached())\n                    return true;\n                return !oldNode.view.isUnchanged();\n            };\n            Router._applyComponentsTree = function (params, callback) {\n                var self = this;\n                var parentNode = params.parentNode;\n                var iterateNode = function (oldNode, node) {\n                    var childNode = node.child;\n                    delete node.child;\n                    if (parentNode) {\n                        parentNode.child = node;\n                    } else {\n                        self.componentsTree = node;\n                    }\n                    if (childNode) {\n                        self._applyComponentsTree({\n                            parentNode: node,\n                            oldNode: oldNode && oldNode.child || null,\n                            node: childNode\n                        }, callback);\n                    } else {\n                        callback();\n                    }\n                };\n                var node = params.node;\n                var oldNode = params.oldNode;\n                var component = this.components[node.name];\n                var onViewResolve = function (view) {\n                    node.view = view;\n                    view.setData();\n                    if (component.container) {\n                        if (!parentNode) {\n                            throw new Error('Parent component should exist for component with ' + '`container` option');\n                        }\n                        parentNode.view.setView(view, component.container);\n                        parentNode.view.renderViews();\n                    } else {\n                        view.render();\n                    }\n                    iterateNode(null, node);\n                };\n                var view;\n                if (this._isComponentTreeNodeChanged(oldNode, node)) {\n                    view = new component.View(_(component).chain().pick('models', 'collections').defaults(_(component).result('viewOptions')).extend({ router: this }).value());\n                    if (view.isWaiting()) {\n                        view.once('resolve', function () {\n                            onViewResolve(view);\n                        });\n                    } else {\n                        onViewResolve(view);\n                    }\n                } else {\n                    view = oldNode.view;\n                    var oldChildNode = oldNode.child;\n                    var oldChildNodeContainer;\n                    if (oldChildNode && oldChildNode.view) {\n                        oldChildNodeContainer = oldChildNode.view.container;\n                        view.removeView(oldChildNode.view, oldChildNodeContainer);\n                    }\n                    node.view = view;\n                    view.setData();\n                    view.render();\n                    if (oldChildNode && oldChildNode.view) {\n                        view.setView(oldChildNode.view, oldChildNodeContainer);\n                    }\n                    iterateNode(oldNode, node);\n                }\n            };\n            Router._processComponent = function (componentName, callback) {\n                callback = callback || _.noop;\n                var newComponentsTree = this._calculateComponentsTree(componentName);\n                this._applyComponentsTree({\n                    parentNode: null,\n                    oldNode: this.componentsTree,\n                    node: newComponentsTree\n                }, callback);\n            };\n            Router.route = function (url, name, callback) {\n                var router = this;\n                if (_.isFunction(name)) {\n                    callback = name;\n                    name = '';\n                }\n                backbone.Router.prototype.route.call(this, url, name, function () {\n                    var args = arguments;\n                    router._defaultMiddleware({\n                        url: url,\n                        name: name,\n                        callback: callback\n                    }, function () {\n                        callback.apply(router, args);\n                    });\n                });\n            };\n            Router.navigate = function (fragment, options) {\n                options = options || {};\n                if (fragment.indexOf(this.root) === 0) {\n                    fragment = fragment.substring(this.root.length);\n                }\n                if (options.force) {\n                    this.navigate(this.nowhereUrl, {\n                        replace: options.replace,\n                        trigger: false\n                    });\n                    options = _(options).chain().omit('force').extend({ replace: true }).value();\n                    return this.navigate(fragment, options);\n                }\n                options = _(options || {}).defaults({\n                    trigger: true,\n                    params: {}\n                });\n                var qs = options.qs;\n                if (qs) {\n                    _(qs).each(function (val, key, qs) {\n                        if (val === undefined || val === null)\n                            delete qs[key];\n                    });\n                    fragment = this.toFragment(fragment, qs);\n                    delete options.qs;\n                }\n                backbone.Router.prototype.navigate.call(this, fragment, options);\n            };\n            Router._defaultMiddleware = function (route, next) {\n                next();\n            };\n            Router.middleware = function (middleware) {\n                var router = this;\n                var defaultMiddleware = this._defaultMiddleware;\n                this._defaultMiddleware = function (route, next) {\n                    defaultMiddleware.call(router, route, function () {\n                        middleware.call(router, route, next);\n                    });\n                };\n                return this;\n            };\n            Router.setModule = function (params) {\n                var router = this;\n                var url = params.url;\n                delete params.url;\n                var moduleName = _(url.split('/')).find(_.identity) || this.defaultModuleName;\n                require([this.modulesPath + moduleName], function (moduleInit) {\n                    if (!router.modules[moduleName]) {\n                        moduleInit(router);\n                        router.modules[moduleName] = true;\n                        router.navigate(url, {\n                            replace: true,\n                            force: true,\n                            qs: params\n                        });\n                    }\n                }, this.onModuleError);\n            };\n            Router.start = function () {\n                this._initRootComponent();\n                backbone.history.start({\n                    pushState: this.pushState,\n                    root: this.root\n                });\n            };\n            module.exports = backbone.Router.extend(Router);\n        },\n        function (module, exports) {\n            'use strict';\n            var _ = _require(5);\n            var backbone = _require(4);\n            var $ = backbone.$;\n            var splice = Array.prototype.splice;\n            var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n            var nestedEventTypes = [\n                    'views',\n                    'collections',\n                    'models'\n                ];\n            var View = { templateHelpers: {} };\n            var viewOptions = [\n                    'models',\n                    'collections',\n                    'views',\n                    'events',\n                    'data',\n                    'router',\n                    'templateHelpers'\n                ];\n            View.wait = function () {\n                var self = this;\n                this._waiting = true;\n                return function () {\n                    self._waiting = false;\n                    self.trigger('resolve');\n                };\n            };\n            View.isWaiting = function () {\n                return this._waiting;\n            };\n            View.constructor = function (options) {\n                var self = this;\n                options = options || {};\n                this.views = {};\n                this.data = this.data || {};\n                _.extend(this, _.pick(options, viewOptions));\n                this.options = options;\n                if (this.template && !_.isFunction(this.template)) {\n                    throw new Error('View `template` option should be a function');\n                }\n                this._normalizeViews();\n                this._prepareNestedEvents();\n                this._waiting = false;\n                backbone.View.apply(this, arguments);\n                if (this.collections) {\n                    _(this.collections).each(function (collection, key) {\n                        self.delegateNestedEvents('collections', key, collection);\n                    });\n                }\n                if (this.models) {\n                    _(this.models).each(function (model, key) {\n                        self.delegateNestedEvents('models', key, model);\n                    });\n                }\n            };\n            View.setData = function (data) {\n                if (data)\n                    this.data = data;\n            };\n            View.isUnchanged = function () {\n                return true;\n            };\n            View.render = function (options) {\n                if (this.isWaiting())\n                    return this;\n                options = options || {};\n                if (this.template && (options.force || !this.isAttached() || !this.isUnchanged())) {\n                    this._createTemplateElement();\n                    this._isAfterAttachNeeded = true;\n                }\n                this.attach();\n                this.renderViews(options);\n                if (this.$el.parent().length) {\n                    this._afterAttachViews();\n                }\n                return this;\n            };\n            View.getTemplateData = function () {\n                return this.data;\n            };\n            View.renderTemplate = function (template, data) {\n                data = _(this).chain().result('templateHelpers').extend(data).value();\n                return template(data);\n            };\n            View._createTemplateElement = function () {\n                var templateData = this.getTemplateData();\n                var html = this.renderTemplate(this.template, templateData);\n                var $html = $(html);\n                if ($html.length > 1) {\n                }\n                var $newEl = $html.first();\n                if (this.$el.parent().length) {\n                    this.$el.replaceWith($newEl);\n                }\n                this.setElement($newEl, true);\n                return this;\n            };\n            View.renderViews = function (options) {\n                var self = this;\n                _(this.views).each(function (viewsGroup, container) {\n                    if (!viewsGroup.length)\n                        return;\n                    _(viewsGroup).each(function (view) {\n                        view.render(options);\n                    });\n                    var $container = container ? self.$(container).first() : self.$el;\n                    if (!$container.length) {\n                        throw new Error('Container \"' + container + '\" is not found');\n                    }\n                    if (_(viewsGroup).some(function (view) {\n                            return !view.isAttached() || !$container.is(view.$el.parent());\n                        })) {\n                        $container.append(_(viewsGroup).pluck('$el'));\n                    }\n                });\n            };\n            View.setView = View.setViews = function (views, container, index) {\n                return this._updateViews('set', views, container, index);\n            };\n            View.replaceView = View.replaceViews = function (views, container, index) {\n                return this.setViews.apply(this, arguments);\n            };\n            View.appendView = View.appendViews = function (views, container) {\n                return this.insertViews(views, container);\n            };\n            View.prependView = View.prependViews = function (views, container) {\n                return this.insertViews(views, container, 0);\n            };\n            View.insertView = View.insertViews = function (views, container, index) {\n                return this._updateViews('insert', views, container, index);\n            };\n            View.removeView = View.removeViews = function (views, container, index) {\n                if (arguments.length < 2) {\n                    throw new Error('\"views\" or \"index\" arguments must be specified');\n                }\n                if (_.isString(views)) {\n                    index = container;\n                    container = views;\n                    views = this.getView(container, index);\n                    if (!views)\n                        return this;\n                }\n                return this._updateViews('remove', views, container);\n            };\n            View.getView = function (container, index) {\n                return this.getViews(container)[index || 0] || null;\n            };\n            View.getViews = function (container) {\n                return _.clone(this.views[container]) || [];\n            };\n            View._updateViews = function (method, views, container, index) {\n                var self = this;\n                if (!views) {\n                    throw new Error('\"views\" argument must be specified');\n                }\n                if (!_.isArray(views))\n                    views = [views];\n                var viewsGroup = this.getViews(container);\n                switch (method) {\n                case 'set':\n                    if (viewsGroup.length) {\n                        var removedViews = [];\n                        if (typeof index !== 'undefined') {\n                            removedViews = this.getView(container, index);\n                            removedViews = removedViews ? [removedViews] : [];\n                        } else {\n                            removedViews = viewsGroup;\n                        }\n                        if (removedViews.length) {\n                            this._updateViews('remove', removedViews, container);\n                            _(removedViews).each(function (view) {\n                                view.remove();\n                            });\n                        }\n                    }\n                    this._updateViews('insert', views, container, index);\n                    break;\n                case 'insert':\n                    _(views).each(function (view) {\n                        if (view.parent) {\n                            view.parent.removeView(view, view.container);\n                        }\n                    });\n                    if (viewsGroup.length) {\n                        if (typeof index === 'undefined') {\n                            index = viewsGroup.length;\n                        }\n                        splice.apply(this.views[container], [\n                            index,\n                            0\n                        ].concat(views));\n                    } else {\n                        this.views[container] = views;\n                    }\n                    _(views).each(function (view) {\n                        view.parent = self;\n                        view.container = container;\n                    });\n                    this.delegateNestedEvents('views', container, views);\n                    break;\n                case 'remove':\n                    if (!viewsGroup.length)\n                        break;\n                    var viewObjs = _.chain(views).uniq().map(function (view) {\n                            return {\n                                view: view,\n                                index: _.indexOf(viewsGroup, view)\n                            };\n                        }).filter(function (viewObj) {\n                            return viewObj.index >= 0;\n                        }).sortBy(function (viewObj) {\n                            return -viewObj.index;\n                        }).value();\n                    if (!viewObjs.length)\n                        break;\n                    _(viewObjs).each(function (viewObj) {\n                        var view = viewObj.view;\n                        splice.call(self.views[container], viewObj.index, 1);\n                        self.undelegateNestedEvents(view);\n                        delete view.parent;\n                    });\n                }\n                return this;\n            };\n            View.delegateEvents = function (events) {\n                events = events || _.result(this, 'events');\n                if (!events)\n                    return this;\n                events = _(events).omit(nestedEventTypes);\n                return backbone.View.prototype.delegateEvents.call(this, events);\n            };\n            View.delegateNestedEvents = function (type, key, entities) {\n                var self = this;\n                if (!_.isArray(entities))\n                    entities = [entities];\n                var listeners = this._nestedEventsHash[type][key];\n                if (listeners) {\n                    _(listeners).each(function (listener) {\n                        _(entities).each(function (entity) {\n                            self.listenTo(entity, listener.eventName, listener.handler);\n                        });\n                    });\n                }\n                return this;\n            };\n            View.undelegateNestedEvents = function (entities) {\n                var self = this;\n                if (!_.isArray(entities))\n                    entities = [entities];\n                _(entities).each(function (entity) {\n                    self.stopListening(entity);\n                });\n                return this;\n            };\n            View._prepareNestedEvents = function (events) {\n                var self = this;\n                this._nestedEventsHash = {};\n                _(nestedEventTypes).each(function (type) {\n                    self._nestedEventsHash[type] = {};\n                });\n                events = events || _.result(this, 'events');\n                if (!events)\n                    return;\n                _(nestedEventTypes).each(function (type) {\n                    var typeEventsHash = self._nestedEventsHash[type];\n                    if (!_(events).has(type) || !_.isObject(events[type]))\n                        return;\n                    _(events[type]).each(function (method, key) {\n                        if (!_.isFunction(method))\n                            method = self[method];\n                        if (!method)\n                            return;\n                        var match = key.match(delegateEventSplitter);\n                        var eventName = match[1];\n                        var entityKeys = match[2].replace(/ *, */g, ',').split(',');\n                        method = _.bind(method, self);\n                        _(entityKeys).each(function (entityKey) {\n                            typeEventsHash[entityKey] = typeEventsHash[entityKey] || [];\n                            typeEventsHash[entityKey].push({\n                                eventName: eventName,\n                                handler: method\n                            });\n                        });\n                    });\n                });\n            };\n            View._normalizeViews = function () {\n                var self = this;\n                _(this.views).each(function (views, container) {\n                    if (!_.isArray(views)) {\n                        self.views[container] = [views];\n                    }\n                });\n            };\n            View.isAttached = function () {\n                var view = this.$el.data('esencia-view');\n                return Boolean(view && view === this);\n            };\n            View._afterAttachViews = function () {\n                _(this.views).each(function (viewsGroup) {\n                    if (!viewsGroup.length)\n                        return;\n                    _(viewsGroup).each(function (view) {\n                        view._afterAttachViews();\n                    });\n                });\n                if (this._isAfterAttachNeeded) {\n                    delete this._isAfterAttachNeeded;\n                    this.afterAttach();\n                }\n            };\n            View.afterAttach = function () {\n                return this;\n            };\n            View.attach = function () {\n                if (this.isAttached())\n                    return this;\n                var previousView = this.$el.data('esencia-view');\n                if (previousView)\n                    previousView.detach();\n                this.$el.data('esencia-view', this).attr('esencia-view', this.cid);\n                return this;\n            };\n            View._detachViews = function () {\n                _(this.views).each(function (viewsGroup) {\n                    if (!viewsGroup.length)\n                        return;\n                    _(viewsGroup).each(function (view) {\n                        view.detach();\n                    });\n                });\n            };\n            View.beforeDetach = function () {\n                return this;\n            };\n            View.detach = function () {\n                if (!this.isAttached())\n                    return this;\n                this._detachViews();\n                this.beforeDetach();\n                this.$el.removeData('esencia-view').removeAttr('esencia-view');\n                this.undelegateEvents();\n                this.stopListening();\n                return this;\n            };\n            View.remove = function () {\n                if (this.parent) {\n                    this.parent.removeView(this, this.container);\n                }\n                this.detach();\n                this._removeElement();\n                return this;\n            };\n            View.getClosestView = function (selector) {\n                var $selector = $(selector);\n                if (!$selector.is('[esencia-view]')) {\n                    $selector = $selector.closest('[esencia-view]');\n                }\n                return $selector.length ? $selector.data('esencia-view') : null;\n            };\n            module.exports = backbone.View.extend(View);\n        },\n        function (module, exports) {\n            module.exports = __external_Backbone;\n        },\n        function (module, exports) {\n            module.exports = __external__;\n        }\n    ];\n    return _require(1);\n}));\n//# sourceMappingURL=esencia.js.map\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\n\nvar Collection = {};\n\n// base methods map\nvar baseMethods = ['create', 'update', 'patch', 'delete', 'read'];\n\nvar execMethodType = 'PUT';\n\n/*\n * Override `sync` to add exec custom method functionality\n */\n\nCollection.sync = function(method, model, options) {\n\t// if sync is called for custom exec method\n\tif (!_.contains(baseMethods, method)) {\n\t\toptions = options || {};\n\n\t\tvar params = {\n\t\t\ttype: execMethodType,\n\t\t\tdataType: 'json',\n\t\t\tcontentType: 'application/json',\n\t\t\tprocessData: false\n\t\t};\n\n\t\t// Ensure that we have a URL and add method name to it\n\t\tif (!options.url) {\n\t\t\tvar url = _.result(model, 'url') || urlError();\n\t\t\tparams.url = url + (url.charAt(url.length - 1) === '/' ? '' : '/') + method;\n\t\t}\n\n\t\t// stringify data to json\n\t\tif (options.data && _.isObject(options.data)) {\n\t\t\toptions.data = JSON.stringify(options.data);\n\t\t}\n\n\t\t// Make the request, allowing the user to override any Ajax options.\n\t\tvar xhr = options.xhr = backbone.ajax(_.extend(params, options));\n\t\tmodel.trigger('request', model, xhr, options);\n\t\treturn xhr;\n\t} else {\n\t\t// call default backbone.Collection sync for base REST methods\n\t\treturn backbone.Collection.prototype.sync.call(this, method, model, options);\n\t}\n};\n\n/*\n * Exec custom non-REST method on collection\n * It trigger `exec:[method]` event after success collection sync\n *\n * @param {String} method\n * @param {Object} options\n */\n\nCollection.exec = function(method, options) {\n\toptions = options ? _.clone(options) : {};\n\n\tvar collection = this;\n\tvar success = options.success;\n\toptions.success = function(resp) {\n\t\tif (success) success(collection, resp, options);\n\t\tcollection.trigger('exec:' + method, collection, resp, options);\n\t};\n\n\tvar error = options.error;\n\toptions.error = function(resp) {\n\t\tif (error) error(collection, resp, options);\n\t\tcollection.trigger('error', collection, resp, options);\n\t};\n\n\treturn this.sync(method, this, options);\n};\n\n// Throw an error when a URL is needed, and none is supplied.\nvar urlError = function() {\n\tthrow new Error('A \"url\" property or function must be specified');\n};\n\nmodule.exports = backbone.Collection.extend(Collection);\n","'use strict';\n\nvar Router = require('./router');\nvar Collection = require('./collection');\nvar View = require('./view');\n\nmodule.exports.Router = Router;\nmodule.exports.Collection = Collection;\nmodule.exports.View = View;\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar View = require('./view');\n\n/**\n * Router extends default backbone Router\n */\n\nvar Router = {\n\troot: '/',\n\trootViewEl: 'html',\n\tmodulesPath: 'modules/',\n\tdefaultModuleName: 'main',\n\tpushState: false,\n\tnamedParameters: false,\n\tautoloadModules: true,\n\tdebug: false,\n\tconfig: {},\n\tonModuleError: function() {},\n\tnowhereUrl: '___'\n};\n\nvar routerOptions = [\n\t'root', 'rootViewEl', 'modulesPath', 'defaultModuleName', 'pushState',\n\t'namedParameters', 'autoloadModules', 'debug', 'config', 'onModuleError',\n\t'nowhereUrl'\n];\n\n/*\n * Override `constructor`\n * @param {Object} [options]\n */\n\nRouter.constructor = function(options) {\n\toptions = options || {};\n\n\t// populate Router instance with fields from options\n\t_.extend(this, _.pick(options, routerOptions));\n\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\tthis.components = {};\n\tthis.componentsTree = null;\n\tthis.urlParams = {};\n\tthis.modules = {};\n\n\tthis.history = backbone.history;\n\n\t/*\n\t * All query parameters can be passed in a single hash using the key\n\t * referenced from the route definition (backbone queryparams will\n\t * do it for us)\n\t */\n\n\tbackbone.Router.namedParameters = this.namedParameters;\n\n\tbackbone.Router.apply(this, arguments);\n\n\tif (options.autoloadModules) {\n\t\tthis.route('*url', function(params) {\n\t\t\tthis.setModule(params);\n\t\t});\n\t}\n};\n\nRouter._initRootComponent = function() {\n\tvar RootView = View.extend({\n\t\tel: this.rootViewEl\n\t});\n\n\tthis.component({\n\t\tname: '',\n\t\tparent: null,\n\t\tView: RootView\n\t});\n};\n\nRouter._populateUrlParams = function(componentName, params) {\n\tvar urlParams = this.urlParams;\n\n\t// clean old values from urlParams object\n\tvar key;\n\tfor (key in urlParams) {\n\t\tif (_(urlParams).has(key)) {\n\t\t\tdelete urlParams[key];\n\t\t}\n\t}\n\n\tvar component = this.components[componentName];\n\n\t// populate urlParams with new params\n\treturn _(urlParams).extend(\n\t\t_(component).result('defaultUrlParams'),\n\t\tparams\n\t);\n};\n\n/*\n * Add component to router and bind it to url\n *\n * @param {Object} component\n */\n\n var componentOptions = [\n\t'url', 'name', 'parent', 'container', 'View', 'models', 'collections',\n\t'viewOptions', 'defaultUrlParams'\n];\n\nRouter.component = function(options) {\n\tvar router = this;\n\n\toptions = _({}).defaults(options, {\n\t\tparent: '',\n\t\tdefaultUrlParams: {},\n\t\tviewOptions: {},\n\t\tprocess: false\n\t});\n\n\tvar component = _(options).pick(componentOptions);\n\n\t// generate uniq component name if name is omitted\n\tif (_.isUndefined(component.name)) {\n\t\tcomponent.name = _.uniqueId('auto-named-component');\n\t}\n\n\tif (!_.isString(component.name)) {\n\t\tthrow new Error('Component `name` option should be a string');\n\t}\n\n\tif (component.name in this.components) {\n\t\tthrow new Error('Duplicate component with name \"' + component.name + '\"');\n\t}\n\n\tif (!component.View) {\n\t\tthrow new Error('Component `View` option is required');\n\t}\n\n\tif (!_.isString(component.parent) && !_.isNull(component.parent)) {\n\t\tthrow new Error('Component `parent` option should be a string or null');\n\t}\n\n\tthis.components[component.name] = component;\n\n\t// bind component to route\n\tif (!_.isUndefined(component.url)) {\n\t\tthis.route(component.url, component.name, function(params) {\n\t\t\trouter._populateUrlParams(component.name, params);\n\n\t\t\t// process components tree\n\t\t\trouter._processComponent(component.name);\n\t\t});\n\t}\n\n\t// process components tree in force mode\n\tif (options.process) {\n\t\tthis._processComponent(component.name);\n\t}\n\n\treturn this;\n};\n\nRouter._calculateComponentsTree = function(componentName, child) {\n\tvar component = this.components[componentName];\n\n\tif (!component) {\n\t\tthrow new Error('Unknown component with name \"' + componentName + '\"');\n\t}\n\n\tvar node = {name: componentName};\n\tif (child) {\n\t\tnode.child = child;\n\t}\n\n\tif (_.isString(component.parent)) {\n\t\treturn this._calculateComponentsTree(component.parent, node);\n\t} else {\n\t\treturn node;\n\t}\n};\n\nRouter._isComponentTreeNodeChanged = function(oldNode, node) {\n\tif (!oldNode || oldNode.name !== node.name || !oldNode.view) return true;\n\tvar component = this.components[node.name];\n\tif (oldNode.view instanceof component.View === false) return true;\n\tif (!oldNode.view.isAttached()) return true;\n\treturn !oldNode.view.isUnchanged();\n};\n\nRouter._applyComponentsTree = function(params, callback) {\n\tvar self = this;\n\n\tvar parentNode = params.parentNode;\n\n\tvar iterateNode = function(oldNode, node) {\n\t\t// omit child field in new node because it will set recursive\n\t\t// and should not exist if error case\n\t\tvar childNode = node.child;\n\t\tdelete node.child;\n\n\t\tif (parentNode) {\n\t\t\tparentNode.child = node;\n\t\t} else {\n\t\t\tself.componentsTree = node;\n\t\t}\n\n\t\tif (childNode) {\n\t\t\tself._applyComponentsTree({\n\t\t\t\tparentNode: node,\n\t\t\t\toldNode: oldNode && oldNode.child || null,\n\t\t\t\tnode: childNode\n\t\t\t}, callback);\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tvar node = params.node;\n\tvar oldNode = params.oldNode;\n\tvar component = this.components[node.name];\n\n\tvar onViewResolve = function(view) {\n\t\tnode.view = view;\n\t\tview.setData();\n\n\t\tif (component.container) {\n\t\t\tif (!parentNode) {\n\t\t\t\tthrow new Error('Parent component should exist for component with ' +\n\t\t\t\t\t'`container` option');\n\t\t\t}\n\n\t\t\tparentNode.view.setView(view, component.container);\n\t\t\tparentNode.view.renderViews();\n\t\t} else {\n\t\t\tview.render();\n\t\t}\n\n\t\t// stop processing old components tree\n\t\titerateNode(null, node);\n\t};\n\n\tvar view;\n\tif (this._isComponentTreeNodeChanged(oldNode, node)) {\n\t\t// @TODO: we need to clean previous view container here, because new view\n\t\t// may not replace it\n\n\t\t// create new view\n\t\tview = new (component.View)(\n\t\t\t_(component)\n\t\t\t\t.chain()\n\t\t\t\t.pick('models', 'collections')\n\t\t\t\t.defaults(_(component).result('viewOptions'))\n\t\t\t\t.extend({router: this})\n\t\t\t\t.value()\n\t\t);\n\n\t\tif (view.isWaiting()) {\n\t\t\t// wait when view will be resolved\n\t\t\tview.once('resolve', function() {\n\t\t\t\tonViewResolve(view);\n\t\t\t});\n\t\t} else {\n\t\t\tonViewResolve(view);\n\t\t}\n\t} else {\n\t\t// get view from old node because it is not changed\n\t\tview = oldNode.view;\n\n\t\tvar oldChildNode = oldNode.child;\n\n\t\t// temporary remove child node view\n\t\tvar oldChildNodeContainer;\n\t\tif (oldChildNode && oldChildNode.view) {\n\t\t\toldChildNodeContainer = oldChildNode.view.container;\n\t\t\tview.removeView(oldChildNode.view, oldChildNodeContainer);\n\t\t}\n\n\t\tnode.view = view;\n\t\tview.setData();\n\t\tview.render();\n\n\t\t// revert child node view\n\t\tif (oldChildNode && oldChildNode.view) {\n\t\t\tview.setView(oldChildNode.view, oldChildNodeContainer);\n\t\t}\n\n\t\t// proprocessing old components tree\n\t\titerateNode(oldNode, node);\n\t}\n};\n\nRouter._processComponent = function(componentName, callback) {\n\tcallback = callback || _.noop;\n\n\tvar newComponentsTree = this._calculateComponentsTree(componentName);\n\n\tthis._applyComponentsTree({\n\t\tparentNode: null,\n\t\toldNode: this.componentsTree,\n\t\tnode: newComponentsTree\n\t}, callback);\n};\n\n/*\n * Override `route` to add middleware processing functionality\n */\n\nRouter.route = function(url, name, callback) {\n\tvar router = this;\n\n\tif (_.isFunction(name)) {\n\t\tcallback = name;\n\t\tname = '';\n\t}\n\n\tbackbone.Router.prototype.route.call(this, url, name, function() {\n\t\tvar args = arguments;\n\n\t\trouter._defaultMiddleware({\n\t\t\turl: url,\n\t\t\tname: name,\n\t\t\tcallback: callback\n\t\t}, function() {\n\t\t\tcallback.apply(router, args);\n\t\t});\n\t});\n};\n\n/*\n * Override `navigate`\n * @param {String} fragment\n * @param {Object} [options] - hash of params\n * @param {Object} [options.qs] - query string hash\n */\n\nRouter.navigate = function(fragment, options) {\n\toptions = options || {};\n\n\tif (fragment.indexOf(this.root) === 0) {\n\t\tfragment = fragment.substring(this.root.length);\n\t}\n\n\t// force to go to the selected fragment even if we currently on it\n\t// @TODO: block nowhere url via `execute` after upgrade backbone (1.1.1)\n\tif (options.force) {\n\t\tthis.navigate(this.nowhereUrl, {\n\t\t\treplace: options.replace,\n\t\t\ttrigger: false\n\t\t});\n\n\t\toptions = _(options).chain().omit('force').extend({replace: true}).value();\n\n\t\treturn this.navigate(fragment, options);\n\t}\n\n\t// set `trigger` to true by default\n\toptions = _(options || {}).defaults({\n\t\ttrigger: true,\n\t\tparams: {}\n\t});\n\n\t// add support of query string using `toFragment` from backbone.queryparams\n\tvar qs = options.qs;\n\n\tif (qs) {\n\t\t// reject undefined and null qs parameters\n\t\t_(qs).each(function(val, key, qs) {\n\t\t\tif (val === undefined || val === null) delete qs[key];\n\t\t});\n\t\t// qs = _(qs).chain().omit(_.isNull).omit(_.isUndefined).value();\n\n\t\tfragment = this.toFragment(fragment, qs);\n\n\t\tdelete options.qs;\n\t}\n\n\tbackbone.Router.prototype.navigate.call(this, fragment, options);\n};\n\n\n/*\n * Default middleware function\n */\n\nRouter._defaultMiddleware = function(route, next) {\n\tnext();\n};\n\n/**\n * Use passed function as `middleware`\n *\n * @param {Function} middleware - middleware function,\n * `route` and `next` will be passed as arguments.\n * context (`this`) is link to the router object.\n */\n\nRouter.middleware = function(middleware) {\n\tvar router = this;\n\n\tvar defaultMiddleware = this._defaultMiddleware;\n\n\tthis._defaultMiddleware = function(route, next) {\n\t\tdefaultMiddleware.call(router, route, function() {\n\t\t\tmiddleware.call(router, route, next);\n\t\t});\n\t};\n\n\treturn this;\n};\n\n/*\n * Require module file and init it\n * @param {String} params.url Url without query string\n */\n\nRouter.setModule = function(params) {\n\tvar router = this;\n\n\tvar url = params.url;\n\tdelete params.url;\n\n\tvar moduleName = _(url.split('/')).find(_.identity) || this.defaultModuleName;\n\n\t// require module file\n\trequire([this.modulesPath + moduleName], function(moduleInit) {\n\t\t// if module is loaded first time\n\t\tif (!router.modules[moduleName]) {\n\t\t\t// init it\n\t\t\tmoduleInit(router);\n\n\t\t\t// set module init flag to true\n\t\t\trouter.modules[moduleName] = true;\n\n\t\t\t// and navigate again with force flag\n\t\t\trouter.navigate(url, {\n\t\t\t\treplace: true,\n\t\t\t\tforce: true,\n\t\t\t\tqs: params\n\t\t\t});\n\t\t}\n\t}, this.onModuleError);\n};\n\n/*\n * Start routes handling\n */\n\nRouter.start = function() {\n\tthis._initRootComponent();\n\n\tbackbone.history.start({\n\t\tpushState: this.pushState,\n\t\troot: this.root\n\t});\n};\n\nmodule.exports = backbone.Router.extend(Router);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\n\n/*\n * Take jquery or other selectors lib from backbone\n */\n\nvar $ = backbone.$;\n\n/*\n * Helpers\n */\n\nvar splice = Array.prototype.splice;\n\n/*\n * Cached regex to split keys for `delegate`.\n */\n\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\nvar nestedEventTypes = ['views', 'collections', 'models'];\n\n/*\n * Base View class extend backbone View class\n */\n\nvar View = {\n\t/*\n\t * Helpers (Object|Fuction) which will be passed to the template\n\t */\n\n\ttemplateHelpers: {}\n};\n\nvar viewOptions = [\n\t'models', 'collections', 'views', 'events', 'data', 'router',\n\t'templateHelpers'\n];\n\nView.wait = function() {\n\tvar self = this;\n\tthis._waiting = true;\n\n\treturn function() {\n\t\tself._waiting = false;\n\t\tself.trigger('resolve');\n\t};\n};\n\nView.isWaiting = function() {\n\treturn this._waiting;\n};\n\n/*\n * Override constructor\n *\n * @param {Object} [options]\n */\n\nView.constructor = function(options) {\n\tvar self = this;\n\n\toptions = options || {};\n\n\t// Nested views hash is empty by default\n\tthis.views = {};\n\n\tthis.data = this.data || {};\n\n\t// populate View instance with fields from options\n\t_.extend(this, _.pick(options, viewOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\tif (this.template && !_.isFunction(this.template)) {\n\t\tthrow new Error('View `template` option should be a function');\n\t}\n\n\tthis._normalizeViews();\n\tthis._prepareNestedEvents();\n\n\tthis._waiting = false;\n\n\t// apply backbone.View constructor\n\tbackbone.View.apply(this, arguments);\n\n\t// delegate events for each collection\n\tif (this.collections) {\n\t\t_(this.collections).each(function(collection, key) {\n\t\t\tself.delegateNestedEvents('collections', key, collection);\n\t\t});\n\t}\n\n\t// delegate events for each model\n\tif (this.models) {\n\t\t_(this.models).each(function(model, key) {\n\t\t\tself.delegateNestedEvents('models', key, model);\n\t\t});\n\t}\n};\n\nView.setData = function(data) {\n\tif (data) this.data = data;\n};\n\nView.isUnchanged = function() {\n\treturn true;\n};\n\n/*\n * Override `render`\n */\n\nView.render = function(options) {\n\tif (this.isWaiting()) return this;\n\n\toptions = options || {};\n\n\tif (\n\t\tthis.template &&\n\t\t(options.force || !this.isAttached() || !this.isUnchanged())\n\t) {\n\t\tthis._createTemplateElement();\n\n\t\t// set tricky flag that used for calling after render\n\t\t// only after _createTemplateElement\n\t\tthis._isAfterAttachNeeded = true;\n\t}\n\n\t// attach view to dom element\n\tthis.attach();\n\n\t// render nested views\n\tthis.renderViews(options);\n\n\t// call after attach method if el was set in parent view\n\tif (this.$el.parent().length) {\n\t\tthis._afterAttachViews();\n\t}\n\n\treturn this;\n};\n\n/*\n * Get data for template rendering\n */\n\nView.getTemplateData = function() {\n\treturn this.data;\n};\n\n/*\n * Render template with data. Returns html.\n *\n * @param {function} template for rendering\n * @params {object} data for rendering\n */\n\nView.renderTemplate = function(template, data) {\n\tdata = _(this).chain().result('templateHelpers').extend(data).value();\n\n\t// get html\n\treturn template(data);\n};\n\n/*\n * Set html to $el element\n *\n * @param {object} [data] data for rendering (return value of getData)\n */\n\nView._createTemplateElement = function() {\n\tvar templateData = this.getTemplateData();\n\tvar html = this.renderTemplate(this.template, templateData);\n\tvar $html = $(html);\n\n\tif ($html.length > 1) {\n\t\t// @TODO: show warning here or something better?\n\t}\n\n\tvar $newEl = $html.first();\n\n\t// insert html to $el\n\tif (this.$el.parent().length) {\n\t\tthis.$el.replaceWith($newEl);\n\t}\n\n\tthis.setElement($newEl, true);\n\n\treturn this;\n};\n\n\n/*\n * Render all nested view\n *\n * @TODO: add some rendering optimizations\n*/\n\nView.renderViews = function(options) {\n\tvar self = this;\n\n\t// iterate by each views group\n\t_(this.views).each(function(viewsGroup, container) {\n\t\t// return if view group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call render for each views from view group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview.render(options);\n\t\t});\n\n\t\t// get first container or $el\n\t\tvar $container = container ? self.$(container).first() : self.$el;\n\n\t\tif (!$container.length) {\n\t\t\tthrow new Error('Container \"' + container + '\" is not found');\n\t\t}\n\n\t\tif (_(viewsGroup).some(function(view) {\n\t\t\treturn !view.isAttached() || !$container.is(view.$el.parent());\n\t\t})) {\n\t\t\t// put to $container\n\t\t\t$container.append(_(viewsGroup).pluck('$el'));\n\t\t}\n\t});\n};\n\n/*\n * Set view(s) to views group or replace some view in specified position\n * If index is passed it replace only one view with index in views group\n *\n * @param {View | View[]} views - view(s) to set\n * @param {String} container - container to set\n * @param {Number} [index] - index of view to replace\n */\n\nView.setView = View.setViews = function(views, container, index) {\n\treturn this._updateViews('set', views, container, index);\n};\n\n/*\n * Alias for setViews\n */\n\nView.replaceView = View.replaceViews = function(views, container, index) {\n\treturn this.setViews.apply(this, arguments);\n};\n\n/*\n * Append view(s) to end of views group\n * This method is alias for insertViews without index argument\n *\n * @param {View | View[]} views\n * @param {String} container - container of views group\n */\n\nView.appendView = View.appendViews = function(views, container) {\n\treturn this.insertViews(views, container);\n};\n\n/*\n * Prepend view(s) to start of views group\n * This method is alias for insertViews with `0` as index argument value\n *\n * @param {View | View[]} views\n * @param {String} container - container of views group\n */\n\nView.prependView = View.prependViews = function(views, container) {\n\treturn this.insertViews(views, container, 0);\n};\n\n/*\n * Insert view(s) to specified position of views group\n * If index is not passed views will insert to end of views group (append)\n *\n * @param {View | View[]} views\n * @param {String} container - container of views group\n * @param {Number} [index] - position in views group\n */\n\nView.insertView = View.insertViews = function(views, container, index) {\n\treturn this._updateViews('insert', views, container, index);\n};\n\n/*\n * Remove view(s) from views group by index or views instances list\n * If index is passed it remove only one view in index position\n * If views is passed it remove some of them, that places in views group\n *\n * @param {View | View[]} [views] - view(s) to remove\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in views group\n */\n\nView.removeView = View.removeViews = function(views, container, index) {\n\tif (arguments.length < 2) {\n\t\tthrow new Error('\"views\" or \"index\" arguments must be specified');\n\t}\n\n\tif (_.isString(views)) {\n\t\tindex = container;\n\t\tcontainer = views;\n\t\tviews = this.getView(container, index);\n\t\tif (!views) return this;\n\t}\n\n\treturn this._updateViews('remove', views, container);\n};\n\n/*\n * Get single view by container and index\n *\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in views group\n */\n\nView.getView = function(container, index) {\n\treturn this.getViews(container)[index || 0] || null;\n};\n\n/*\n * Get views group by container\n *\n * @param {String} container - container of views group\n */\n\nView.getViews = function(container) {\n\treturn _.clone(this.views[container]) || [];\n};\n\n/*\n * Common method for updating view(s) in views group with method\n *  `set`, `insert` or `remove`.\n *\n * @param {String} method - `set`, `insert` or `remove`\n * @paran {View | View[]} views\n * @param {String} container - container of views group\n * @param {Number} [index] - index of view in group\n */\n\nView._updateViews = function(method, views, container, index) {\n\tvar self = this;\n\n\tif (!views) {\n\t\tthrow new Error('\"views\" argument must be specified');\n\t}\n\n\tif (!_.isArray(views)) views = [views];\n\n\tvar viewsGroup = this.getViews(container);\n\n\tswitch (method) {\n\t\tcase 'set':\n\t\t\tif (viewsGroup.length) {\n\t\t\t\tvar removedViews = [];\n\n\t\t\t\t// if views group is not empty\n\t\t\t\tif (typeof index !== 'undefined') {\n\t\t\t\t\t// if index is specified\n\t\t\t\t\t// remove view from specific position\n\t\t\t\t\tremovedViews = this.getView(container, index);\n\t\t\t\t\tremovedViews = removedViews ? [removedViews] : [];\n\t\t\t\t} else {\n\t\t\t\t\t// if no index - remove all views from views group\n\t\t\t\t\tremovedViews = viewsGroup;\n\t\t\t\t}\n\n\t\t\t\tif (removedViews.length) {\n\t\t\t\t\t// if remove views array is not empty\n\t\t\t\t\t// remove from parent\n\t\t\t\t\tthis._updateViews('remove', removedViews, container);\n\n\t\t\t\t\t// and remove views\n\t\t\t\t\t_(removedViews).each(function(view) {\n\t\t\t\t\t\tview.remove();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// insert new views\n\t\t\tthis._updateViews('insert', views, container, index);\n\n\t\t\tbreak;\n\n\t\tcase 'insert':\n\t\t\t_(views).each(function(view) {\n\t\t\t\tif (view.parent) {\n\t\t\t\t\tview.parent.removeView(view, view.container);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (viewsGroup.length) {\n\t\t\t\t// if index is not specified set it value as last index of views group\n\t\t\t\tif (typeof index === 'undefined') {\n\t\t\t\t\tindex = viewsGroup.length;\n\t\t\t\t}\n\n\t\t\t\t// insert views\n\t\t\t\tsplice.apply(this.views[container], [index, 0].concat(views));\n\t\t\t} else {\n\t\t\t\t// if group is empty - set views as whole views group value\n\t\t\t\tthis.views[container] = views;\n\t\t\t}\n\n\t\t\t// set each view parent to current\n\t\t\t_(views).each(function(view) {\n\t\t\t\tview.parent = self;\n\t\t\t\tview.container = container;\n\t\t\t});\n\n\t\t\tthis.delegateNestedEvents('views', container, views);\n\n\t\t\tbreak;\n\n\t\tcase 'remove':\n\t\t\tif (!viewsGroup.length) break;\n\n\t\t\tvar viewObjs = _.chain(views).uniq().map(function(view) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tview: view,\n\t\t\t\t\t\tindex: _.indexOf(viewsGroup, view)\n\t\t\t\t\t};\n\t\t\t\t}).filter(function(viewObj) {\n\t\t\t\t\treturn viewObj.index >= 0;\n\t\t\t\t}).sortBy(function(viewObj) {\n\t\t\t\t\treturn -viewObj.index;\n\t\t\t\t}).value();\n\n\t\t\tif (!viewObjs.length) break;\n\n\t\t\t_(viewObjs).each(function(viewObj) {\n\t\t\t\tvar view = viewObj.view;\n\n\t\t\t\t// remove item from group\n\t\t\t\tsplice.call(self.views[container], viewObj.index, 1);\n\n\t\t\t\t// undelegate all nested entity events\n\t\t\t\tself.undelegateNestedEvents(view);\n\n\t\t\t\t// unset view parent\n\t\t\t\tdelete view.parent;\n\t\t\t});\n\t}\n\n\treturn this;\n};\n\n/*\n * Override delegateEvents\n */\n\nView.delegateEvents = function(events) {\n\tevents = events || _.result(this, 'events');\n\tif (!events) return this;\n\tevents = _(events).omit(nestedEventTypes);\n\treturn backbone.View.prototype.delegateEvents.call(this, events);\n};\n\nView.delegateNestedEvents = function(type, key, entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\tvar listeners = this._nestedEventsHash[type][key];\n\tif (listeners) {\n\t\t_(listeners).each(function(listener) {\n\t\t\t_(entities).each(function(entity) {\n\t\t\t\tself.listenTo(entity, listener.eventName, listener.handler);\n\t\t\t});\n\t\t});\n\t}\n\treturn this;\n};\n\nView.undelegateNestedEvents = function(entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\t_(entities).each(function(entity) {\n\t\tself.stopListening(entity);\n\t});\n\treturn this;\n};\n\nView._prepareNestedEvents = function(events) {\n\tvar self = this;\n\n\t// Hash for nested views events fast search\n\tthis._nestedEventsHash = {};\n\t_(nestedEventTypes).each(function(type) {\n\t\tself._nestedEventsHash[type] = {};\n\t});\n\n\tevents = events || _.result(this, 'events');\n\tif (!events) return;\n\n\t// bind all prefixed events to view then call native delegate events\n\t_(nestedEventTypes).each(function(type) {\n\t\tvar typeEventsHash = self._nestedEventsHash[type];\n\n\t\tif (!_(events).has(type) || !_.isObject(events[type])) return;\n\n\t\t_(events[type]).each(function(method, key) {\n\t\t\tif (!_.isFunction(method)) method = self[method];\n\t\t\tif (!method) return;\n\t\t\tvar match = key.match(delegateEventSplitter);\n\t\t\tvar eventName = match[1];\n\t\t\tvar entityKeys = match[2].replace(/ *, */g, ',').split(',');\n\t\t\tmethod = _.bind(method, self);\n\n\t\t\t// fill _nestedEventsHash\n\t\t\t_(entityKeys).each(function(entityKey) {\n\t\t\t\ttypeEventsHash[entityKey] = typeEventsHash[entityKey] || [];\n\t\t\t\ttypeEventsHash[entityKey].push({\n\t\t\t\t\teventName: eventName,\n\t\t\t\t\thandler: method\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n};\n\n/*\n * Wrap all non-array views groups to arrays with one element\n */\n\nView._normalizeViews = function() {\n\tvar self = this;\n\n\t_(this.views).each(function(views, container) {\n\t\tif (!_.isArray(views)) {\n\t\t\tself.views[container] = [views];\n\t\t}\n\t});\n};\n\n/*\n * Get view attached state\n */\n\nView.isAttached = function() {\n\tvar view = this.$el.data('esencia-view');\n\treturn Boolean(view && view === this);\n};\n\nView._afterAttachViews = function() {\n\t// iterate by each nested views groups\n\t_(this.views).each(function(viewsGroup) {\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call _afterAttachViews for each views from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview._afterAttachViews();\n\t\t});\n\t});\n\n\t// call afterAttach for current view\n\tif (this._isAfterAttachNeeded) {\n\t\t// remove after attach flag\n\t\tdelete this._isAfterAttachNeeded;\n\n\t\t// call after attach\n\t\tthis.afterAttach();\n\t}\n};\n\n/*\n * afterAttach is empty by default.\n * It called after _createTemplateElement, renderViews and attach calls\n * Override it to add some specific logic after template render.\n */\n\nView.afterAttach = function() {\n\treturn this;\n};\n\n/*\n * Detach all previous views and attach new view to current view $el\n */\n\nView.attach = function() {\n\t// return if current view is already attached\n\tif (this.isAttached()) return this;\n\n\t// detach previous instance attached to this element\n\tvar previousView = this.$el.data('esencia-view');\n\tif (previousView) previousView.detach();\n\n\t// attach current view and set attr\n\tthis.$el.data('esencia-view', this).attr('esencia-view', this.cid);\n\n\treturn this;\n};\n\nView._detachViews = function() {\n\t// iterate by each views groups\n\t_(this.views).each(function(viewsGroup) {\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call _detachViews for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview.detach();\n\t\t});\n\t});\n};\n\n/*\n * beforeDetach is empty by default.\n * It called before detach calls\n * Override it to add some specific logic before view detach from dom.\n */\n\nView.beforeDetach = function() {\n\treturn this;\n};\n\n/*\n * Detach view from current view $el\n */\n\nView.detach = function() {\n\t// return if current view is not already attached\n\tif (!this.isAttached()) return this;\n\n\t// detach all nested views\n\tthis._detachViews();\n\n\t// do some user actions\n\tthis.beforeDetach();\n\n\t// remove attr and data from $el\n\tthis.$el.removeData('esencia-view').removeAttr('esencia-view');\n\n\t// disable all events\n\tthis.undelegateEvents();\n\tthis.stopListening();\n\n\treturn this;\n};\n\nView.remove = function() {\n\tif (this.parent) {\n\t\tthis.parent.removeView(this, this.container);\n\t}\n\tthis.detach();\n\tthis._removeElement();\n\treturn this;\n};\n\n/*\n * Get view, that attached to closest element with attr `esencia-view`\n *\n * @param {String | $} selector\n */\n\nView.getClosestView = function(selector) {\n\tvar $selector = $(selector);\n\n\tif (!$selector.is('[esencia-view]')) {\n\t\t$selector = $selector.closest('[esencia-view]');\n\t}\n\n\treturn $selector.length ? $selector.data('esencia-view') : null;\n};\n\nmodule.exports = backbone.View.extend(View);\n"],"sourceRoot":"."}