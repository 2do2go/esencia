{"version":3,"sources":["esencia.js","lib/classes/collection.js","lib/classes/collectionView.js","lib/classes/componentsManager.js","lib/classes/model.js","lib/classes/router.js","lib/classes/view.js","lib/esencia.js","lib/utils/componentsManager.js","lib/utils/exec.js","lib/utils/extend.js"],"names":["factory","define","amd","exports","module","require","this","Esencia","_","Backbone","__external__","__external_Backbone","_require","id","cache","modules","call","backbone","execUtils","Collection","sync","method","collection","options","prepareOptions","getFakeBaseMethod","prototype","exec","extend","parse","success","resp","fetch","reset","context","trigger","wrapError","View","CollectionView","collectionEvents","add","change","remove","_prepareViews","self","views","itemsContainer","map","model","ItemView","_prepareEntityEvents","_addEntityEvents","_onCollectionAdd","index","indexOf","models","addView","at","render","include","_onCollectionChange","view","getView","force","_onCollectionRemove","isTreeNodeChanged","oldNode","node","Boolean","component","name","isWaiting","attached","isUnchanged","ComponentsManager","pick","componentManagerOptions","components","tree","currentNames","autoAddRoot","_addRoot","initialize","apply","arguments","componentOptions","Events","rootEl","defaultParent","undefined","RootView","el","parent","defaults","load","hasName","has","hasContainer","hasParent","isString","isRoot","isNull","hasDefaultParent","Error","isUndefined","container","uniqueId","get","names","callback","isFunction","noop","isArray","length","_buildTree","oldTree","_applyTree","children","buildHashedTree","parentNames","nodes","chain","uniq","push","compact","value","each","find","child","isEmpty","filter","some","params","afterCallback","after","iterate","oldChildren","setData","setView","renderViews","attachViews","exclude","union","detach","result","componentsManager","listenToOnce","Model","serverAttrs","set","Router","namedParameters","autoloadModules","modulesPath","defaultModuleName","onModuleError","routerOptions","constructor","route","isObject","componentNames","pluck","join","namedParam","splatParam","namesPattern","_routeToRegExp","splatMatch","namedMatch","paramNames","match","replace","substring","_extractParameters","fragment","namedParams","console","log","i","loadModule","history","moduleName","getModuleName","moduleInit","loadUrl","split","identity","isContainerSkipped","contains","$","splice","Array","delegateEventSplitter","entityNamesSplitter","templateHelpers","waitsCounter","waitAvailable","entityTypes","entityEventTypes","viewOptions","data","_prepareModels","_prepareCollections","delegateEntityEvents","omit","wait","collections","once","defer","_render","template","getTemplateData","html","renderTemplate","$el","setElement","_ensureElement","$container","attach","viewsGroup","first","containerEl","domChanged","$els","append","_setViews","setViews","appendView","_addViews","appendViews","prependView","prependViews","addViews","removeView","_removeViews","removeViews","getViews","clone","getViewsCount","concat","oldViews","isNumber","oldView","all","viewObjs","viewObj","sortBy","undelegateEntityEvents","element","$previousEl","_setElement","replaceWith","ensureUI","ui","$ui","mapObject","selector","delegateTriggers","triggers","undelegateTriggers","event","key","eventName","delegateTrigger","bind","listener","on","cid","off","undelegateTrigger","entityType","entityName","entities","_entityEvents","events","entity","listenTo","stopListening","eventType","entityNames","_addEntityEvent","entityEvents","afterAttach","previousView","attr","delegateEvents","detachViews","beforeDetach","removeData","removeAttr","undelegateEvents","getClosestView","$selector","is","closest","backboneFields","DEFAULT_EXEC_TYPE","urlError","error","type","dataType","contentType","processData","url","JSON","stringify","baseMethodsMap","POST","PUT","PATCH","DELETE","GET","toUpperCase"],"mappings":"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","file":"esencia.min.js","sourcesContent":["(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([\n            'underscore',\n            'backbone'\n        ], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('underscore'), require('backbone'));\n    } else {\n        this.Esencia = factory(_, Backbone);\n    }\n}(function (__external__, __external_Backbone) {\n    var global = this, define;\n    function _require(id) {\n        var module = _require.cache[id];\n        if (!module) {\n            var exports = {};\n            module = _require.cache[id] = {\n                id: id,\n                exports: exports\n            };\n            _require.modules[id].call(exports, module, exports);\n        }\n        return module.exports;\n    }\n    _require.cache = [];\n    _require.modules = [\n        function (module, exports) {\n            'use strict';\n            var _ = _require(11);\n            var backbone = _require(10);\n            var execUtils = _require(8);\n            var Collection = {};\n            Collection.sync = function (method, collection, options) {\n                options = execUtils.prepareOptions(method, collection, options);\n                method = execUtils.getFakeBaseMethod(options);\n                return backbone.Collection.prototype.sync.call(this, method, collection, options);\n            };\n            Collection.exec = function (method, options) {\n                options = _.extend({ parse: true }, options);\n                var collection = this;\n                var success = options.success;\n                options.success = function (resp) {\n                    if (options.fetch)\n                        collection[options.reset ? 'reset' : 'set'](resp, options);\n                    if (success)\n                        success.call(options.context, collection, resp, options);\n                    collection.trigger('exec:' + method, collection, resp, options);\n                };\n                execUtils.wrapError(this, options);\n                return this.sync(method, this, options);\n            };\n            module.exports = backbone.Collection.extend(Collection);\n        },\n        function (module, exports) {\n            'use strict';\n            var View = _require(5);\n            var _ = _require(11);\n            var CollectionView = {};\n            var collectionEvents = {\n                    add: '_onCollectionAdd',\n                    change: '_onCollectionChange',\n                    remove: '_onCollectionRemove'\n                };\n            CollectionView._prepareViews = function () {\n                View.prototype._prepareViews.call(this);\n                var self = this;\n                this.views[this.itemsContainer] = this.collection.map(function (model) {\n                    return new self.ItemView({ model: model });\n                });\n            };\n            CollectionView._prepareEntityEvents = function () {\n                View.prototype._prepareEntityEvents.call(this);\n                this._addEntityEvents('collections', collectionEvents);\n            };\n            CollectionView._onCollectionAdd = function (model) {\n                var index = _.indexOf(this.collection.models, model);\n                this.addView(new this.ItemView({ model: model }), this.itemsContainer, { at: index });\n                this.render({ include: this.itemsContainer });\n            };\n            CollectionView._onCollectionChange = function (model) {\n                var index = _.indexOf(this.collection.models, model);\n                var view = this.getView(this.itemsContainer, index);\n                view.render({ force: true });\n            };\n            CollectionView._onCollectionRemove = function (model, collection, options) {\n                var view = this.getView(this.itemsContainer, options.index);\n                view.remove();\n            };\n            module.exports = View.extend(CollectionView);\n        },\n        function (module, exports) {\n            'use strict';\n            var _ = _require(11);\n            var backbone = _require(10);\n            var View = _require(5);\n            var extend = _require(9);\n            function isTreeNodeChanged(oldNode, node) {\n                return Boolean(!oldNode || oldNode.component.name !== node.component.name || !oldNode.view || oldNode.view instanceof node.component.View === false || oldNode.view.isWaiting() || !oldNode.view.attached || !oldNode.view.isUnchanged());\n            }\n            var ComponentsManager = function (options) {\n                options = options || {};\n                _.extend(this, _.pick(options, componentManagerOptions));\n                this.options = options;\n                this.components = {};\n                this.tree = [];\n                this.currentNames = [];\n                if (this.autoAddRoot)\n                    this._addRoot();\n                this.initialize.apply(this, arguments);\n            };\n            var componentManagerOptions = [\n                    'rootEl',\n                    'autoAddRoot'\n                ];\n            var componentOptions = [\n                    'name',\n                    'parent',\n                    'container',\n                    'View',\n                    'model',\n                    'models',\n                    'collection',\n                    'collections',\n                    'viewOptions'\n                ];\n            _.extend(ComponentsManager.prototype, backbone.Events, {\n                rootEl: 'html',\n                autoAddRoot: true,\n                defaultParent: undefined,\n                initialize: function () {\n                },\n                _addRoot: function () {\n                    var RootView = View.extend({ el: this.rootEl });\n                    this.add({\n                        parent: null,\n                        View: RootView\n                    });\n                },\n                add: function (options) {\n                    options = _.defaults({}, options, {\n                        parent: this.defaultParent,\n                        load: false\n                    });\n                    var component = _.pick(options, componentOptions);\n                    var hasName = _.has(component, 'name');\n                    var hasContainer = _.has(component, 'container');\n                    var hasParent = _.isString(component.parent);\n                    var isRoot = _.isNull(component.parent);\n                    var hasDefaultParent = _.isString(this.defaultParent);\n                    if (hasName && !_.isString(component.name)) {\n                        throw new Error('Component `name` option should be a string');\n                    }\n                    if (hasName && _.has(this.components, component.name)) {\n                        throw new Error('Duplicate component with name \"' + component.name + '\"');\n                    }\n                    if (!_.has(component, 'View')) {\n                        throw new Error('Component `View` option is required');\n                    }\n                    if (!hasDefaultParent && _.isUndefined(component.parent)) {\n                        throw new Error('Default root component is not set, add root component first');\n                    }\n                    if (!hasParent && !isRoot) {\n                        throw new Error('Component `parent` option should be a string or null');\n                    }\n                    if (isRoot && hasContainer) {\n                        throw new Error('Root component could not have a container');\n                    }\n                    if (hasParent && !hasContainer) {\n                        throw new Error('Component `container` option is required for components with parent');\n                    }\n                    if (hasContainer && !_.isString(component.container)) {\n                        throw new Error('Component `container` option should be a string selector');\n                    }\n                    if (!hasName) {\n                        component.name = _.uniqueId('__COMPONENT_') + '__';\n                    }\n                    this.components[component.name] = component;\n                    if (isRoot && (!hasDefaultParent || options.default)) {\n                        this.defaultParent = component.name;\n                    }\n                    if (options.load) {\n                        this.load(component.name);\n                    }\n                    return component;\n                },\n                get: function (name) {\n                    var component = this.components[name];\n                    if (!component) {\n                        throw new Error('Component with name \"' + name + '\" does not exist');\n                    }\n                    return component;\n                },\n                remove: function (name) {\n                    delete this.components[name];\n                },\n                load: function (names, options, callback) {\n                    if (_.isFunction(names)) {\n                        callback = names;\n                        names = undefined;\n                        options = undefined;\n                    }\n                    if (_.isFunction(options)) {\n                        callback = options;\n                        options = undefined;\n                    }\n                    names = names || this.currentNames;\n                    options = options || {};\n                    callback = callback || _.noop;\n                    if (!_.isArray(names))\n                        names = [names];\n                    if (!names.length) {\n                        throw new Error('Component name or names to load should be set');\n                    }\n                    var tree = this._buildTree(names);\n                    var oldTree = this.tree;\n                    this.tree = [];\n                    this.currentNames = names;\n                    this._applyTree({\n                        parent: { children: this.tree },\n                        oldTree: oldTree,\n                        tree: tree\n                    }, callback);\n                },\n                _buildTree: function (names) {\n                    var self = this;\n                    var buildHashedTree = function (names, tree) {\n                        if (!names.length)\n                            return tree;\n                        var parentNames = [];\n                        var nodes = _(names).chain().uniq().map(function (name) {\n                                var component = self.get(name);\n                                if (_.has(tree, component.name))\n                                    return null;\n                                var node = {\n                                        component: component,\n                                        children: []\n                                    };\n                                if (_.isString(component.parent)) {\n                                    parentNames.push(component.parent);\n                                }\n                                tree[component.name] = node;\n                                return node;\n                            }).compact().value();\n                        tree = buildHashedTree(parentNames, tree);\n                        _(nodes).each(function (node) {\n                            if (_.isString(node.component.parent)) {\n                                if (node.component.container && _(tree[node.component.parent].children).find(function (child) {\n                                        return child.component.container === node.component.container;\n                                    })) {\n                                    throw new Error('Components could not have same container and parent in one tree');\n                                }\n                                tree[node.component.parent].children.push(node);\n                            }\n                        });\n                        return tree;\n                    };\n                    var tree = buildHashedTree(names, {});\n                    if (_.isEmpty(tree)) {\n                        throw new Error('Components tree is empty');\n                    }\n                    tree = _(tree).filter(function (node) {\n                        return _.isNull(node.component.parent);\n                    });\n                    if (!tree.length) {\n                        throw new Error('Components tree should have at least one root node');\n                    }\n                    if (_(tree).some(function (node) {\n                            return node.component.container;\n                        })) {\n                        throw new Error('Root component could not have a container');\n                    }\n                    return tree;\n                },\n                _applyTree: function (params, callback) {\n                    var self = this;\n                    var parent = params.parent;\n                    var afterCallback = _.after(params.tree.length, callback);\n                    var iterate = function (oldNode, node) {\n                        var container = node.component.container;\n                        var children = node.children;\n                        var oldChildren = oldNode ? oldNode.children : [];\n                        node.view.setData();\n                        if (!node.view.attached && container) {\n                            parent.view.setView(node.view, container).renderViews({ include: [container] }).attachViews({ include: [container] });\n                        } else {\n                            var exclude = _.union(_(children).chain().map(function (child) {\n                                    return child.component.container;\n                                }).compact().value(), _(oldChildren).chain().map(function (child) {\n                                    return child.component.container;\n                                }).compact().value());\n                            node.view.render({ exclude: exclude });\n                        }\n                        node.children = [];\n                        parent.children.push(node);\n                        self._applyTree({\n                            parent: node,\n                            oldTree: oldChildren,\n                            tree: children\n                        }, afterCallback);\n                    };\n                    _(params.tree).each(function (node, index) {\n                        var oldNode = params.oldTree[index] || null;\n                        if (isTreeNodeChanged(oldNode, node)) {\n                            if (oldNode && oldNode.view) {\n                                if (oldNode.component.container) {\n                                    if (oldNode.component.container !== node.component.container) {\n                                        oldNode.view.remove();\n                                    }\n                                } else {\n                                    oldNode.view.detach();\n                                }\n                            }\n                            node.view = new node.component.View(_(node.component).chain().pick('model', 'models', 'collection', 'collections').extend(_.result(node.component, 'viewOptions'), { componentsManager: this }).value());\n                            if (node.view.isWaiting()) {\n                                self.listenToOnce(node.view, 'esencia:resolve', function () {\n                                    iterate(null, node);\n                                });\n                            } else {\n                                iterate(null, node);\n                            }\n                        } else {\n                            node.view = oldNode.view;\n                            iterate(oldNode, node);\n                        }\n                    });\n                }\n            });\n            ComponentsManager.extend = extend;\n            module.exports = ComponentsManager;\n        },\n        function (module, exports) {\n            'use strict';\n            var _ = _require(11);\n            var backbone = _require(10);\n            var execUtils = _require(8);\n            var Model = {};\n            Model.sync = function (method, model, options) {\n                options = execUtils.prepareOptions(method, model, options);\n                method = execUtils.getFakeBaseMethod(options);\n                return backbone.Model.prototype.sync.call(this, method, model, options);\n            };\n            Model.exec = function (method, options) {\n                options = _.extend({ parse: true }, options);\n                var model = this;\n                var success = options.success;\n                options.success = function (resp) {\n                    if (options.fetch) {\n                        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n                        if (!model.set(serverAttrs, options))\n                            return false;\n                    }\n                    if (success)\n                        success.call(options.context, model, resp, options);\n                    model.trigger('exec:' + method, model, resp, options);\n                };\n                execUtils.wrapError(this, options);\n                return this.sync(method, this, options);\n            };\n            module.exports = backbone.Model.extend(Model);\n        },\n        function (module, exports) {\n            'use strict';\n            var _ = _require(11);\n            var backbone = _require(10);\n            var componentsManager = _require(7);\n            var Router = {\n                    componentsManager: componentsManager,\n                    namedParameters: true,\n                    autoloadModules: true,\n                    modulesPath: 'modules/',\n                    defaultModuleName: 'main',\n                    onModuleError: function () {\n                    }\n                };\n            var routerOptions = [\n                    'componentsManager',\n                    'namedParameters',\n                    'autoloadModules',\n                    'modulesPath',\n                    'defaultModuleName',\n                    'onModuleError'\n                ];\n            Router.constructor = function (options) {\n                options = options || {};\n                _.extend(this, _.pick(options, routerOptions));\n                this.options = options;\n                this.modules = {};\n                backbone.Router.apply(this, arguments);\n            };\n            Router.component = function (options) {\n                return this.componentsManager.add(options);\n            };\n            Router.route = function (route, options, callback) {\n                var self = this;\n                if (_.isFunction(options)) {\n                    callback = options;\n                    options = {};\n                }\n                if (!_.isObject(options)) {\n                    options = { name: options };\n                }\n                var name = '';\n                if (_.has(options, 'components') || _.has(options, 'component')) {\n                    var components = _(options.components || [options.component]).map(function (componentOptions) {\n                            if (_.isString(componentOptions)) {\n                                return self.componentsManager.get(componentOptions);\n                            } else {\n                                return self.component(componentOptions);\n                            }\n                        });\n                    var componentNames = _.pluck(components, 'name');\n                    name = componentNames.join(',');\n                    callback = function () {\n                        self.componentsManager.load(componentNames);\n                    };\n                }\n                name = options.name || name;\n                backbone.Router.prototype.route.call(this, route, name, callback);\n            };\n            var namedParam = /(\\(\\?)?:\\w+/g, splatParam = /\\*\\w+/g, namesPattern = /[\\:\\*]([^\\:\\?\\/]+)/g;\n            Router._routeToRegExp = function (route) {\n                var splatMatch = splatParam.exec(route) || { index: -1 }, namedMatch = namedParam.exec(route) || { index: -1 }, paramNames = route.match(namesPattern) || [];\n                route = backbone.Router.prototype._routeToRegExp.call(this, route);\n                if (splatMatch.index >= 0) {\n                    if (namedMatch >= 0) {\n                        route.splatMatch = splatMatch.index - namedMatch.index;\n                    } else {\n                        route.splatMatch = -1;\n                    }\n                }\n                route.paramNames = _(paramNames).map(function (name) {\n                    return name.replace(/\\)$/, '').substring(1);\n                });\n                return route;\n            };\n            Router._extractParameters = function (route, fragment) {\n                var params = backbone.Router.prototype._extractParameters.call(this, route, fragment);\n                var namedParams = {};\n                var length = params.length;\n                if (route.splatMatch) {\n                    if (route.splatMatch < 0) {\n                        return params;\n                    } else {\n                        length = length - 1;\n                    }\n                }\n                console.log('>>>>>>>>', length, route.paramNames);\n                for (var i = 0; i < length; i++) {\n                    if (_.isString(params[i])) {\n                        if (route.paramNames && route.paramNames.length >= i - 1) {\n                            namedParams[route.paramNames[i]] = params[i];\n                        }\n                    }\n                }\n                console.log('>>>>>>>>', namedParams);\n                return this.namedParameters ? [namedParams] : params;\n            };\n            Router.loadModule = function (fragment) {\n                var self = this;\n                fragment = fragment || backbone.history.fragment;\n                var moduleName = this.getModuleName(fragment);\n                require([this.modulesPath + moduleName], function (moduleInit) {\n                    if (!self.modules[moduleName]) {\n                        moduleInit(self);\n                        self.modules[moduleName] = true;\n                        backbone.history.loadUrl(fragment);\n                    }\n                }, this.onModuleError);\n            };\n            Router.getModuleName = function (fragment) {\n                return _(fragment.split('/')).find(_.identity) || this.defaultModuleName;\n            };\n            module.exports = backbone.Router.extend(Router);\n        },\n        function (module, exports) {\n            'use strict';\n            var _ = _require(11);\n            var backbone = _require(10);\n            var $ = backbone.$;\n            var splice = Array.prototype.splice;\n            var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n            var entityNamesSplitter = /\\s*,\\s*/g;\n            function isContainerSkipped(container, options) {\n                var exclude = options.exclude;\n                var include = options.include;\n                return Boolean(exclude && _.contains(_.isArray(exclude) ? exclude : [exclude], container) || include && !_.contains(_.isArray(include) ? include : [include], container));\n            }\n            var View = {\n                    templateHelpers: {},\n                    waitsCounter: 0,\n                    waitAvailable: true,\n                    attached: false\n                };\n            var entityTypes = [\n                    'models',\n                    'collections',\n                    'views'\n                ];\n            var entityEventTypes = [\n                    'modelEvents',\n                    'collectionEvents',\n                    'viewEvents'\n                ];\n            var viewOptions = _.union(entityTypes, entityEventTypes, [\n                    'model',\n                    'collection',\n                    'data',\n                    'componentsManager',\n                    'template',\n                    'templateHelpers',\n                    'ui',\n                    'triggers'\n                ]);\n            View.constructor = function (options) {\n                var self = this;\n                options = options || {};\n                this.data = {};\n                _.extend(this, _.pick(options, viewOptions));\n                this.options = options;\n                this._prepareEntityEvents();\n                this._prepareModels();\n                this._prepareCollections();\n                this._prepareViews();\n                _(this.views).each(function (views, container) {\n                    self.delegateEntityEvents('views', container, views);\n                });\n                backbone.View.call(this, _.omit(options, 'model', 'collection'));\n                _(this.views).each(function (views) {\n                    _(views).each(function (view) {\n                        if (view.isWaiting()) {\n                            self.listenToOnce(view, 'esencia:resolve', self.wait());\n                        }\n                    });\n                });\n                this.waitAvailable = false;\n                _(this.collections).each(function (collection, name) {\n                    self.delegateEntityEvents('collections', name, collection);\n                });\n                _(this.models).each(function (model, name) {\n                    self.delegateEntityEvents('models', name, model);\n                });\n            };\n            View.setData = function (data) {\n                if (data)\n                    this.data = data;\n                return this;\n            };\n            View.isUnchanged = function () {\n                return true;\n            };\n            View.wait = function () {\n                if (!this.waitAvailable) {\n                    throw new Error('Method .wait() is available only in the constructor');\n                }\n                var self = this;\n                this.waitsCounter++;\n                this.trigger('esencia:wait');\n                return _.once(function () {\n                    _.defer(function () {\n                        self.waitsCounter--;\n                        if (!self.isWaiting()) {\n                            self.trigger('esencia:resolve');\n                        }\n                    });\n                });\n            };\n            View.isWaiting = function () {\n                return this.waitsCounter > 0;\n            };\n            View._render = function (options) {\n                if (this.isWaiting())\n                    return this;\n                options = options || {};\n                if (this.template) {\n                    if (options.force || !this.attached || !this.isUnchanged()) {\n                        this.detach();\n                        var data = _(this).chain().result('templateHelpers').extend(this.getTemplateData()).value();\n                        var html = this.renderTemplate(this.template, data);\n                        if (!_.isString(html)) {\n                            throw new Error('`renderTemplate` method should return a HTML string');\n                        }\n                        var $el = $(html);\n                        if (!$el.length) {\n                            throw new Error('View template produces empty html');\n                        }\n                        if ($el.length > 1) {\n                            throw new Error('View template produces html with more than one root elements');\n                        }\n                        this.setElement($el);\n                    }\n                } else {\n                    if (!this.$el.length)\n                        this._ensureElement();\n                }\n                this.trigger('esencia:render');\n                this.renderViews(options);\n                if (!this.parent || this.$container) {\n                    this.attachViews(options);\n                    this.attach();\n                }\n                return this;\n            };\n            View.render = function (options) {\n                return this._render(options);\n            };\n            View.getTemplateData = function () {\n                return this.data;\n            };\n            View.renderTemplate = function (template, data) {\n                if (!_.isFunction(template)) {\n                    throw new Error('View `template` should be a function');\n                }\n                return template(data);\n            };\n            View.renderViews = function (options) {\n                var self = this;\n                _(this.views).each(function (viewsGroup, container) {\n                    if (isContainerSkipped(container, options))\n                        return;\n                    if (!viewsGroup.length)\n                        return;\n                    _(viewsGroup).each(function (view) {\n                        view.render(_.omit(options, 'include', 'exclude'));\n                    });\n                    var $container = container ? self.$(container).first() : self.$el;\n                    if (!$container.length) {\n                        throw new Error('Container \"' + container + '\" is not found');\n                    }\n                    var containerEl = $container.get(0);\n                    var domChanged = _(viewsGroup).some(function (view) {\n                            return !view.attached || !view.$container || view.$container.get(0) !== containerEl;\n                        });\n                    if (domChanged) {\n                        var $els = [];\n                        _(viewsGroup).each(function (view) {\n                            view.$container = $container;\n                            $els.push(view.$el);\n                        });\n                        $container.append($els);\n                    }\n                });\n                return this;\n            };\n            View.setView = function (view, container, options) {\n                return this._setViews([view], container, options);\n            };\n            View.setViews = function (views, container, options) {\n                return this._setViews(views, container, options);\n            };\n            View.appendView = function (view, container, options) {\n                options = _(options || {}).omit('at');\n                return this._addViews([view], container, options);\n            };\n            View.appendViews = function (views, container, options) {\n                options = _(options || {}).omit('at');\n                return this._addViews(views, container, options);\n            };\n            View.prependView = function (view, container, options) {\n                options = _.extend({}, options, { at: 0 });\n                return this._addViews([view], container, options);\n            };\n            View.prependViews = function (views, container, options) {\n                options = _.extend({}, options, { at: 0 });\n                return this._addViews(views, container, options);\n            };\n            View.addView = function (view, container, options) {\n                return this._addViews([view], container, options);\n            };\n            View.addViews = function (views, container, options) {\n                return this._addViews(views, container, options);\n            };\n            View.removeView = function (view, container, at) {\n                if (arguments.length < 2) {\n                    throw new Error('\"view\" or \"at\" arguments must be specified');\n                }\n                if (_.isString(view)) {\n                    at = container;\n                    container = view;\n                    view = this.getView(container, at);\n                    if (!view)\n                        return this;\n                }\n                return this._removeViews([view], container);\n            };\n            View.removeViews = function (views, container) {\n                if (_.isString(views)) {\n                    container = views;\n                    views = this.getViews(container);\n                }\n                return this._removeViews(views, container);\n            };\n            View.getView = function (container, at) {\n                return this.getViews(container)[at || 0] || null;\n            };\n            View.getViews = function (container) {\n                return _.clone(this.views[container]) || [];\n            };\n            View.getViewsCount = function (container) {\n                return (this.views[container] || []).length;\n            };\n            View._addViews = function (views, container, options) {\n                var self = this;\n                var viewsGroup = this.getViews(container);\n                options = _.defaults({}, options, { at: viewsGroup.length });\n                _(views).each(function (view) {\n                    if (view.parent) {\n                        view.parent.removeView(view, view.container);\n                    }\n                });\n                if (!this.views[container])\n                    this.views[container] = [];\n                splice.apply(this.views[container], [\n                    options.at,\n                    0\n                ].concat(views));\n                _(views).each(function (view) {\n                    view.parent = self;\n                    view.container = container;\n                });\n                this.delegateEntityEvents('views', container, views);\n                return this;\n            };\n            View._setViews = function (views, container, options) {\n                options = options || {};\n                var oldViews;\n                if (_.isNumber(options.at)) {\n                    var oldView = this.getView(container, options.at);\n                    oldViews = oldView ? [oldView] : [];\n                } else {\n                    oldViews = this.getViews(container);\n                }\n                if (oldViews.length === views.length && _(oldViews).all(function (oldView, index) {\n                        return oldView === views[index];\n                    }))\n                    return this;\n                if (oldViews.length) {\n                    this._removeViews(oldViews, container);\n                    _(oldViews).each(function (view) {\n                        view.remove();\n                    });\n                }\n                return this._addViews(views, container, options);\n            };\n            View._removeViews = function (views, container) {\n                var self = this;\n                var viewsGroup = this.getViews(container);\n                if (!viewsGroup.length)\n                    return this;\n                var viewObjs = _(views).chain().uniq().map(function (view) {\n                        return {\n                            view: view,\n                            index: _.indexOf(viewsGroup, view)\n                        };\n                    }).filter(function (viewObj) {\n                        return viewObj.index >= 0;\n                    }).sortBy(function (viewObj) {\n                        return -viewObj.index;\n                    }).value();\n                if (!viewObjs.length)\n                    return this;\n                _(viewObjs).each(function (viewObj) {\n                    var view = viewObj.view;\n                    splice.call(self.views[container], viewObj.index, 1);\n                    self.undelegateEntityEvents(view);\n                    delete view.parent;\n                });\n                return this;\n            };\n            View.setElement = function (element) {\n                var $previousEl = this.$el;\n                this._setElement(element);\n                if ($previousEl && this.$container) {\n                    $previousEl.replaceWith(this.$el);\n                }\n                this.ensureUI();\n                return this;\n            };\n            View.ensureUI = function (ui) {\n                ui = ui || _.result(this, 'ui', {});\n                var self = this;\n                this.$ui = _(ui).mapObject(function (selector) {\n                    return self.$(selector);\n                });\n                return this;\n            };\n            View.delegateTriggers = function (triggers) {\n                triggers = triggers || _.result(this, 'triggers');\n                if (!triggers)\n                    return this;\n                var self = this;\n                this.undelegateTriggers();\n                _(triggers).each(function (event, key) {\n                    var match = key.match(delegateEventSplitter);\n                    var eventName = match[1];\n                    var selector = match[2];\n                    self.delegateTrigger(eventName, selector, _.bind(self.trigger, self, event));\n                });\n                return this;\n            };\n            View.delegateTrigger = function (eventName, selector, listener) {\n                this.$el.on(eventName + '.delegateTriggers' + this.cid, selector, listener);\n                return this;\n            };\n            View.undelegateTriggers = function () {\n                if (this.$el)\n                    this.$el.off('.delegateTriggers' + this.cid);\n                return this;\n            };\n            View.undelegateTrigger = function (eventName, selector, listener) {\n                this.$el.off(eventName + '.delegateTriggers' + this.cid, selector, listener);\n                return this;\n            };\n            View.delegateEntityEvents = function (entityType, entityName, entities) {\n                if (!_.has(this._entityEvents, entityType)) {\n                    throw new Error('Wrong entity type \"' + entityType + '\", available values: ' + entityTypes.join(', '));\n                }\n                var self = this;\n                if (!entities)\n                    entities = this[entityType][entityName];\n                if (!entities)\n                    return this;\n                if (!_.isArray(entities))\n                    entities = [entities];\n                var events = this._entityEvents[entityType][entityName];\n                if (events) {\n                    this.undelegateEntityEvents(entities);\n                    _(events).each(function (event) {\n                        _(entities).each(function (entity) {\n                            self.listenTo(entity, event.name, event.listener);\n                        });\n                    });\n                }\n                return this;\n            };\n            View.undelegateEntityEvents = function (entities) {\n                var self = this;\n                if (!_.isArray(entities))\n                    entities = [entities];\n                _(entities).each(function (entity) {\n                    self.stopListening(entity);\n                });\n                return this;\n            };\n            View._prepareEntityEvents = function () {\n                var self = this;\n                this._entityEvents = {};\n                _(entityTypes).each(function (entityType) {\n                    self._entityEvents[entityType] = {};\n                });\n                _(entityEventTypes).each(function (eventType, index) {\n                    var events = _.result(self, eventType);\n                    if (!events)\n                        return;\n                    var entityType = entityTypes[index];\n                    self._addEntityEvents(entityType, events);\n                });\n            };\n            View._addEntityEvents = function (entityType, events) {\n                var self = this;\n                _(events).each(function (method, key) {\n                    if (!_.isFunction(method))\n                        method = self[method];\n                    if (!method)\n                        return;\n                    var match = key.match(delegateEventSplitter);\n                    var eventName = match[1];\n                    var entityNames = match[2].replace(entityNamesSplitter, ',').split(',');\n                    method = _.bind(method, self);\n                    _(entityNames).each(function (entityName) {\n                        self._addEntityEvent(entityType, entityName, eventName, method);\n                    });\n                });\n            };\n            View._addEntityEvent = function (entityType, entityName, eventName, listener) {\n                var entityEvents = this._entityEvents[entityType];\n                entityEvents[entityName] = entityEvents[entityName] || [];\n                entityEvents[entityName].push({\n                    name: eventName,\n                    listener: listener\n                });\n            };\n            View._prepareViews = function () {\n                this.views = _.result(this, 'views', {});\n                this.views = _(this.views).mapObject(function (views) {\n                    if (!views)\n                        return [];\n                    views = _.isArray(views) ? views : [views];\n                    return _(views).map(function (view) {\n                        return _.isFunction(view) ? new view() : view;\n                    });\n                });\n            };\n            View._prepareModels = function () {\n                this.models = _.result(this, 'models', {});\n                this.models = _(this.models).mapObject(function (model) {\n                    return _.isFunction(model) ? new model() : model;\n                });\n                if (this.model) {\n                    if (_.isFunction(this.model))\n                        this.model = new this.model();\n                    this.models[''] = this.model;\n                }\n            };\n            View._prepareCollections = function () {\n                this.collections = _.result(this, 'collections', {});\n                this.collections = _(this.collections).mapObject(function (collection) {\n                    return _.isFunction(collection) ? new collection() : collection;\n                });\n                if (this.collection) {\n                    if (_.isFunction(this.collection))\n                        this.collection = new this.collection();\n                    this.collections[''] = this.collection;\n                }\n            };\n            View.attachViews = function (options) {\n                options = options || {};\n                _(this.views).each(function (viewsGroup, container) {\n                    if (isContainerSkipped(container, options))\n                        return;\n                    if (!viewsGroup.length)\n                        return;\n                    _(viewsGroup).each(function (view) {\n                        view.attachViews(_.omit(options, 'include', 'exclude'));\n                        view.attach();\n                    });\n                });\n                return this;\n            };\n            View.afterAttach = function () {\n                return this;\n            };\n            View.attach = function () {\n                if (this.attached)\n                    return this;\n                var previousView = this.$el.data('esencia-view');\n                if (previousView)\n                    previousView.detach();\n                this.$el.data('esencia-view', this).attr('esencia-view', this.cid);\n                this.delegateEvents();\n                this.delegateTriggers();\n                this.attached = true;\n                this.afterAttach();\n                this.trigger('esencia:attach');\n                return this;\n            };\n            View.detachViews = function () {\n                _(this.views).each(function (viewsGroup) {\n                    if (!viewsGroup.length)\n                        return;\n                    _(viewsGroup).each(function (view) {\n                        view.detachViews();\n                        view.detach();\n                    });\n                });\n                return this;\n            };\n            View.beforeDetach = function () {\n                return this;\n            };\n            View.detach = function () {\n                if (!this.attached)\n                    return this;\n                this.trigger('esencia:detach');\n                this.beforeDetach();\n                this.$el.removeData('esencia-view').removeAttr('esencia-view');\n                this.undelegateEvents();\n                this.undelegateTriggers();\n                this.attached = false;\n                return this;\n            };\n            View.remove = function () {\n                if (this.parent) {\n                    this.parent.removeView(this, this.container);\n                }\n                this.detachViews();\n                this.detach();\n                return backbone.View.prototype.remove.call(this);\n            };\n            View.getClosestView = function (selector) {\n                var $selector = $(selector);\n                if (!$selector.is('[esencia-view]')) {\n                    $selector = $selector.closest('[esencia-view]');\n                }\n                return $selector.length ? $selector.data('esencia-view') : null;\n            };\n            module.exports = backbone.View.extend(View);\n        },\n        function (module, exports) {\n            'use strict';\n            var backbone = _require(10);\n            var _ = _require(11);\n            var Router = _require(4);\n            var Collection = _require(0);\n            var Model = _require(3);\n            var View = _require(5);\n            var CollectionView = _require(1);\n            var ComponentsManager = _require(2);\n            var componentsManager = _require(7);\n            var extend = _require(9);\n            var Esencia = exports;\n            _.extend(Esencia, backbone.Events);\n            var backboneFields = [\n                    'Events',\n                    'History',\n                    'history'\n                ];\n            _.extend(Esencia, _.pick(backbone, backboneFields));\n            _.extend(Esencia, {\n                Router: Router,\n                Collection: Collection,\n                Model: Model,\n                View: View,\n                CollectionView: CollectionView,\n                ComponentsManager: ComponentsManager\n            });\n            Esencia.componentsManager = componentsManager;\n            Esencia.extend = extend;\n        },\n        function (module, exports) {\n            'use strict';\n            var ComponentsManager = _require(2);\n            module.exports = new ComponentsManager();\n        },\n        function (module, exports) {\n            'use strict';\n            var _ = _require(11);\n            var DEFAULT_EXEC_TYPE = 'PUT';\n            var urlError = function () {\n                throw new Error('A `url` property or function must be specified');\n            };\n            exports.wrapError = function (model, options) {\n                var error = options.error;\n                options.error = function (resp) {\n                    if (error)\n                        error.call(options.context, model, resp, options);\n                    model.trigger('error', model, resp, options);\n                };\n            };\n            exports.prepareOptions = function (method, model, options) {\n                options = _.extend({\n                    type: DEFAULT_EXEC_TYPE,\n                    dataType: 'json',\n                    contentType: 'application/json',\n                    processData: false\n                }, options);\n                if (!options.url) {\n                    var url = _.result(model, 'url') || urlError();\n                    options.url = url.replace(/[^\\/]$/, '$&/') + method;\n                }\n                if (options.data && _.isObject(options.data) && !options.processData) {\n                    options.data = JSON.stringify(options.data);\n                }\n                return options;\n            };\n            var baseMethodsMap = {\n                    'POST': 'create',\n                    'PUT': 'update',\n                    'PATCH': 'patch',\n                    'DELETE': 'delete',\n                    'GET': 'read'\n                };\n            exports.getFakeBaseMethod = function (options) {\n                return baseMethodsMap[options.type.toUpperCase()];\n            };\n        },\n        function (module, exports) {\n            'use strict';\n            var backbone = _require(10);\n            module.exports = backbone.View.extend;\n        },\n        function (module, exports) {\n            module.exports = __external_Backbone;\n        },\n        function (module, exports) {\n            module.exports = __external__;\n        }\n    ];\n    return _require(6);\n}));\n//# sourceMappingURL=esencia.js.map\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar execUtils = require('../utils/exec');\n\n/**\n * @class Esencia.Collection\n * @extend Backbone.Collection\n */\n\nvar Collection = {};\n\n/**\n * Override `sync` to add exec custom method functionality\n *\n * @override\n */\n\nCollection.sync = function(method, collection, options) {\n\toptions = execUtils.prepareOptions(method, collection, options);\n\tmethod = execUtils.getFakeBaseMethod(options);\n\treturn backbone.Collection.prototype.sync.call(\n\t\tthis, method, collection, options\n\t);\n};\n\n/**\n * Exec custom non-REST method on collection\n * It trigger `exec:[method]` event after success method exec\n *\n * @param {String} method\n * @param {Object} options\n */\n\nCollection.exec = function(method, options) {\n\toptions = _.extend({parse: true}, options);\n\tvar collection = this;\n\tvar success = options.success;\n\toptions.success = function(resp) {\n\t\tif (options.fetch) collection[options.reset ? 'reset' : 'set'](resp, options);\n\t\tif (success) success.call(options.context, collection, resp, options);\n\t\tcollection.trigger('exec:' + method, collection, resp, options);\n\t};\n\texecUtils.wrapError(this, options);\n\treturn this.sync(method, this, options);\n};\n\nmodule.exports = backbone.Collection.extend(Collection);\n","'use strict';\n\nvar View = require('./view');\nvar _ = require('underscore');\n\nvar CollectionView = {};\n\nvar collectionEvents = {\n\tadd: '_onCollectionAdd',\n\tchange: '_onCollectionChange',\n\tremove: '_onCollectionRemove'\n};\n\nCollectionView._prepareViews = function() {\n\tView.prototype._prepareViews.call(this);\n\n\tvar self = this;\n\tthis.views[this.itemsContainer] = this.collection.map(function(model) {\n\t\treturn new self.ItemView({model: model});\n\t});\n};\n\nCollectionView._prepareEntityEvents = function() {\n\tView.prototype._prepareEntityEvents.call(this);\n\n\tthis._addEntityEvents('collections', collectionEvents);\n};\n\nCollectionView._onCollectionAdd = function(model) {\n\tvar index = _.indexOf(this.collection.models, model);\n\tthis.addView(\n\t\tnew this.ItemView({model: model}),\n\t\tthis.itemsContainer,\n\t\t{at: index}\n\t);\n\tthis.render({include: this.itemsContainer});\n};\n\nCollectionView._onCollectionChange = function(model) {\n\tvar index = _.indexOf(this.collection.models, model);\n\tvar view = this.getView(this.itemsContainer, index);\n\tview.render({force: true});\n};\n\nCollectionView._onCollectionRemove = function(model, collection, options) {\n\tvar view = this.getView(this.itemsContainer, options.index);\n\tview.remove();\n};\n\nmodule.exports = View.extend(CollectionView);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar View = require('./view');\nvar extend = require('../utils/extend');\n\nfunction isTreeNodeChanged(oldNode, node) {\n\treturn Boolean(\n\t\t!oldNode ||\n\t\toldNode.component.name !== node.component.name ||\n\t\t!oldNode.view ||\n\t\toldNode.view instanceof node.component.View === false ||\n\t\toldNode.view.isWaiting() ||\n\t\t!oldNode.view.attached ||\n\t\t!oldNode.view.isUnchanged()\n\t);\n}\n\n/**\n * @class Esencia.ComponentsManager\n */\n\nvar ComponentsManager = function(options) {\n\toptions = options || {};\n\n\t// populate ComponentsManager instance with fields from options\n\t_.extend(this, _.pick(options, componentManagerOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\t// all components hash\n\tthis.components = {};\n\n\t// current components tree that loaded at this moment\n\tthis.tree = [];\n\n\t// component names of the loaded tree at this moment\n\tthis.currentNames = [];\n\n\t// add default root component, in most cases this is what you need\n\tif (this.autoAddRoot) this._addRoot();\n\n\tthis.initialize.apply(this, arguments);\n};\n\nvar componentManagerOptions = [\n\t'rootEl', 'autoAddRoot'\n];\n\n var componentOptions = [\n\t'name', 'parent', 'container', 'View', 'model', 'models',\n\t'collection', 'collections', 'viewOptions'\n];\n\n_.extend(ComponentsManager.prototype, backbone.Events, {\n\t// You can set selector of any element at the page if you want restrict\n\t// specific page area that component manager will process\n\trootEl: 'html',\n\n\t// Add default root component, in most cases this is what you need\n\tautoAddRoot: true,\n\n\t// Default parent component name is undefined until any root component will\n\t// added\n\t// When root component is added, it name will set as value of this field\n\tdefaultParent: undefined,\n\n\t/**\n\t * Initialize is an empty function by default. Override it with your own\n\t * initialization logic.\n\t */\n\n\tinitialize: function() {},\n\n\t/**\n\t * Add default root component to the components list\n\t */\n\n\t_addRoot: function() {\n\t\tvar RootView = View.extend({\n\t\t\tel: this.rootEl\n\t\t});\n\n\t\tthis.add({\n\t\t\tparent: null,\n\t\t\tView: RootView\n\t\t});\n\t},\n\n\t/**\n\t * Add component to the components list\n\t *\n\t * @param {Object} options\n\t * @param {String} options.name - component name\n\t * @param {View} options.View - component view constructor\n\t * @param {String|Null} [options.parent] - component parent name or null\n\t * for roots\n\t * @param {String} [options.container] - view container, required if parent\n\t * is string\n\t * @param {Boolean} [options.load] - load component after add\n\t */\n\n\tadd: function(options) {\n\t\toptions = _.defaults({}, options, {\n\t\t\tparent: this.defaultParent,\n\t\t\tload: false\n\t\t});\n\n\t\tvar component = _.pick(options, componentOptions);\n\n\t\tvar hasName = _.has(component, 'name');\n\t\tvar hasContainer = _.has(component, 'container');\n\t\tvar hasParent = _.isString(component.parent);\n\t\tvar isRoot = _.isNull(component.parent);\n\t\tvar hasDefaultParent = _.isString(this.defaultParent);\n\n\t\tif (hasName && !_.isString(component.name)) {\n\t\t\tthrow new Error('Component `name` option should be a string');\n\t\t}\n\n\t\tif (hasName && _.has(this.components, component.name)) {\n\t\t\tthrow new Error('Duplicate component with name \"' + component.name + '\"');\n\t\t}\n\n\t\tif (!_.has(component, 'View')) {\n\t\t\tthrow new Error('Component `View` option is required');\n\t\t}\n\n\t\tif (!hasDefaultParent && _.isUndefined(component.parent)) {\n\t\t\tthrow new Error(\n\t\t\t\t'Default root component is not set, add root component first'\n\t\t\t);\n\t\t}\n\n\t\tif (!hasParent && !isRoot) {\n\t\t\tthrow new Error('Component `parent` option should be a string or null');\n\t\t}\n\n\t\tif (isRoot && hasContainer) {\n\t\t\tthrow new Error('Root component could not have a container');\n\t\t}\n\n\t\tif (hasParent && !hasContainer) {\n\t\t\tthrow new Error(\n\t\t\t\t'Component `container` option is required for components with parent'\n\t\t\t);\n\t\t}\n\n\t\tif (hasContainer && !_.isString(component.container)) {\n\t\t\tthrow new Error('Component `container` option should be a string selector');\n\t\t}\n\n\t\t// generate uniq component name if compoent has not a name\n\t\tif (!hasName) {\n\t\t\tcomponent.name = _.uniqueId('__COMPONENT_') + '__';\n\t\t}\n\n\t\tthis.components[component.name] = component;\n\n\t\tif (isRoot && (!hasDefaultParent || options.default)) {\n\t\t\tthis.defaultParent = component.name;\n\t\t}\n\n\t\t// process components tree in force mode\n\t\tif (options.load) {\n\t\t\tthis.load(component.name);\n\t\t}\n\n\t\treturn component;\n\t},\n\n\t/**\n\t * Get component by name\n\t *\n\t * @param {String} name - component name\n\t * @return {Object} component\n\t */\n\n\tget: function(name) {\n\t\tvar component = this.components[name];\n\n\t\tif (!component) {\n\t\t\tthrow new Error('Component with name \"' + name + '\" does not exist');\n\t\t}\n\n\t\treturn component;\n\t},\n\n\t/**\n\t * Remove component by name\n\t *\n\t * @param {String} name - component name\n\t */\n\n\tremove: function(name) {\n\t\tdelete this.components[name];\n\t},\n\n\t/**\n\t * Load components tree by name(s) and call a callback on done\n\t *\n\t * @param {String|String[]} [names] - component name or names list\n\t * @param {Object} [options]\n\t * @params {Function} [callback]\n\t */\n\n\tload: function(names, options, callback) {\n\t\tif (_.isFunction(names)) {\n\t\t\tcallback = names;\n\t\t\tnames = undefined;\n\t\t\toptions = undefined;\n\t\t}\n\n\t\tif (_.isFunction(options)) {\n\t\t\tcallback = options;\n\t\t\toptions = undefined;\n\t\t}\n\n\t\tnames = names || this.currentNames;\n\t\toptions = options || {};\n\t\tcallback = callback || _.noop;\n\n\t\tif (!_.isArray(names)) names = [names];\n\t\tif (!names.length) {\n\t\t\tthrow new Error('Component name or names to load should be set');\n\t\t}\n\n\t\tvar tree = this._buildTree(names);\n\t\tvar oldTree = this.tree;\n\t\tthis.tree = [];\n\n\t\tthis.currentNames = names;\n\n\t\tthis._applyTree({\n\t\t\tparent: {children: this.tree},\n\t\t\toldTree: oldTree,\n\t\t\ttree: tree\n\t\t}, callback);\n\t},\n\n\t_buildTree: function(names) {\n\t\tvar self = this;\n\n\t\t// internal function for recursion\n\t\tvar buildHashedTree = function(names, tree) {\n\t\t\t// exit with empty tree if names list is empty\n\t\t\tif (!names.length) return tree;\n\n\t\t\tvar parentNames = [];\n\n\t\t\t// create component nodes\n\t\t\tvar nodes = _(names)\n\t\t\t\t.chain()\n\t\t\t\t.uniq()\n\t\t\t\t.map(function(name) {\n\t\t\t\t\tvar component = self.get(name);\n\n\t\t\t\t\t// skip component if it is already in the tree\n\t\t\t\t\tif (_.has(tree, component.name)) return null;\n\n\t\t\t\t\t// create node\n\t\t\t\t\tvar node = {\n\t\t\t\t\t\tcomponent: component,\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t};\n\n\t\t\t\t\t// add parent name to the list\n\t\t\t\t\tif (_.isString(component.parent)) {\n\t\t\t\t\t\tparentNames.push(component.parent);\n\t\t\t\t\t}\n\n\t\t\t\t\t// add nodes to the hashed tree first to prevent cycles\n\t\t\t\t\ttree[component.name] = node;\n\n\t\t\t\t\treturn node;\n\t\t\t\t})\n\t\t\t\t.compact()\n\t\t\t\t.value();\n\n\t\t\t// build new tree for parent components\n\t\t\ttree = buildHashedTree(parentNames, tree);\n\n\t\t\t// add each node to the parent children list if component has a parent\n\t\t\t_(nodes).each(function(node) {\n\t\t\t\tif (_.isString(node.component.parent)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.component.container &&\n\t\t\t\t\t\t_(tree[node.component.parent].children).find(function(child) {\n\t\t\t\t\t\t\treturn child.component.container === node.component.container;\n\t\t\t\t\t\t})\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Components could not have same container and parent in one tree'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\ttree[node.component.parent].children.push(node);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn tree;\n\t\t};\n\n\t\tvar tree = buildHashedTree(names, {});\n\n\t\tif (_.isEmpty(tree)) {\n\t\t\tthrow new Error('Components tree is empty');\n\t\t}\n\n\t\t// filter root components\n\t\ttree = _(tree).filter(function(node) {\n\t\t\treturn _.isNull(node.component.parent);\n\t\t});\n\n\t\tif (!tree.length) {\n\t\t\tthrow new Error('Components tree should have at least one root node');\n\t\t}\n\n\t\tif (\n\t\t\t_(tree).some(function(node) {\n\t\t\t\treturn node.component.container;\n\t\t\t})\n\t\t) {\n\t\t\tthrow new Error('Root component could not have a container');\n\t\t}\n\n\t\treturn tree;\n\t},\n\n\t_applyTree: function(params, callback) {\n\t\tvar self = this;\n\n\t\tvar parent = params.parent;\n\n\t\tvar afterCallback = _.after(params.tree.length, callback);\n\n\t\tvar iterate = function(oldNode, node) {\n\t\t\tvar container = node.component.container;\n\n\t\t\tvar children = node.children;\n\t\t\tvar oldChildren = oldNode ? oldNode.children : [];\n\n\t\t\t// set view data\n\t\t\tnode.view.setData();\n\n\t\t\tif (!node.view.attached && container) {\n\t\t\t\t// render view with container from parent view\n\t\t\t\tparent.view\n\t\t\t\t\t.setView(node.view, container)\n\t\t\t\t\t.renderViews({include: [container]})\n\t\t\t\t\t.attachViews({include: [container]});\n\t\t\t} else {\n\t\t\t\t// exclude list is an union of old and new children\n\t\t\t\tvar exclude = _.union(\n\t\t\t\t\t_(children).chain().map(function(child) {\n\t\t\t\t\t\treturn child.component.container;\n\t\t\t\t\t}).compact().value(),\n\t\t\t\t\t_(oldChildren).chain().map(function(child) {\n\t\t\t\t\t\treturn child.component.container;\n\t\t\t\t\t}).compact().value()\n\t\t\t\t);\n\n\t\t\t\t// render view without container directly\n\t\t\t\tnode.view.render({exclude: exclude});\n\t\t\t}\n\n\t\t\t// clear children field in new node because it will set recursive\n\t\t\t// and should be empty in error case\n\t\t\tnode.children = [];\n\n\t\t\t// save node to the parent children\n\t\t\tparent.children.push(node);\n\n\t\t\t// recursive call for children nodes\n\t\t\tself._applyTree({\n\t\t\t\tparent: node,\n\t\t\t\toldTree: oldChildren,\n\t\t\t\ttree: children\n\t\t\t}, afterCallback);\n\t\t};\n\n\t\t_(params.tree).each(function(node, index) {\n\t\t\t// TODO get oldNode in better way\n\t\t\tvar oldNode = params.oldTree[index] || null;\n\n\t\t\tif (isTreeNodeChanged(oldNode, node)) {\n\t\t\t\tif (oldNode && oldNode.view) {\n\t\t\t\t\tif (oldNode.component.container) {\n\t\t\t\t\t\t// remove old view if container for new view dirrent\n\t\t\t\t\t\tif (oldNode.component.container !== node.component.container) {\n\t\t\t\t\t\t\toldNode.view.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// detach old view if it has not a container\n\t\t\t\t\t\toldNode.view.detach();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// create new view\n\t\t\t\tnode.view = new (node.component.View)(\n\t\t\t\t\t_(node.component)\n\t\t\t\t\t\t.chain()\n\t\t\t\t\t\t.pick('model', 'models', 'collection', 'collections')\n\t\t\t\t\t\t.extend(_.result(node.component, 'viewOptions'), {\n\t\t\t\t\t\t\tcomponentsManager: this\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.value()\n\t\t\t\t);\n\n\t\t\t\t// stop processing old components tree by passing null as oldNode\n\t\t\t\tif (node.view.isWaiting()) {\n\t\t\t\t\t// wait when view will be resolved\n\t\t\t\t\tself.listenToOnce(node.view, 'esencia:resolve', function() {\n\t\t\t\t\t\titerate(null, node);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\titerate(null, node);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// save old view to new node\n\t\t\t\tnode.view = oldNode.view;\n\n\t\t\t\t// process old components tree\n\t\t\t\titerate(oldNode, node);\n\t\t\t}\n\t\t});\n\t}\n});\n\nComponentsManager.extend = extend;\n\nmodule.exports = ComponentsManager;\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar execUtils = require('../utils/exec');\n\n/**\n * @class Esencia.Model\n * @extend Backbone.Model\n */\n\nvar Model = {};\n\n/**\n * Override `sync` to add exec custom method functionality\n *\n * @override\n */\n\nModel.sync = function(method, model, options) {\n\toptions = execUtils.prepareOptions(method, model, options);\n\tmethod = execUtils.getFakeBaseMethod(options);\n\treturn backbone.Model.prototype.sync.call(this, method, model, options);\n};\n\n/**\n * Exec custom non-REST method on model\n * It trigger `exec:[method]` event after success method exec\n *\n * @param {String} method\n * @param {Object} options\n */\n\nModel.exec = function(method, options) {\n\toptions = _.extend({parse: true}, options);\n\tvar model = this;\n\tvar success = options.success;\n\toptions.success = function(resp) {\n\t\tif (options.fetch) {\n\t\t\tvar serverAttrs = options.parse ? model.parse(resp, options) : resp;\n\t\t\tif (!model.set(serverAttrs, options)) return false;\n\t\t}\n\t\tif (success) success.call(options.context, model, resp, options);\n\t\tmodel.trigger('exec:' + method, model, resp, options);\n\t};\n\texecUtils.wrapError(this, options);\n\treturn this.sync(method, this, options);\n};\n\nmodule.exports = backbone.Model.extend(Model);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\nvar componentsManager = require('../utils/componentsManager');\n\n/**\n * @class Esencia.Router\n * @extend Backbone.Router\n */\n\nvar Router = {\n\tcomponentsManager: componentsManager,\n\tnamedParameters: true,\n\tautoloadModules: true,\n\tmodulesPath: 'modules/',\n\tdefaultModuleName: 'main',\n\tonModuleError: function() {}\n};\n\nvar routerOptions = [\n\t'componentsManager', 'namedParameters',\n\t'autoloadModules', 'modulesPath', 'defaultModuleName', 'onModuleError'\n];\n\n/**\n * @constructor\n * @param {Object} [options]\n */\n\nRouter.constructor = function(options) {\n\toptions = options || {};\n\n\t// populate Router instance with fields from options\n\t_.extend(this, _.pick(options, routerOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\tthis.modules = {};\n\n\tbackbone.Router.apply(this, arguments);\n};\n\n/**\n * Add new component to components manager\n *\n * @param {Object} options - component options\n */\n\nRouter.component = function(options) {\n\treturn this.componentsManager.add(options);\n};\n\n/**\n * Override `route` to add components processing functionality\n *\n * @override\n */\n\nRouter.route = function(route, options, callback) {\n\tvar self = this;\n\n\tif (_.isFunction(options)) {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\n\tif (!_.isObject(options)) {\n\t\toptions = {name: options};\n\t}\n\n\tvar name = '';\n\n\tif (_.has(options, 'components') || _.has(options, 'component')) {\n\t\tvar components = _(options.components || [options.component])\n\t\t\t.map(function(componentOptions) {\n\t\t\t\tif (_.isString(componentOptions)) {\n\t\t\t\t\treturn self.componentsManager.get(componentOptions);\n\t\t\t\t} else {\n\t\t\t\t\treturn self.component(componentOptions);\n\t\t\t\t}\n\t\t\t});\n\n\t\tvar componentNames = _.pluck(components, 'name');\n\n\t\tname = componentNames.join(',');\n\n\t\t// create callback to load components tree\n\t\tcallback = function() {\n\t\t\tself.componentsManager.load(componentNames);\n\t\t};\n\t}\n\n\tname = options.name || name;\n\n\t// bind component to route\n\tbackbone.Router.prototype.route.call(this, route, name, callback);\n};\n\nvar namedParam = /(\\(\\?)?:\\w+/g,\n\tsplatParam = /\\*\\w+/g,\n\tnamesPattern = /[\\:\\*]([^\\:\\?\\/]+)/g;\n\nRouter._routeToRegExp = function(route) {\n\tvar splatMatch = (splatParam.exec(route) || {index: -1}),\n\t\tnamedMatch = (namedParam.exec(route) || {index: -1}),\n\t\tparamNames = route.match(namesPattern) || [];\n\n\troute = backbone.Router.prototype._routeToRegExp.call(this, route);\n\n\t// use the rtn value to hold some parameter data\n\tif (splatMatch.index >= 0) {\n\t\t// there is a splat\n\t\tif (namedMatch >= 0) {\n\t\t\t// negative value will indicate there is a splat match before any named matches\n\t\t\troute.splatMatch = splatMatch.index - namedMatch.index;\n\t\t} else {\n\t\t\troute.splatMatch = -1;\n\t\t}\n\t}\n\n\t// Map and remove any trailing ')' character that has been caught up in regex matching\n\troute.paramNames = _(paramNames).map(function(name) {\n\t\treturn name.replace(/\\)$/, '').substring(1);\n\t});\n\n\treturn route;\n};\n\nRouter._extractParameters = function(route, fragment) {\n\tvar params = backbone.Router.prototype._extractParameters.call(\n\t\tthis, route, fragment\n\t);\n\tvar namedParams = {};\n\n\t// decode params\n\tvar length = params.length;\n\tif (route.splatMatch) {\n\t\tif (route.splatMatch < 0) {\n\t\t\t// splat param is first\n\t\t\treturn params;\n\t\t} else {\n\t\t\tlength = length - 1;\n\t\t}\n\t}\n\n\tconsole.log('>>>>>>>>', length, route.paramNames)\n\n\tfor (var i = 0; i < length; i++) {\n\t\tif (_.isString(params[i])) {\n\t\t\tif (route.paramNames && route.paramNames.length >= i - 1) {\n\t\t\t\tnamedParams[route.paramNames[i]] = params[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.log('>>>>>>>>', namedParams)\n\n\treturn this.namedParameters ? [namedParams] : params;\n\n\n\t// return backbone.Router.prototype._extractParameters\n\t// \t.call(this, route, fragment);\n};\n\n/**\n * Load module file and init it\n *\n * @param {Object} fragment\n */\n\nRouter.loadModule = function(fragment) {\n\tvar self = this;\n\n\tfragment = fragment || backbone.history.fragment;\n\n\tvar moduleName = this.getModuleName(fragment);\n\n\t// require module file\n\trequire([this.modulesPath + moduleName], function(moduleInit) {\n\t\t// if module is loaded first time\n\t\tif (!self.modules[moduleName]) {\n\t\t\t// init it\n\t\t\tmoduleInit(self);\n\n\t\t\t// set module init flag to true\n\t\t\tself.modules[moduleName] = true;\n\n\t\t\t// and navigate again with force flag\n\t\t\tbackbone.history.loadUrl(fragment);\n\t\t}\n\t}, this.onModuleError);\n};\n\nRouter.getModuleName = function(fragment) {\n\treturn _(fragment.split('/')).find(_.identity) || this.defaultModuleName;\n};\n\nmodule.exports = backbone.Router.extend(Router);\n","'use strict';\n\nvar _ = require('underscore');\nvar backbone = require('backbone');\n\n// Take jquery or other selectors lib from backbone\nvar $ = backbone.$;\n\nvar splice = Array.prototype.splice;\n\n// Cached regex to split keys for `delegate`.\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\nvar entityNamesSplitter = /\\s*,\\s*/g;\n\nfunction isContainerSkipped(container, options) {\n\tvar exclude = options.exclude;\n\tvar include = options.include;\n\treturn Boolean(\n\t\texclude && _.contains(_.isArray(exclude) ? exclude : [exclude], container) ||\n\t\tinclude && !_.contains(_.isArray(include) ? include : [include], container)\n\t);\n}\n\n/**\n * @class Esencia.View\n * @extend Backbone.View\n */\n\nvar View = {\n\t// Helpers (Object|Fuction) which will be passed to the template\n\ttemplateHelpers: {},\n\n\t// Views are in the resolved state by default\n\twaitsCounter: 0,\n\n\t// This flag is used to check that .wait() is called\n\t// in the constructor/initialize\n\twaitAvailable: true,\n\n\t// Views are not attached by default\n\tattached: false\n};\n\nvar entityTypes = ['models', 'collections', 'views'];\nvar entityEventTypes = ['modelEvents', 'collectionEvents', 'viewEvents'];\nvar viewOptions = _.union(entityTypes, entityEventTypes, [\n\t'model', 'collection', 'data', 'componentsManager',\n\t'template', 'templateHelpers', 'ui', 'triggers'\n]);\n\n/**\n * @constructor\n * @param {Object} [options]\n */\n\nView.constructor = function(options) {\n\tvar self = this;\n\n\toptions = options || {};\n\n\t// data is empty object by default\n\tthis.data = {};\n\n\t// populate View instance with fields from options\n\t_.extend(this, _.pick(options, viewOptions));\n\t// save original options, it is sometimes usefull\n\tthis.options = options;\n\n\t// create special hash object for all entity events for fast search\n\tthis._prepareEntityEvents();\n\n\t// create instances of nested models\n\tthis._prepareModels();\n\n\t// create instances of nested collections\n\tthis._prepareCollections();\n\n\t// prepare nested views: create instances and wrap to arrays\n\tthis._prepareViews();\n\n\t// delegate events for each views group before constructor\n\t_(this.views).each(function(views, container) {\n\t\tself.delegateEntityEvents('views', container, views);\n\t});\n\n\t// apply default backbone.View constructor\n\t// omit model and collection because we alredy processed this options\n\tbackbone.View.call(this, _.omit(options, 'model', 'collection'));\n\n\t// set waiting state for current view if some nested view is in waiting state\n\t_(this.views).each(function(views) {\n\t\t_(views).each(function(view) {\n\t\t\tif (view.isWaiting()) {\n\t\t\t\tself.listenToOnce(view, 'esencia:resolve', self.wait());\n\t\t\t}\n\t\t});\n\t});\n\n\t// disable .wait(), it available only in the constructor/initialize\n\tthis.waitAvailable = false;\n\n\t// we should delegate events after parent constructor call because\n\t// collections and models could be created in the initialize method\n\n\t// delegate events for each collection\n\t_(this.collections).each(function(collection, name) {\n\t\tself.delegateEntityEvents('collections', name, collection);\n\t});\n\n\t// delegate events for each model\n\t_(this.models).each(function(model, name) {\n\t\tself.delegateEntityEvents('models', name, model);\n\t});\n};\n\n/**\n * Update view data\n * Method is used to update view state, could be overriden to modify nested\n * views state\n *\n * @param {Object} [data] - new data object\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setData = function(data) {\n\tif (data) this.data = data;\n\treturn this;\n};\n\n/**\n * Check that view is changed and should be re-rendered\n * Method returns true by default (always unchanged), could be overriden\n * for specific logic\n *\n * @return {Boolean}\n */\n\nView.isUnchanged = function() {\n\treturn true;\n};\n\n/**\n * Switch view to the waiting state\n *\n * @return {Function} - callback function, should be called to resolve view\n */\n\nView.wait = function() {\n\tif (!this.waitAvailable) {\n\t\tthrow new Error('Method .wait() is available only in the constructor');\n\t}\n\n\tvar self = this;\n\n\tthis.waitsCounter++;\n\n\tthis.trigger('esencia:wait');\n\n\t// TODO: think about promises\n\treturn _.once(function() {\n\t\t_.defer(function() {\n\t\t\tself.waitsCounter--;\n\t\t\tif (!self.isWaiting()) {\n\t\t\t\tself.trigger('esencia:resolve');\n\t\t\t}\n\t\t});\n\t});\n};\n\n/**\n * Check view waiting state\n *\n * @return {Boolean}\n */\n\nView.isWaiting = function() {\n\treturn this.waitsCounter > 0;\n};\n\n/**\n * Render view\n *\n * @param {Object} options\n * @param {Boolean} options.force\n * @return {Esencia.View} - view instance for chaining\n */\n\nView._render = function(options) {\n\t// stop rendering if view in `waiting` state, resolve it first\n\tif (this.isWaiting()) return this;\n\n\toptions = options || {};\n\n\tif (this.template) {\n\t\t// re-render template only if it exists and if it is necessary\n\t\tif (options.force || !this.attached || !this.isUnchanged()) {\n\t\t\t// detach view from DOM element\n\t\t\tthis.detach();\n\n\t\t\t// render template with data\n\t\t\tvar data = _(this)\n\t\t\t\t.chain()\n\t\t\t\t.result('templateHelpers')\n\t\t\t\t.extend(this.getTemplateData())\n\t\t\t\t.value();\n\t\t\tvar html = this.renderTemplate(this.template, data);\n\n\t\t\tif (!_.isString(html)) {\n\t\t\t\tthrow new Error('`renderTemplate` method should return a HTML string');\n\t\t\t}\n\n\t\t\t// render html with jqeury (or other lib) call\n\t\t\tvar $el = $(html);\n\n\t\t\tif (!$el.length) {\n\t\t\t\tthrow new Error('View template produces empty html');\n\t\t\t}\n\n\t\t\tif ($el.length > 1) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'View template produces html with more than one root elements'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.setElement($el);\n\t\t}\n\t} else {\n\t\t// re-ensure element if it is not ensured\n\t\tif (!this.$el.length) this._ensureElement();\n\t}\n\n\t// trigger event\n\tthis.trigger('esencia:render');\n\n\t// render nested views\n\tthis.renderViews(options);\n\n\tif (!this.parent || this.$container) {\n\t\t// attach all nested views first\n\t\tthis.attachViews(options);\n\n\t\t// attach current view\n\t\tthis.attach();\n\t}\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Render view by calling private _render method\n *\n * @override\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.render = function(options) {\n\treturn this._render(options);\n};\n\n/**\n * Get data for template rendering\n * Returns data by default, could be overriden\n *\n * @return {Object}\n */\n\nView.getTemplateData = function() {\n\treturn this.data;\n};\n\n/**\n * Render template with data, return html\n * By default this method simply calls template function with data as argument\n * Override this function to change template rendering logic\n *\n * @param {Function} template - template function for rendering\n * @param {Object} data - data for rendering\n * @return {String} - rendered html\n */\n\nView.renderTemplate = function(template, data) {\n\tif (!_.isFunction(template)) {\n\t\tthrow new Error('View `template` should be a function');\n\t}\n\n\treturn template(data);\n};\n\n/**\n * Render all nested view\n *\n * @param {Object} options\n * @param {Boolean} options.force\n * @return {Esencia.View} - view instance for chaining\n*/\n\nView.renderViews = function(options) {\n\tvar self = this;\n\n\t// iterate by each views group\n\t_(this.views).each(function(viewsGroup, container) {\n\t\tif (isContainerSkipped(container, options)) return;\n\n\t\t// return if view group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call render for each views from view group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\tview.render(_.omit(options, 'include', 'exclude'));\n\t\t});\n\n\t\t// get first container or $el\n\t\tvar $container = container ? self.$(container).first() : self.$el;\n\n\t\tif (!$container.length) {\n\t\t\tthrow new Error('Container \"' + container + '\" is not found');\n\t\t}\n\n\t\tvar containerEl = $container.get(0);\n\n\t\t// dom is changed if some view from group is not in current container\n\t\tvar domChanged = _(viewsGroup).some(function(view) {\n\t\t\treturn (\n\t\t\t\t!view.attached ||\n\t\t\t\t!view.$container ||\n\t\t\t\tview.$container.get(0) !== containerEl\n\t\t\t);\n\t\t});\n\n\t\tif (domChanged) {\n\t\t\t// re-append views group to container\n\t\t\tvar $els = [];\n\n\t\t\t_(viewsGroup).each(function(view) {\n\t\t\t\tview.$container = $container;\n\t\t\t\t$els.push(view.$el);\n\t\t\t});\n\n\t\t\t// TODO: add some rendering optimizations here\n\n\t\t\t// put all views to $container\n\t\t\t$container.append($els);\n\t\t}\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Set view to the views group or replace some view at the specified position\n *\n * @param {Esencia.View} view\n * @param {String} container - container selector\n * @param {Object} [options]\n * @param {Integer} [options.at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setView = function(view, container, options) {\n\treturn this._setViews([view], container, options);\n};\n\n/**\n * Set views to the views group or replace some view at the specified position\n *\n * @param {Esencia.View[]} views\n * @param {String} container - container selector\n * @param {Object} [options]\n * @param {Integer} [options.at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setViews = function(views, container, options) {\n\treturn this._setViews(views, container, options);\n};\n\n/**\n * Append view to the end of views group\n *\n * @param {Esencia.View} view\n * @param {String} container - container selector\n * @param {Object} [options]\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.appendView = function(view, container, options) {\n\toptions = _(options || {}).omit('at');\n\treturn this._addViews([view], container, options);\n};\n\n/**\n * Append views to the end of views group\n *\n * @param {Esencia.View[]} views\n * @param {String} container - container selector\n * @param {Object} [options]\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.appendViews = function(views, container, options) {\n\toptions = _(options || {}).omit('at');\n\treturn this._addViews(views, container, options);\n};\n\n/**\n * Prepend view to start of views group\n *\n * @param {Esencia.View} view\n * @param {String} container - container selector\n * @param {Object} [options]\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.prependView = function(view, container, options) {\n\toptions = _.extend({}, options, {at: 0});\n\treturn this._addViews([view], container, options);\n};\n\n/**\n * Prepend views to start of views group\n *\n * @param {Esencia.View[]} views\n * @param {String} container - container selector\n * @param {Object} [options]\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.prependViews = function(views, container, options) {\n\toptions = _.extend({}, options, {at: 0});\n\treturn this._addViews(views, container, options);\n};\n\n/**\n * Insert view to the views group at the specified position\n * If options.at is not passed method inserts view to the end of\n * the views group (append-like)\n *\n * @param {Esencia.View} view\n * @param {String} container - container selector\n * @param {Object} [options]\n * @param {Integer} [options.at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.addView = function(view, container, options) {\n\treturn this._addViews([view], container, options);\n};\n\n/**\n * Insert views to the views group at the specified position\n * If options.at is not passed method inserts views to the end of\n * the views group (append-like)\n *\n * @param {Esencia.View[]} views\n * @param {String} container - container selector\n * @param {Object} [options]\n * @param {Integer} [options.at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.addViews = function(views, container, options) {\n\treturn this._addViews(views, container, options);\n};\n\n/**\n * Remove view from views group container by index or view instance\n * If index is passed it remove view at the specified position\n *\n * @param {Esencia.View} [view]\n * @param {String} container - container selector\n * @param {Integer} [at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.removeView = function(view, container, at) {\n\tif (arguments.length < 2) {\n\t\tthrow new Error('\"view\" or \"at\" arguments must be specified');\n\t}\n\n\tif (_.isString(view)) {\n\t\tat = container;\n\t\tcontainer = view;\n\t\tview = this.getView(container, at);\n\t\tif (!view) return this;\n\t}\n\n\treturn this._removeViews([view], container);\n};\n\n/**\n * Remove views from views group container\n * If views are passed remove only these views\n * Othervise remove all views from container\n *\n * @param {Esencia.View[]} [views]\n * @param {String} container - container selector\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.removeViews = function(views, container) {\n\tif (_.isString(views)) {\n\t\tcontainer = views;\n\t\tviews = this.getViews(container);\n\t}\n\n\treturn this._removeViews(views, container);\n};\n\n/**\n * Get single view from views group at the specified position\n *\n * @param {String} container - container selector\n * @param {Integer} [at] - position in the group\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.getView = function(container, at) {\n\treturn this.getViews(container)[at || 0] || null;\n};\n\n/**\n * Get views group\n *\n * @param {String} container - container selector\n * @return {Esencia.View[]} - view instance for chaining\n */\n\nView.getViews = function(container) {\n\treturn _.clone(this.views[container]) || [];\n};\n\n/**\n * Get views count in the views group\n *\n * @param {String} container - container selector\n * @return {Integer}\n */\n\nView.getViewsCount = function(container) {\n\treturn (this.views[container] || []).length;\n};\n\nView._addViews = function(views, container, options) {\n\tvar self = this;\n\n\tvar viewsGroup = this.getViews(container);\n\n\t// if index is not specified set it value as last index of views group\n\toptions = _.defaults({}, options, {at: viewsGroup.length});\n\n\t_(views).each(function(view) {\n\t\tif (view.parent) {\n\t\t\tview.parent.removeView(view, view.container);\n\t\t}\n\t});\n\n\n\t// insert views\n\tif (!this.views[container]) this.views[container] = [];\n\tsplice.apply(this.views[container], [options.at, 0].concat(views));\n\n\t// set each view parent to current\n\t_(views).each(function(view) {\n\t\tview.parent = self;\n\t\tview.container = container;\n\t});\n\n\tthis.delegateEntityEvents('views', container, views);\n\n\treturn this;\n};\n\nView._setViews = function(views, container, options) {\n\toptions = options || {};\n\n\tvar oldViews;\n\n\tif (_.isNumber(options.at)) {\n\t\t// if index is specified get view from specific position as old\n\t\tvar oldView = this.getView(container, options.at);\n\t\toldViews = oldView ? [oldView] : [];\n\t} else {\n\t\t// if no index - get all views from group as old\n\t\toldViews = this.getViews(container);\n\t}\n\n\t// exit if views equal oldViews\n\tif (\n\t\toldViews.length === views.length &&\n\t\t_(oldViews).all(function(oldView, index) {\n\t\t\treturn oldView === views[index];\n\t\t})\n\t) return this;\n\n\tif (oldViews.length) {\n\t\t// if old views array is not empty remove them from parent view\n\t\tthis._removeViews(oldViews, container);\n\n\t\t// and remove views from DOM\n\t\t_(oldViews).each(function(view) {\n\t\t\tview.remove();\n\t\t});\n\t}\n\n\t// insert new views\n\treturn this._addViews(views, container, options);\n};\n\nView._removeViews = function(views, container) {\n\tvar self = this;\n\n\tvar viewsGroup = this.getViews(container);\n\n\tif (!viewsGroup.length) return this;\n\n\tvar viewObjs = _(views)\n\t\t.chain()\n\t\t.uniq()\n\t\t.map(function(view) {\n\t\t\treturn {\n\t\t\t\tview: view,\n\t\t\t\tindex: _.indexOf(viewsGroup, view)\n\t\t\t};\n\t\t})\n\t\t.filter(function(viewObj) {\n\t\t\treturn viewObj.index >= 0;\n\t\t})\n\t\t.sortBy(function(viewObj) {\n\t\t\treturn -viewObj.index;\n\t\t})\n\t\t.value();\n\n\tif (!viewObjs.length) return this;\n\n\t_(viewObjs).each(function(viewObj) {\n\t\tvar view = viewObj.view;\n\n\t\t// remove item from group\n\t\tsplice.call(self.views[container], viewObj.index, 1);\n\n\t\t// undelegate all entity events\n\t\tself.undelegateEntityEvents(view);\n\n\t\t// unset view parent\n\t\tdelete view.parent;\n\t});\n\n\treturn this;\n};\n\n/**\n * Original setElement do undelegateEvents/delegateEvents, we remove it\n * because we have special detach/attach methods for this purpose\n *\n * @override\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.setElement = function(element) {\n\tvar $previousEl = this.$el;\n\n\tthis._setElement(element);\n\n\t// insert html to $el\n\tif ($previousEl && this.$container) {\n\t\t$previousEl.replaceWith(this.$el);\n\t}\n\n\tthis.ensureUI();\n\n\treturn this;\n};\n\nView.ensureUI = function(ui) {\n\tui = ui || _.result(this, 'ui', {});\n\tvar self = this;\n\tthis.$ui = _(ui).mapObject(function(selector) {\n\t\treturn self.$(selector);\n\t});\n\treturn this;\n};\n\nView.delegateTriggers = function(triggers) {\n\ttriggers = triggers || _.result(this, 'triggers');\n\tif (!triggers) return this;\n\tvar self = this;\n\tthis.undelegateTriggers();\n\t_(triggers).each(function(event, key) {\n\t\tvar match = key.match(delegateEventSplitter);\n\t\tvar eventName = match[1];\n\t\tvar selector = match[2];\n\t\tself.delegateTrigger(eventName, selector, _.bind(self.trigger, self, event));\n\t});\n\treturn this;\n};\n\nView.delegateTrigger = function(eventName, selector, listener) {\n\tthis.$el.on(eventName + '.delegateTriggers' + this.cid, selector, listener);\n\treturn this;\n};\n\nView.undelegateTriggers = function() {\n\tif (this.$el) this.$el.off('.delegateTriggers' + this.cid);\n\treturn this;\n};\n\nView.undelegateTrigger = function(eventName, selector, listener) {\n\tthis.$el.off(eventName + '.delegateTriggers' + this.cid, selector, listener);\n\treturn this;\n};\n\nView.delegateEntityEvents = function(entityType, entityName, entities) {\n\tif (!_.has(this._entityEvents, entityType)) {\n\t\tthrow new Error(\n\t\t\t'Wrong entity type \"' + entityType + '\", available values: ' +\n\t\t\tentityTypes.join(', ')\n\t\t);\n\t}\n\n\tvar self = this;\n\n\tif (!entities) entities = this[entityType][entityName];\n\tif (!entities) return this;\n\tif (!_.isArray(entities)) entities = [entities];\n\tvar events = this._entityEvents[entityType][entityName];\n\tif (events) {\n\t\tthis.undelegateEntityEvents(entities);\n\n\t\t_(events).each(function(event) {\n\t\t\t_(entities).each(function(entity) {\n\t\t\t\tself.listenTo(entity, event.name, event.listener);\n\t\t\t});\n\t\t});\n\t}\n\n\treturn this;\n};\n\nView.undelegateEntityEvents = function(entities) {\n\tvar self = this;\n\tif (!_.isArray(entities)) entities = [entities];\n\t_(entities).each(function(entity) {\n\t\tself.stopListening(entity);\n\t});\n\treturn this;\n};\n\nView._prepareEntityEvents = function() {\n\tvar self = this;\n\n\t// Hash for entity events fast search\n\tthis._entityEvents = {};\n\t_(entityTypes).each(function(entityType) {\n\t\tself._entityEvents[entityType] = {};\n\t});\n\n\t// bind all prefixed events to view then call native delegate events\n\t_(entityEventTypes).each(function(eventType, index) {\n\t\tvar events = _.result(self, eventType);\n\t\tif (!events) return;\n\t\tvar entityType = entityTypes[index];\n\t\tself._addEntityEvents(entityType, events);\n\t});\n};\n\nView._addEntityEvents = function(entityType, events) {\n\tvar self = this;\n\n\t_(events).each(function(method, key) {\n\t\tif (!_.isFunction(method)) method = self[method];\n\t\tif (!method) return;\n\t\tvar match = key.match(delegateEventSplitter);\n\t\tvar eventName = match[1];\n\t\tvar entityNames = match[2].replace(entityNamesSplitter, ',').split(',');\n\t\tmethod = _.bind(method, self);\n\t\t_(entityNames).each(function(entityName) {\n\t\t\tself._addEntityEvent(entityType, entityName, eventName, method);\n\t\t});\n\t});\n};\n\nView._addEntityEvent = function(entityType, entityName, eventName, listener) {\n\tvar entityEvents = this._entityEvents[entityType];\n\tentityEvents[entityName] = entityEvents[entityName] || [];\n\tentityEvents[entityName].push({\n\t\tname: eventName,\n\t\tlistener: listener\n\t});\n};\n\n/**\n * Wrap all non-array view groups to arrays with one element and delegate events\n */\n\nView._prepareViews = function() {\n\tthis.views = _.result(this, 'views', {});\n\n\tthis.views = _(this.views).mapObject(function(views) {\n\t\tif (!views) return [];\n\t\tviews = _.isArray(views) ? views : [views];\n\t\treturn _(views).map(function(view) {\n\t\t\treturn _.isFunction(view) ? new view() : view;\n\t\t});\n\t});\n};\n\nView._prepareModels = function() {\n\tthis.models = _.result(this, 'models', {});\n\n\tthis.models = _(this.models).mapObject(function(model) {\n\t\treturn _.isFunction(model) ? new model() : model;\n\t});\n\n\tif (this.model) {\n\t\tif (_.isFunction(this.model)) this.model = new this.model();\n\t\tthis.models[''] = this.model;\n\t}\n};\n\nView._prepareCollections = function() {\n\tthis.collections = _.result(this, 'collections', {});\n\n\tthis.collections = _(this.collections).mapObject(function(collection) {\n\t\treturn _.isFunction(collection) ? new collection() : collection;\n\t});\n\n\tif (this.collection) {\n\t\tif (_.isFunction(this.collection)) this.collection = new this.collection();\n\t\tthis.collections[''] = this.collection;\n\t}\n};\n\n/**\n * Attach all nested views\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.attachViews = function(options) {\n\toptions = options || {};\n\n\t// iterate by each nested views groups\n\t_(this.views).each(function(viewsGroup, container) {\n\t\tif (isContainerSkipped(container, options)) return;\n\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call attach method for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\t// recursive attach all nested views\n\t\t\tview.attachViews(_.omit(options, 'include', 'exclude'));\n\n\t\t\t// attach current view\n\t\t\tview.attach();\n\t\t});\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * afterAttach is empty by default\n * It called after attach call, could be verriden to add some specific logic\n * for DOM manipulations\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.afterAttach = function() {\n\treturn this;\n};\n\n/**\n * Attach new view to current view $el\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.attach = function() {\n\t// return if current view is already attached\n\tif (this.attached) return this;\n\n\t// detach previous view\n\tvar previousView = this.$el.data('esencia-view');\n\tif (previousView) previousView.detach();\n\n\t// attach current view and set attr\n\tthis.$el.data('esencia-view', this).attr('esencia-view', this.cid);\n\n\t// enable all DOM events\n\tthis.delegateEvents();\n\n\tthis.delegateTriggers();\n\n\tthis.attached = true;\n\n\t// do some user afterAttach actions\n\tthis.afterAttach();\n\n\t// trigger attach event\n\tthis.trigger('esencia:attach');\n\n\treturn this;\n};\n\n/**\n * Detach all nested views\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.detachViews = function() {\n\t// iterate by each views groups\n\t_(this.views).each(function(viewsGroup) {\n\t\t// return if views group is empty\n\t\tif (!viewsGroup.length) return;\n\n\t\t// call detach method for each nested view from views group\n\t\t_(viewsGroup).each(function(view) {\n\t\t\t// recursive detach all nested views\n\t\t\tview.detachViews();\n\n\t\t\t// detach current view\n\t\t\tview.detach();\n\t\t});\n\t});\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * beforeDetach is empty by default\n * It called before detach method call, could be overriden to add some specific\n * logic before view detach from dom\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.beforeDetach = function() {\n\treturn this;\n};\n\n/**\n * Detach view from current view $el\n *\n * @return {Esencia.View} - view instance for chaining\n */\n\nView.detach = function() {\n\t// return if current view is not already attached\n\tif (!this.attached) return this;\n\n\t// trigger detach event\n\tthis.trigger('esencia:detach');\n\n\t// do some user beforeDetach actions\n\tthis.beforeDetach();\n\n\t// remove attr and data from $el\n\tthis.$el.removeData('esencia-view').removeAttr('esencia-view');\n\n\t// disable all DOM events\n\tthis.undelegateEvents();\n\n\tthis.undelegateTriggers();\n\n\tthis.attached = false;\n\n\t// return this for chaining\n\treturn this;\n};\n\n/**\n * Remove view from parent container and remove element from DOM\n */\n\nView.remove = function() {\n\t// remove current view from parent view container\n\tif (this.parent) {\n\t\tthis.parent.removeView(this, this.container);\n\t}\n\n\t// detach all nested views first\n\tthis.detachViews();\n\n\t// detach current view\n\tthis.detach();\n\n\t// remove DOM element\n\treturn backbone.View.prototype.remove.call(this);\n};\n\n/**\n * Get view, that attached to closest element with attr `esencia-view`\n *\n * @param {String | $} selector\n * @return {Esencia.View | Null}\n */\n\nView.getClosestView = function(selector) {\n\tvar $selector = $(selector);\n\n\tif (!$selector.is('[esencia-view]')) {\n\t\t$selector = $selector.closest('[esencia-view]');\n\t}\n\n\treturn $selector.length ? $selector.data('esencia-view') : null;\n};\n\nmodule.exports = backbone.View.extend(View);\n","'use strict';\n\nvar backbone = require('backbone');\nvar _ = require('underscore');\nvar Router = require('./classes/router');\nvar Collection = require('./classes/collection');\nvar Model = require('./classes/model');\nvar View = require('./classes/view');\nvar CollectionView = require('./classes/collectionView');\nvar ComponentsManager = require('./classes/componentsManager');\nvar componentsManager = require('./utils/componentsManager');\nvar extend = require('./utils/extend');\n\nvar Esencia = exports;\n\n// Allow the `Esencia` object to serve as a global event bus, for folks who\n// want global \"pubsub\" in a convenient place.\n_.extend(Esencia, backbone.Events);\n\n// Export some Backbone fields\nvar backboneFields = ['Events', 'History', 'history'];\n_.extend(Esencia, _.pick(backbone, backboneFields));\n\n// Export all Esencia classes\n_.extend(Esencia, {\n\tRouter: Router,\n\tCollection: Collection,\n\tModel: Model,\n\tView: View,\n\tCollectionView: CollectionView,\n\tComponentsManager: ComponentsManager\n});\n\n// Export the default Esencia.componentsManager\nEsencia.componentsManager = componentsManager;\n\n// Export extend helper for subclassing\nEsencia.extend = extend;\n","'use strict';\n\nvar ComponentsManager = require('../classes/componentsManager');\n\n// Create the default Esencia.componentsManager\nmodule.exports = new ComponentsManager();\n","'use strict';\n\nvar _ = require('underscore');\n\n// Default http method type for exec methods\nvar DEFAULT_EXEC_TYPE = 'PUT';\n\n// Throw an error when a URL is needed, and none is supplied.\nvar urlError = function() {\n\tthrow new Error('A `url` property or function must be specified');\n};\n\n// Wrap an optional error callback with a fallback error event.\nexports.wrapError = function(model, options) {\n\tvar error = options.error;\n\toptions.error = function(resp) {\n\t\tif (error) error.call(options.context, model, resp, options);\n\t\tmodel.trigger('error', model, resp, options);\n\t};\n};\n\nexports.prepareOptions = function(method, model, options) {\n\toptions = _.extend({\n\t\ttype: DEFAULT_EXEC_TYPE,\n\t\tdataType: 'json',\n\t\tcontentType: 'application/json',\n\t\tprocessData: false\n\t}, options);\n\n\t// Ensure that we have a URL and add method name to it\n\tif (!options.url) {\n\t\tvar url = _.result(model, 'url') || urlError();\n\t\toptions.url = url.replace(/[^\\/]$/, '$&/') + method;\n\t}\n\n\t// stringify data to json\n\tif (options.data && _.isObject(options.data) && !options.processData) {\n\t\toptions.data = JSON.stringify(options.data);\n\t}\n\n\treturn options;\n};\n\n// HTTP type to backbone sync methods map\nvar baseMethodsMap = {\n\t'POST': 'create',\n\t'PUT': 'update',\n\t'PATCH': 'patch',\n\t'DELETE': 'delete',\n\t'GET': 'read'\n};\n\nexports.getFakeBaseMethod = function(options) {\n\treturn baseMethodsMap[options.type.toUpperCase()];\n};\n","'use strict';\n\nvar backbone = require('backbone');\n\n// There is no good exports of extend method from backbone.\n// Take it from View because no other ways\nmodule.exports = backbone.View.extend;\n"],"sourceRoot":"."}